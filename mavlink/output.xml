<mavlink>
  <version>3</version>
  <dialect>0</dialect>
  <enums>
    <enum name="MAV_AUTOPILOT">
      <description>Micro air vehicle / autopilot classes. This identifies the individual model.</description>
      <entry name="MAV_AUTOPILOT_GENERIC" value="0">
        <description>Generic autopilot, full support for everything</description>
      </entry>
      <entry name="MAV_AUTOPILOT_RESERVED" value="1">
        <description>Reserved for future use.</description>
      </entry>
      <entry name="MAV_AUTOPILOT_SLUGS" value="2">
        <description>SLUGS autopilot, http://slugsuav.soe.ucsc.edu</description>
      </entry>
      <entry name="MAV_AUTOPILOT_ARDUPILOTMEGA" value="3">
        <description>ArduPilotMega / ArduCopter, http://diydrones.com</description>
      </entry>
      <entry name="MAV_AUTOPILOT_OPENPILOT" value="4">
        <description>OpenPilot, http://openpilot.org</description>
      </entry>
      <entry name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY" value="5">
        <description>Generic autopilot only supporting simple waypoints</description>
      </entry>
      <entry name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY" value="6">
        <description>Generic autopilot supporting waypoints and other simple navigation commands</description>
      </entry>
      <entry name="MAV_AUTOPILOT_GENERIC_MISSION_FULL" value="7">
        <description>Generic autopilot supporting the full mission command set</description>
      </entry>
      <entry name="MAV_AUTOPILOT_INVALID" value="8">
        <description>No valid autopilot, e.g. a GCS or other MAVLink component</description>
      </entry>
      <entry name="MAV_AUTOPILOT_PPZ" value="9">
        <description>PPZ UAV - http://nongnu.org/paparazzi</description>
      </entry>
      <entry name="MAV_AUTOPILOT_UDB" value="10">
        <description>UAV Dev Board</description>
      </entry>
      <entry name="MAV_AUTOPILOT_FP" value="11">
        <description>FlexiPilot</description>
      </entry>
      <entry name="MAV_AUTOPILOT_PX4" value="12">
        <description>PX4 Autopilot - http://pixhawk.ethz.ch/px4/</description>
      </entry>
      <entry name="MAV_AUTOPILOT_SMACCMPILOT" value="13">
        <description>SMACCMPilot - http://smaccmpilot.org</description>
      </entry>
      <entry name="MAV_AUTOPILOT_AUTOQUAD" value="14">
        <description>AutoQuad -- http://autoquad.org</description>
      </entry>
      <entry name="MAV_AUTOPILOT_ARMAZILA" value="15">
        <description>Armazila -- http://armazila.com</description>
      </entry>
      <entry name="MAV_AUTOPILOT_AEROB" value="16">
        <description>Aerob -- http://aerob.ru</description>
      </entry>
      <entry name="MAV_AUTOPILOT_ASLUAV" value="17">
        <description>ASLUAV autopilot -- http://www.asl.ethz.ch</description>
      </entry>
      <entry name="MAV_AUTOPILOT_SMARTAP" value="18">
        <description>SmartAP Autopilot - http://sky-drones.com</description>
      </entry>
    </enum>
    <enum name="MAV_TYPE">
      <entry name="MAV_TYPE_GENERIC" value="0">
        <description>Generic micro air vehicle.</description>
      </entry>
      <entry name="MAV_TYPE_FIXED_WING" value="1">
        <description>Fixed wing aircraft.</description>
      </entry>
      <entry name="MAV_TYPE_QUADROTOR" value="2">
        <description>Quadrotor</description>
      </entry>
      <entry name="MAV_TYPE_COAXIAL" value="3">
        <description>Coaxial helicopter</description>
      </entry>
      <entry name="MAV_TYPE_HELICOPTER" value="4">
        <description>Normal helicopter with tail rotor.</description>
      </entry>
      <entry name="MAV_TYPE_ANTENNA_TRACKER" value="5">
        <description>Ground installation</description>
      </entry>
      <entry name="MAV_TYPE_GCS" value="6">
        <description>Operator control unit / ground control station</description>
      </entry>
      <entry name="MAV_TYPE_AIRSHIP" value="7">
        <description>Airship, controlled</description>
      </entry>
      <entry name="MAV_TYPE_FREE_BALLOON" value="8">
        <description>Free balloon, uncontrolled</description>
      </entry>
      <entry name="MAV_TYPE_ROCKET" value="9">
        <description>Rocket</description>
      </entry>
      <entry name="MAV_TYPE_GROUND_ROVER" value="10">
        <description>Ground rover</description>
      </entry>
      <entry name="MAV_TYPE_SURFACE_BOAT" value="11">
        <description>Surface vessel, boat, ship</description>
      </entry>
      <entry name="MAV_TYPE_SUBMARINE" value="12">
        <description>Submarine</description>
      </entry>
      <entry name="MAV_TYPE_HEXAROTOR" value="13">
        <description>Hexarotor</description>
      </entry>
      <entry name="MAV_TYPE_OCTOROTOR" value="14">
        <description>Octorotor</description>
      </entry>
      <entry name="MAV_TYPE_TRICOPTER" value="15">
        <description>Tricopter</description>
      </entry>
      <entry name="MAV_TYPE_FLAPPING_WING" value="16">
        <description>Flapping wing</description>
      </entry>
      <entry name="MAV_TYPE_KITE" value="17">
        <description>Kite</description>
      </entry>
      <entry name="MAV_TYPE_ONBOARD_CONTROLLER" value="18">
        <description>Onboard companion controller</description>
      </entry>
      <entry name="MAV_TYPE_VTOL_DUOROTOR" value="19">
        <description>Two-rotor VTOL using control surfaces in vertical operation in addition. Tailsitter.</description>
      </entry>
      <entry name="MAV_TYPE_VTOL_QUADROTOR" value="20">
        <description>Quad-rotor VTOL using a V-shaped quad config in vertical operation. Tailsitter.</description>
      </entry>
      <entry name="MAV_TYPE_VTOL_TILTROTOR" value="21">
        <description>Tiltrotor VTOL</description>
      </entry>
      
      <entry name="MAV_TYPE_VTOL_RESERVED2" value="22">
        <description>VTOL reserved 2</description>
      </entry>
      <entry name="MAV_TYPE_VTOL_RESERVED3" value="23">
        <description>VTOL reserved 3</description>
      </entry>
      <entry name="MAV_TYPE_VTOL_RESERVED4" value="24">
        <description>VTOL reserved 4</description>
      </entry>
      <entry name="MAV_TYPE_VTOL_RESERVED5" value="25">
        <description>VTOL reserved 5</description>
      </entry>
      <entry name="MAV_TYPE_GIMBAL" value="26">
        <description>Onboard gimbal</description>
      </entry>
      <entry name="MAV_TYPE_ADSB" value="27">
        <description>Onboard ADSB peripheral</description>
      </entry>
      <entry name="MAV_TYPE_PARAFOIL" value="28">
        <description>Steerable, nonrigid airfoil</description>
      </entry>
    </enum>
    <enum name="FIRMWARE_VERSION_TYPE">
      <description>These values define the type of firmware release.  These values indicate the first version or release of this type.  For example the first alpha release would be 64, the second would be 65.</description>
      <entry name="FIRMWARE_VERSION_TYPE_DEV" value="0">
        <description>development release</description>
      </entry>
      <entry name="FIRMWARE_VERSION_TYPE_ALPHA" value="64">
        <description>alpha release</description>
      </entry>
      <entry name="FIRMWARE_VERSION_TYPE_BETA" value="128">
        <description>beta release</description>
      </entry>
      <entry name="FIRMWARE_VERSION_TYPE_RC" value="192">
        <description>release candidate</description>
      </entry>
      <entry name="FIRMWARE_VERSION_TYPE_OFFICIAL" value="255">
        <description>official stable release</description>
      </entry>
    </enum>
    
    <enum name="MAV_MODE_FLAG">
      <description>These flags encode the MAV mode.</description>
      <entry name="MAV_MODE_FLAG_SAFETY_ARMED" value="128">
        <description>0b10000000 MAV safety set to armed. Motors are enabled / running / can start. Ready to fly. Additional note: this flag is to be ignore when sent in the command MAV_CMD_DO_SET_MODE and MAV_CMD_COMPONENT_ARM_DISARM shall be used instead. The flag can still be used to report the armed state.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_MANUAL_INPUT_ENABLED" value="64">
        <description>0b01000000 remote control input is enabled.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_HIL_ENABLED" value="32">
        <description>0b00100000 hardware in the loop simulation. All motors / actuators are blocked, but internal software is full operational.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_STABILIZE_ENABLED" value="16">
        <description>0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_GUIDED_ENABLED" value="8">
        <description>0b00001000 guided mode enabled, system flies waypoints / mission items.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_AUTO_ENABLED" value="4">
        <description>0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_TEST_ENABLED" value="2">
        <description>0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations.</description>
      </entry>
      <entry name="MAV_MODE_FLAG_CUSTOM_MODE_ENABLED" value="1">
        <description>0b00000001 Reserved for future use.</description>
      </entry>
    </enum>
    <enum name="MAV_MODE_FLAG_DECODE_POSITION">
      <description>These values encode the bit positions of the decode position. These values can be used to read the value of a flag bit by combining the base_mode variable with AND with the flag position value. The result will be either 0 or 1, depending on if the flag is set or not.</description>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_SAFETY" value="128">
        <description>First bit:  10000000</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_MANUAL" value="64">
        <description>Second bit: 01000000</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_HIL" value="32">
        <description>Third bit:  00100000</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_STABILIZE" value="16">
        <description>Fourth bit: 00010000</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_GUIDED" value="8">
        <description>Fifth bit:  00001000</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_AUTO" value="4">
        <description>Sixt bit:   00000100</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_TEST" value="2">
        <description>Seventh bit: 00000010</description>
      </entry>
      <entry name="MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE" value="1">
        <description>Eighth bit: 00000001</description>
      </entry>
    </enum>
    <enum name="MAV_GOTO">
      <description>Override command, pauses current mission execution and moves immediately to a position</description>
      <entry name="MAV_GOTO_DO_HOLD" value="0">
        <description>Hold at the current position.</description>
      </entry>
      <entry name="MAV_GOTO_DO_CONTINUE" value="1">
        <description>Continue with the next item in mission execution.</description>
      </entry>
      <entry name="MAV_GOTO_HOLD_AT_CURRENT_POSITION" value="2">
        <description>Hold at the current position of the system</description>
      </entry>
      <entry name="MAV_GOTO_HOLD_AT_SPECIFIED_POSITION" value="3">
        <description>Hold at the position specified in the parameters of the DO_HOLD action</description>
      </entry>
    </enum>
    <enum name="MAV_MODE">
      <description>These defines are predefined OR-combined mode flags. There is no need to use values from this enum, but it
               simplifies the use of the mode flags. Note that manual input is enabled in all modes as a safety override.</description>
      <entry name="MAV_MODE_PREFLIGHT" value="0">
        <description>System is not ready to fly, booting, calibrating, etc. No flag is set.</description>
      </entry>
      <entry name="MAV_MODE_STABILIZE_DISARMED" value="80">
        <description>System is allowed to be active, under assisted RC control.</description>
      </entry>
      <entry name="MAV_MODE_STABILIZE_ARMED" value="208">
        <description>System is allowed to be active, under assisted RC control.</description>
      </entry>
      <entry name="MAV_MODE_MANUAL_DISARMED" value="64">
        <description>System is allowed to be active, under manual (RC) control, no stabilization</description>
      </entry>
      <entry name="MAV_MODE_MANUAL_ARMED" value="192">
        <description>System is allowed to be active, under manual (RC) control, no stabilization</description>
      </entry>
      <entry name="MAV_MODE_GUIDED_DISARMED" value="88">
        <description>System is allowed to be active, under autonomous control, manual setpoint</description>
      </entry>
      <entry name="MAV_MODE_GUIDED_ARMED" value="216">
        <description>System is allowed to be active, under autonomous control, manual setpoint</description>
      </entry>
      <entry name="MAV_MODE_AUTO_DISARMED" value="92">
        <description>System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by waypoints)</description>
      </entry>
      <entry name="MAV_MODE_AUTO_ARMED" value="220">
        <description>System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by waypoints)</description>
      </entry>
      <entry name="MAV_MODE_TEST_DISARMED" value="66">
        <description>UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.</description>
      </entry>
      <entry name="MAV_MODE_TEST_ARMED" value="194">
        <description>UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.</description>
      </entry>
    </enum>
    <enum name="MAV_STATE">
      <entry name="MAV_STATE_UNINIT" value="0">
        <description>Uninitialized system, state is unknown.</description>
      </entry>
      <entry name="MAV_STATE_BOOT">
        <description>System is booting up.</description>
      </entry>
      <entry name="MAV_STATE_CALIBRATING">
        <description>System is calibrating and not flight-ready.</description>
      </entry>
      <entry name="MAV_STATE_STANDBY">
        <description>System is grounded and on standby. It can be launched any time.</description>
      </entry>
      <entry name="MAV_STATE_ACTIVE">
        <description>System is active and might be already airborne. Motors are engaged.</description>
      </entry>
      <entry name="MAV_STATE_CRITICAL">
        <description>System is in a non-normal flight mode. It can however still navigate.</description>
      </entry>
      <entry name="MAV_STATE_EMERGENCY">
        <description>System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.</description>
      </entry>
      <entry name="MAV_STATE_POWEROFF">
        <description>System just initialized its power-down sequence, will shut down now.</description>
      </entry>
      <entry name="MAV_STATE_FLIGHT_TERMINATION">
        <description>System is terminating itself.</description>
      </entry>
    </enum>
    <enum name="MAV_COMPONENT">
      <entry name="MAV_COMP_ID_ALL" value="0">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_AUTOPILOT1" value="1">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_CAMERA" value="100">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_CAMERA2" value="101">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_CAMERA3" value="102">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_CAMERA4" value="103">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_CAMERA5" value="104">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_CAMERA6" value="105">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO1" value="140">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO2" value="141">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO3" value="142">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO4" value="143">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO5" value="144">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO6" value="145">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO7" value="146">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO8" value="147">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO9" value="148">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO10" value="149">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO11" value="150">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO12" value="151">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO13" value="152">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SERVO14" value="153">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_GIMBAL" value="154">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_LOG" value="155">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_ADSB" value="156">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_OSD" value="157">
        <description>On Screen Display (OSD) devices for video links</description>
      </entry>
      <entry name="MAV_COMP_ID_PERIPHERAL" value="158">
        <description>Generic autopilot peripheral component ID. Meant for devices that do not implement the parameter sub-protocol</description>
      </entry>
      <entry name="MAV_COMP_ID_QX1_GIMBAL" value="159">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_MAPPER" value="180">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_MISSIONPLANNER" value="190">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_PATHPLANNER" value="195">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_IMU" value="200">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_IMU_2" value="201">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_IMU_3" value="202">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_GPS" value="220">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_GPS2" value="221">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_UDP_BRIDGE" value="240">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_UART_BRIDGE" value="241">
        <description />
      </entry>
      <entry name="MAV_COMP_ID_SYSTEM_CONTROL" value="250">
        <description />
      </entry>
    </enum>
    <enum name="MAV_SYS_STATUS_SENSOR">
      <description>These encode the sensors whose status is sent as part of the SYS_STATUS message.</description>
      <entry name="MAV_SYS_STATUS_SENSOR_3D_GYRO" value="1">
        <description>0x01 3D gyro</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_3D_ACCEL" value="2">
        <description>0x02 3D accelerometer</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_3D_MAG" value="4">
        <description>0x04 3D magnetometer</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE" value="8">
        <description>0x08 absolute pressure</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE" value="16">
        <description>0x10 differential pressure</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_GPS" value="32">
        <description>0x20 GPS</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW" value="64">
        <description>0x40 optical flow</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_VISION_POSITION" value="128">
        <description>0x80 computer vision position</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_LASER_POSITION" value="256">
        <description>0x100 laser based position</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH" value="512">
        <description>0x200 external ground truth (Vicon or Leica)</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL" value="1024">
        <description>0x400 3D angular rate control</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION" value="2048">
        <description>0x800 attitude stabilization</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_YAW_POSITION" value="4096">
        <description>0x1000 yaw position</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL" value="8192">
        <description>0x2000 z/altitude control</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL" value="16384">
        <description>0x4000 x/y position control</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS" value="32768">
        <description>0x8000 motor outputs / control</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_RC_RECEIVER" value="65536">
        <description>0x10000 rc receiver</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_3D_GYRO2" value="131072">
        <description>0x20000 2nd 3D gyro</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_3D_ACCEL2" value="262144">
        <description>0x40000 2nd 3D accelerometer</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_3D_MAG2" value="524288">
        <description>0x80000 2nd 3D magnetometer</description>
      </entry>
      <entry name="MAV_SYS_STATUS_GEOFENCE" value="1048576">
        <description>0x100000 geofence</description>
      </entry>
      <entry name="MAV_SYS_STATUS_AHRS" value="2097152">
        <description>0x200000 AHRS subsystem health</description>
      </entry>
      <entry name="MAV_SYS_STATUS_TERRAIN" value="4194304">
        <description>0x400000 Terrain subsystem health</description>
      </entry>
      <entry name="MAV_SYS_STATUS_REVERSE_MOTOR" value="8388608">
        <description>0x800000 Motors are reversed</description>
      </entry>
      <entry name="MAV_SYS_STATUS_LOGGING" value="16777216">
        <description>0x1000000 Logging</description>
      </entry>
      <entry name="MAV_SYS_STATUS_SENSOR_BATTERY" value="33554432">
        <description>0x2000000 Battery</description>
      </entry>
    </enum>
    <enum name="MAV_FRAME">
      <entry name="MAV_FRAME_GLOBAL" value="0">
        <description>Global coordinate frame, WGS84 coordinate system. First value / x: latitude, second value / y: longitude, third value / z: positive altitude over mean sea level (MSL)</description>
      </entry>
      <entry name="MAV_FRAME_LOCAL_NED" value="1">
        <description>Local coordinate frame, Z-up (x: north, y: east, z: down).</description>
      </entry>
      <entry name="MAV_FRAME_MISSION" value="2">
        <description>NOT a coordinate frame, indicates a mission command.</description>
      </entry>
      <entry name="MAV_FRAME_GLOBAL_RELATIVE_ALT" value="3">
        <description>Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value / x: latitude, second value / y: longitude, third value / z: positive altitude with 0 being at the altitude of the home location.</description>
      </entry>
      <entry name="MAV_FRAME_LOCAL_ENU" value="4">
        <description>Local coordinate frame, Z-down (x: east, y: north, z: up)</description>
      </entry>
      <entry name="MAV_FRAME_GLOBAL_INT" value="5">
        <description>Global coordinate frame, WGS84 coordinate system. First value / x: latitude in degrees*1.0e-7, second value / y: longitude in degrees*1.0e-7, third value / z: positive altitude over mean sea level (MSL)</description>
      </entry>
      <entry name="MAV_FRAME_GLOBAL_RELATIVE_ALT_INT" value="6">
        <description>Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value / x: latitude in degrees*10e-7, second value / y: longitude in degrees*10e-7, third value / z: positive altitude with 0 being at the altitude of the home location.</description>
      </entry>
      <entry name="MAV_FRAME_LOCAL_OFFSET_NED" value="7">
        <description>Offset to the current local frame. Anything expressed in this frame should be added to the current local frame position.</description>
      </entry>
      <entry name="MAV_FRAME_BODY_NED" value="8">
        <description>Setpoint in body NED frame. This makes sense if all position control is externalized - e.g. useful to command 2 m/s^2 acceleration to the right.</description>
      </entry>
      <entry name="MAV_FRAME_BODY_OFFSET_NED" value="9">
        <description>Offset in body NED frame. This makes sense if adding setpoints to the current flight path, to avoid an obstacle - e.g. useful to command 2 m/s^2 acceleration to the east.</description>
      </entry>
      <entry name="MAV_FRAME_GLOBAL_TERRAIN_ALT" value="10">
        <description>Global coordinate frame with above terrain level altitude. WGS84 coordinate system, relative altitude over terrain with respect to the waypoint coordinate. First value / x: latitude in degrees, second value / y: longitude in degrees, third value / z: positive altitude in meters with 0 being at ground level in terrain model.</description>
      </entry>
      <entry name="MAV_FRAME_GLOBAL_TERRAIN_ALT_INT" value="11">
        <description>Global coordinate frame with above terrain level altitude. WGS84 coordinate system, relative altitude over terrain with respect to the waypoint coordinate. First value / x: latitude in degrees*10e-7, second value / y: longitude in degrees*10e-7, third value / z: positive altitude in meters with 0 being at ground level in terrain model.</description>
      </entry>
    </enum>
    <enum name="MAVLINK_DATA_STREAM_TYPE">
      <entry name="MAVLINK_DATA_STREAM_IMG_JPEG">
        <description />
      </entry>
      <entry name="MAVLINK_DATA_STREAM_IMG_BMP">
        <description />
      </entry>
      <entry name="MAVLINK_DATA_STREAM_IMG_RAW8U">
        <description />
      </entry>
      <entry name="MAVLINK_DATA_STREAM_IMG_RAW32U">
        <description />
      </entry>
      <entry name="MAVLINK_DATA_STREAM_IMG_PGM">
        <description />
      </entry>
      <entry name="MAVLINK_DATA_STREAM_IMG_PNG">
        <description />
      </entry>
    </enum>
    
    <enum name="FENCE_ACTION">
      <entry name="FENCE_ACTION_NONE" value="0">
        <description>Disable fenced mode</description>
      </entry>
      <entry name="FENCE_ACTION_GUIDED" value="1">
        <description>Switched to guided mode to return point (fence point 0)</description>
      </entry>
      <entry name="FENCE_ACTION_REPORT" value="2">
        <description>Report fence breach, but don't take action</description>
      </entry>
      <entry name="FENCE_ACTION_GUIDED_THR_PASS" value="3">
        <description>Switched to guided mode to return point (fence point 0) with manual throttle control</description>
      </entry>
      <entry name="FENCE_ACTION_RTL" value="4">
        <description>Switch to RTL (return to launch) mode and head for the return point.</description>
      </entry>
    </enum>
    <enum name="FENCE_BREACH">
      <entry name="FENCE_BREACH_NONE" value="0">
        <description>No last fence breach</description>
      </entry>
      <entry name="FENCE_BREACH_MINALT" value="1">
        <description>Breached minimum altitude</description>
      </entry>
      <entry name="FENCE_BREACH_MAXALT" value="2">
        <description>Breached maximum altitude</description>
      </entry>
      <entry name="FENCE_BREACH_BOUNDARY" value="3">
        <description>Breached fence boundary</description>
      </entry>
    </enum>
    
    <enum name="MAV_MOUNT_MODE">
      <description>Enumeration of possible mount operation modes</description>
      <entry name="MAV_MOUNT_MODE_RETRACT" value="0">
        <description>Load and keep safe position (Roll,Pitch,Yaw) from permant memory and stop stabilization</description>
      </entry>
      <entry name="MAV_MOUNT_MODE_NEUTRAL" value="1">
        <description>Load and keep neutral position (Roll,Pitch,Yaw) from permanent memory.</description>
      </entry>
      <entry name="MAV_MOUNT_MODE_MAVLINK_TARGETING" value="2">
        <description>Load neutral position and start MAVLink Roll,Pitch,Yaw control with stabilization</description>
      </entry>
      <entry name="MAV_MOUNT_MODE_RC_TARGETING" value="3">
        <description>Load neutral position and start RC Roll,Pitch,Yaw control with stabilization</description>
      </entry>
      <entry name="MAV_MOUNT_MODE_GPS_POINT" value="4">
        <description>Load neutral position and start to point to Lat,Lon,Alt</description>
      </entry>
    </enum>
    
    <enum name="UAVCAN_NODE_HEALTH">
      <description>Generalized UAVCAN node health</description>
      <entry name="UAVCAN_NODE_HEALTH_OK" value="0">
        <description>The node is functioning properly.</description>
      </entry>
      <entry name="UAVCAN_NODE_HEALTH_WARNING" value="1">
        <description>A critical parameter went out of range or the node has encountered a minor failure.</description>
      </entry>
      <entry name="UAVCAN_NODE_HEALTH_ERROR" value="2">
        <description>The node has encountered a major failure.</description>
      </entry>
      <entry name="UAVCAN_NODE_HEALTH_CRITICAL" value="3">
        <description>The node has suffered a fatal malfunction.</description>
      </entry>
    </enum>
    
    <enum name="UAVCAN_NODE_MODE">
      <description>Generalized UAVCAN node mode</description>
      <entry name="UAVCAN_NODE_MODE_OPERATIONAL" value="0">
        <description>The node is performing its primary functions.</description>
      </entry>
      <entry name="UAVCAN_NODE_MODE_INITIALIZATION" value="1">
        <description>The node is initializing; this mode is entered immediately after startup.</description>
      </entry>
      <entry name="UAVCAN_NODE_MODE_MAINTENANCE" value="2">
        <description>The node is under maintenance.</description>
      </entry>
      <entry name="UAVCAN_NODE_MODE_SOFTWARE_UPDATE" value="3">
        <description>The node is in the process of updating its software.</description>
      </entry>
      <entry name="UAVCAN_NODE_MODE_OFFLINE" value="7">
        <description>The node is no longer available online.</description>
      </entry>
    </enum>
    <enum name="MAV_CMD">
      <description>Commands to be executed by the MAV. They can be executed on user request, or as part of a mission script. If the action is used in a mission, the parameter mapping to the waypoint/mission message is as follows: Param 1, Param 2, Param 3, Param 4, X: Param 5, Y:Param 6, Z:Param 7. This command list is similar what ARINC 424 is for commercial aircraft: A data format how to interpret waypoint/mission data.</description>
      <entry name="MAV_CMD_NAV_WAYPOINT" value="16">
        <description>Navigate to waypoint.</description>
        <param index="1">Hold time in decimal seconds. (ignored by fixed wing, time to stay at waypoint for rotary wing)</param>
        <param index="2">Acceptance radius in meters (if the sphere with this radius is hit, the waypoint counts as reached)</param>
        <param index="3">0 to pass through the WP, if &gt; 0 radius in meters to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.</param>
        <param index="4">Desired yaw angle at waypoint (rotary wing). NaN for unchanged.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_LOITER_UNLIM" value="17">
        <description>Loiter around this waypoint an unlimited amount of time</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise</param>
        <param index="4">Desired yaw angle.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_LOITER_TURNS" value="18">
        <description>Loiter around this waypoint for X turns</description>
        <param index="1">Turns</param>
        <param index="2">Empty</param>
        <param index="3">Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise</param>
        <param index="4">Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location. Else, this is desired yaw angle</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_LOITER_TIME" value="19">
        <description>Loiter around this waypoint for X seconds</description>
        <param index="1">Seconds (decimal)</param>
        <param index="2">Empty</param>
        <param index="3">Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise</param>
        <param index="4">Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location. Else, this is desired yaw angle</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_RETURN_TO_LAUNCH" value="20">
        <description>Return to launch location</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_NAV_LAND" value="21">
        <description>Land at location</description>
        <param index="1">Abort Alt</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Desired yaw angle. NaN for unchanged.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude (ground level)</param>
      </entry>
      <entry name="MAV_CMD_NAV_TAKEOFF" value="22">
        <description>Takeoff from ground / hand</description>
        <param index="1">Minimum pitch (if airspeed sensor present), desired pitch without sensor</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Yaw angle (if magnetometer present), ignored without magnetometer. NaN for unchanged.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_LAND_LOCAL" value="23">
        <description>Land at local position (local frame only)</description>
        <param index="1">Landing target number (if available)</param>
        <param index="2">Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land</param>
        <param index="3">Landing descend rate [ms^-1]</param>
        <param index="4">Desired yaw angle [rad]</param>
        <param index="5">Y-axis position [m]</param>
        <param index="6">X-axis position [m]</param>
        <param index="7">Z-axis / ground level position [m]</param>
      </entry>
      <entry name="MAV_CMD_NAV_TAKEOFF_LOCAL" value="24">
        <description>Takeoff from local position (local frame only)</description>
        <param index="1">Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]</param>
        <param index="2">Empty</param>
        <param index="3">Takeoff ascend rate [ms^-1]</param>
        <param index="4">Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these</param>
        <param index="5">Y-axis position [m]</param>
        <param index="6">X-axis position [m]</param>
        <param index="7">Z-axis position [m]</param>
      </entry>
      <entry name="MAV_CMD_NAV_FOLLOW" value="25">
        <description>Vehicle following, i.e. this waypoint represents the position of a moving vehicle</description>
        <param index="1">Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation</param>
        <param index="2">Ground speed of vehicle to be followed</param>
        <param index="3">Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise</param>
        <param index="4">Desired yaw angle.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT" value="30">
        <description>Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached.</description>
        <param index="1">Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. </param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Desired altitude in meters</param>
      </entry>
      <entry name="MAV_CMD_NAV_LOITER_TO_ALT" value="31">
        <description>Begin loiter at the specified Latitude and Longitude.  If Lat=Lon=0, then loiter at the current position.  Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached.  Additionally, if the Heading Required parameter is non-zero the  aircraft will not leave the loiter until heading toward the next waypoint. </description>
        <param index="1">Heading Required (0 = False)</param>
        <param index="2">Radius in meters. If positive loiter clockwise, negative counter-clockwise, 0 means no change to standard loiter.</param>
        <param index="3">Empty</param>
        <param index="4">Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_DO_FOLLOW" value="32">
        <description>Being following a target</description>
        <param index="1">System ID (the system ID of the FOLLOW_TARGET beacon). Send 0 to disable follow-me and return to the default position hold mode</param>
        <param index="2">RESERVED</param>
        <param index="3">RESERVED</param>
        <param index="4">altitude flag: 0: Keep current altitude, 1: keep altitude difference to target, 2: go to a fixed altitude above home</param>
        <param index="5">altitude</param>
        <param index="6">RESERVED</param>
        <param index="7">TTL in seconds in which the MAV should go to the default position hold mode after a message rx timeout</param>
      </entry>
      <entry name="MAV_CMD_DO_FOLLOW_REPOSITION" value="33">
        <description>Reposition the MAV after a follow target command has been sent</description>
        <param index="1">Camera q1 (where 0 is on the ray from the camera to the tracking device)</param>
        <param index="2">Camera q2</param>
        <param index="3">Camera q3</param>
        <param index="4">Camera q4</param>
        <param index="5">altitude offset from target (m)</param>
        <param index="6">X offset from target (m)</param>
        <param index="7">Y offset from target (m)</param>
      </entry>
      <entry name="MAV_CMD_NAV_ROI" value="80">
        <description>Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.</description>
        <param index="1">Region of intereset mode. (see MAV_ROI enum)</param>
        <param index="2">Waypoint index/ target ID. (see MAV_ROI enum)</param>
        <param index="3">ROI index (allows a vehicle to manage multiple ROI's)</param>
        <param index="4">Empty</param>
        <param index="5">x the location of the fixed ROI (see MAV_FRAME)</param>
        <param index="6">y</param>
        <param index="7">z</param>
      </entry>
      <entry name="MAV_CMD_NAV_PATHPLANNING" value="81">
        <description>Control autonomous path planning on the MAV.</description>
        <param index="1">0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning</param>
        <param index="2">0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid</param>
        <param index="3">Empty</param>
        <param index="4">Yaw angle at goal, in compass degrees, [0..360]</param>
        <param index="5">Latitude/X of goal</param>
        <param index="6">Longitude/Y of goal</param>
        <param index="7">Altitude/Z of goal</param>
      </entry>
      <entry name="MAV_CMD_NAV_SPLINE_WAYPOINT" value="82">
        <description>Navigate to waypoint using a spline path.</description>
        <param index="1">Hold time in decimal seconds. (ignored by fixed wing, time to stay at waypoint for rotary wing)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Latitude/X of goal</param>
        <param index="6">Longitude/Y of goal</param>
        <param index="7">Altitude/Z of goal</param>
      </entry>
      <entry name="MAV_CMD_NAV_VTOL_TAKEOFF" value="84">
        <description>Takeoff from ground using VTOL mode</description>
        <param index="1">Empty</param>
        <param index="2">Front transition heading, see VTOL_TRANSITION_HEADING enum.</param>
        <param index="3">Empty</param>
        <param index="4">Yaw angle in degrees. NaN for unchanged.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_VTOL_LAND" value="85">
        <description>Land using VTOL mode</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Approach altitude (with the same reference as the Altitude field). NaN if unspecified.</param>
        <param index="4">Yaw angle in degrees. NaN for unchanged.</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude (ground level)</param>
      </entry>
      
      <entry name="MAV_CMD_NAV_GUIDED_ENABLE" value="92">
        <description>hand control over to an external controller</description>
        <param index="1">On / Off (&gt; 0.5f on)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_NAV_DELAY" value="93">
        <description>Delay the next navigation command a number of seconds or until a specified time</description>
        <param index="1">Delay in seconds (decimal, -1 to enable time-of-day fields)</param>
        <param index="2">hour (24h format, UTC, -1 to ignore)</param>
        <param index="3">minute (24h format, UTC, -1 to ignore)</param>
        <param index="4">second (24h format, UTC)</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_NAV_PAYLOAD_PLACE" value="94">
        <description>Descend and place payload.  Vehicle descends until it detects a hanging payload has reached the ground, the gripper is opened to release the payload</description>
        <param index="1">Maximum distance to descend (meters)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Latitude (deg * 1E7)</param>
        <param index="6">Longitude (deg * 1E7)</param>
        <param index="7">Altitude (meters)</param>
      </entry>
      <entry name="MAV_CMD_NAV_LAST" value="95">
        <description>NOP - This command is only used to mark the upper limit of the NAV/ACTION commands in the enumeration</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_CONDITION_DELAY" value="112">
        <description>Delay mission state machine.</description>
        <param index="1">Delay in seconds (decimal)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_CONDITION_CHANGE_ALT" value="113">
        <description>Ascend/descend at rate.  Delay mission state machine until desired altitude reached.</description>
        <param index="1">Descent / Ascend rate (m/s)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Finish Altitude</param>
      </entry>
      <entry name="MAV_CMD_CONDITION_DISTANCE" value="114">
        <description>Delay mission state machine until within desired distance of next NAV point.</description>
        <param index="1">Distance (meters)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_CONDITION_YAW" value="115">
        <description>Reach a certain target angle.</description>
        <param index="1">target angle: [0-360], 0 is north</param>
        <param index="2">speed during yaw change:[deg per second]</param>
        <param index="3">direction: negative: counter clockwise, positive: clockwise [-1,1]</param>
        <param index="4">relative offset or absolute angle: [ 1,0]</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_CONDITION_LAST" value="159">
        <description>NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_MODE" value="176">
        <description>Set system mode.</description>
        <param index="1">Mode, as defined by ENUM MAV_MODE</param>
        <param index="2">Custom mode - this is system specific, please refer to the individual autopilot specifications for details.</param>
        <param index="3">Custom sub mode - this is system specific, please refer to the individual autopilot specifications for details.</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_JUMP" value="177">
        <description>Jump to the desired command in the mission list.  Repeat this action only the specified number of times</description>
        <param index="1">Sequence number</param>
        <param index="2">Repeat count</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_CHANGE_SPEED" value="178">
        <description>Change speed and/or throttle set points.</description>
        <param index="1">Speed type (0=Airspeed, 1=Ground Speed)</param>
        <param index="2">Speed  (m/s, -1 indicates no change)</param>
        <param index="3">Throttle  ( Percent, -1 indicates no change)</param>
        <param index="4">absolute or relative [0,1]</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_HOME" value="179">
        <description>Changes the home location either to the current location or a specified location.</description>
        <param index="1">Use current (1=use current location, 0=use specified location)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_PARAMETER" value="180">
        <description>Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter.</description>
        <param index="1">Parameter number</param>
        <param index="2">Parameter value</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_RELAY" value="181">
        <description>Set a relay to a condition.</description>
        <param index="1">Relay number</param>
        <param index="2">Setting (1=on, 0=off, others possible depending on system hardware)</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_REPEAT_RELAY" value="182">
        <description>Cycle a relay on and off for a desired number of cyles with a desired period.</description>
        <param index="1">Relay number</param>
        <param index="2">Cycle count</param>
        <param index="3">Cycle time (seconds, decimal)</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_SERVO" value="183">
        <description>Set a servo to a desired PWM value.</description>
        <param index="1">Servo number</param>
        <param index="2">PWM (microseconds, 1000 to 2000 typical)</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_REPEAT_SERVO" value="184">
        <description>Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period.</description>
        <param index="1">Servo number</param>
        <param index="2">PWM (microseconds, 1000 to 2000 typical)</param>
        <param index="3">Cycle count</param>
        <param index="4">Cycle time (seconds)</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_FLIGHTTERMINATION" value="185">
        <description>Terminate flight immediately</description>
        <param index="1">Flight termination activated if &gt; 0.5</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_CHANGE_ALTITUDE" value="186">
        <description>Change altitude set point.</description>
        <param index="1">Altitude in meters</param>
        <param index="2">Mav frame of new altitude (see MAV_FRAME)</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_LAND_START" value="189">
        <description>Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude/Longitude is optional, and may be set to 0 if not needed. If specified then it will be used to help find the closest landing sequence.</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_RALLY_LAND" value="190">
        <description>Mission command to perform a landing from a rally point.</description>
        <param index="1">Break altitude (meters)</param>
        <param index="2">Landing speed (m/s)</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_GO_AROUND" value="191">
        <description>Mission command to safely abort an autonmous landing.</description>
        <param index="1">Altitude (meters)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_REPOSITION" value="192">
        <description>Reposition the vehicle to a specific WGS84 global position.</description>
        <param index="1">Ground speed, less than 0 (-1) for default</param>
        <param index="2">Bitmask of option flags, see the MAV_DO_REPOSITION_FLAGS enum.</param>
        <param index="3">Reserved</param>
        <param index="4">Yaw heading, NaN for unchanged. For planes indicates loiter direction (0: clockwise, 1: counter clockwise)</param>
        <param index="5">Latitude (deg * 1E7)</param>
        <param index="6">Longitude (deg * 1E7)</param>
        <param index="7">Altitude (meters)</param>
      </entry>
      <entry name="MAV_CMD_DO_PAUSE_CONTINUE" value="193">
        <description>If in a GPS controlled position mode, hold the current position or continue.</description>
        <param index="1">0: Pause current mission or reposition command, hold current position. 1: Continue mission. A VTOL capable vehicle should enter hover mode (multicopter and VTOL planes). A plane should loiter with the default loiter radius.</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Reserved</param>
        <param index="6">Reserved</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_REVERSE" value="194">
        <description>Set moving direction to forward or reverse.</description>
        <param index="1">Direction (0=Forward, 1=Reverse)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_CONTROL_VIDEO" value="200">
        <description>Control onboard camera system.</description>
        <param index="1">Camera ID (-1 for all)</param>
        <param index="2">Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw</param>
        <param index="3">Transmission mode: 0: video stream, &gt;0: single images every n seconds (decimal)</param>
        <param index="4">Recording: 0: disabled, 1: enabled compressed, 2: enabled raw</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_ROI" value="201">
        <description>Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.</description>
        <param index="1">Region of intereset mode. (see MAV_ROI enum)</param>
        <param index="2">Waypoint index/ target ID. (see MAV_ROI enum)</param>
        <param index="3">ROI index (allows a vehicle to manage multiple ROI's)</param>
        <param index="4">Empty</param>
        <param index="5">x the location of the fixed ROI (see MAV_FRAME)</param>
        <param index="6">y</param>
        <param index="7">z</param>
      </entry>
      
      
      <entry name="MAV_CMD_DO_DIGICAM_CONFIGURE" value="202">
        <description>Mission command to configure an on-board camera controller system.</description>
        <param index="1">Modes: P, TV, AV, M, Etc</param>
        <param index="2">Shutter speed: Divisor number for one second</param>
        <param index="3">Aperture: F stop number</param>
        <param index="4">ISO number e.g. 80, 100, 200, Etc</param>
        <param index="5">Exposure type enumerator</param>
        <param index="6">Command Identity</param>
        <param index="7">Main engine cut-off time before camera trigger in seconds/10 (0 means no cut-off)</param>
      </entry>
      <entry name="MAV_CMD_DO_DIGICAM_CONTROL" value="203">
        <description>Mission command to control an on-board camera controller system.</description>
        <param index="1">Session control e.g. show/hide lens</param>
        <param index="2">Zoom's absolute position</param>
        <param index="3">Zooming step value to offset zoom from the current position</param>
        <param index="4">Focus Locking, Unlocking or Re-locking</param>
        <param index="5">Shooting Command</param>
        <param index="6">Command Identity</param>
        <param index="7">Test shot identifier. If set to 1, image will only be captured, but not counted towards internal frame count.</param>
      </entry>
      
      <entry name="MAV_CMD_DO_MOUNT_CONFIGURE" value="204">
        <description>Mission command to configure a camera or antenna mount</description>
        <param index="1">Mount operation mode (see MAV_MOUNT_MODE enum)</param>
        <param index="2">stabilize roll? (1 = yes, 0 = no)</param>
        <param index="3">stabilize pitch? (1 = yes, 0 = no)</param>
        <param index="4">stabilize yaw? (1 = yes, 0 = no)</param>
        <param index="5">roll input (0 = angle, 1 = angular rate)</param>
        <param index="6">pitch input (0 = angle, 1 = angular rate)</param>
        <param index="7">yaw input (0 = angle, 1 = angular rate)</param>
      </entry>
      <entry name="MAV_CMD_DO_MOUNT_CONTROL" value="205">
        <description>Mission command to control a camera or antenna mount</description>
        <param index="1">pitch depending on mount mode (degrees or degrees/second depending on pitch input).</param>
        <param index="2">roll depending on mount mode (degrees or degrees/second depending on roll input).</param>
        <param index="3">yaw depending on mount mode (degrees or degrees/second depending on yaw input).</param>
        <param index="4">alt in meters depending on mount mode.</param>
        <param index="5">latitude in degrees * 1E7, set if appropriate mount mode.</param>
        <param index="6">longitude in degrees * 1E7, set if appropriate mount mode.</param>
        <param index="7">MAV_MOUNT_MODE enum value</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_CAM_TRIGG_DIST" value="206">
        <description>Mission command to set camera trigger distance for this flight. The camera is trigerred each time this distance is exceeded. This command can also be used to set the shutter integration time for the camera.</description>
        <param index="1">Camera trigger distance (meters). 0 to stop triggering.</param>
        <param index="2">Camera shutter integration time (milliseconds). -1 or 0 to ignore</param>
        <param index="3">Trigger camera once immediately. (0 = no trigger, 1 = trigger)</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_FENCE_ENABLE" value="207">
        <description>Mission command to enable the geofence</description>
        <param index="1">enable? (0=disable, 1=enable, 2=disable_floor_only)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_PARACHUTE" value="208">
        <description>Mission command to trigger a parachute</description>
        <param index="1">action (0=disable, 1=enable, 2=release, for some systems see PARACHUTE_ACTION enum, not in general message set.)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_MOTOR_TEST" value="209">
        <description>Mission command to perform motor test</description>
        <param index="1">motor sequence number (a number from 1 to max number of motors on the vehicle)</param>
        <param index="2">throttle type (0=throttle percentage, 1=PWM, 2=pilot throttle channel pass-through. See MOTOR_TEST_THROTTLE_TYPE enum)</param>
        <param index="3">throttle</param>
        <param index="4">timeout (in seconds)</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_INVERTED_FLIGHT" value="210">
        <description>Change to/from inverted flight</description>
        <param index="1">inverted (0=normal, 1=inverted)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      
      <entry name="MAV_CMD_NAV_SET_YAW_SPEED" value="213">
        <description>Sets a desired vehicle turn angle and speed change</description>
        <param index="1">yaw angle to adjust steering by in centidegress</param>
        <param index="2">speed - normalized to 0 .. 1</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SET_CAM_TRIGG_INTERVAL" value="214">
        <description>Mission command to set camera trigger interval for this flight. If triggering is enabled, the camera is triggered each time this interval expires. This command can also be used to set the shutter integration time for the camera.</description>
        <param index="1">Camera trigger cycle time (milliseconds). -1 or 0 to ignore.</param>
        <param index="2">Camera shutter integration time (milliseconds). Should be less than trigger cycle time. -1 or 0 to ignore.</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_MOUNT_CONTROL_QUAT" value="220">
        <description>Mission command to control a camera or antenna mount, using a quaternion as reference.</description>
        <param index="1">q1 - quaternion param #1, w (1 in null-rotation)</param>
        <param index="2">q2 - quaternion param #2, x (0 in null-rotation)</param>
        <param index="3">q3 - quaternion param #3, y (0 in null-rotation)</param>
        <param index="4">q4 - quaternion param #4, z (0 in null-rotation)</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_GUIDED_MASTER" value="221">
        <description>set id of master controller</description>
        <param index="1">System ID</param>
        <param index="2">Component ID</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_GUIDED_LIMITS" value="222">
        <description>set limits for external control</description>
        <param index="1">timeout - maximum time (in seconds) that external controller will be allowed to control vehicle. 0 means no timeout</param>
        <param index="2">absolute altitude min (in meters, AMSL) - if vehicle moves below this alt, the command will be aborted and the mission will continue.  0 means no lower altitude limit</param>
        <param index="3">absolute altitude max (in meters)- if vehicle moves above this alt, the command will be aborted and the mission will continue.  0 means no upper altitude limit</param>
        <param index="4">horizontal move limit (in meters, AMSL) - if vehicle moves more than this distance from it's location at the moment the command was executed, the command will be aborted and the mission will continue. 0 means no horizontal altitude limit</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_ENGINE_CONTROL" value="223">
        <description>Control vehicle engine. This is interpreted by the vehicles engine controller to change the target engine state. It is intended for vehicles with internal combustion engines</description>
        <param index="1">0: Stop engine, 1:Start Engine</param>
        <param index="2">0: Warm start, 1:Cold start. Controls use of choke where applicable</param>
        <param index="3">Height delay (meters). This is for commanding engine start only after the vehicle has gained the specified height. Used in VTOL vehicles during takeoff to start engine after the aircraft is off the ground. Zero for no delay.</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_LAST" value="240">
        <description>NOP - This command is only used to mark the upper limit of the DO commands in the enumeration</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_PREFLIGHT_CALIBRATION" value="241">
        <description>Trigger calibration. This command will be only accepted if in pre-flight mode. Except for Temperature Calibration, only one sensor should be set in a single message and all others should be zero.</description>
        <param index="1">1: gyro calibration, 3: gyro temperature calibration</param>
        <param index="2">1: magnetometer calibration</param>
        <param index="3">1: ground pressure calibration</param>
        <param index="4">1: radio RC calibration, 2: RC trim calibration</param>
        <param index="5">1: accelerometer calibration, 2: board level calibration, 3: accelerometer temperature calibration</param>
        <param index="6">1: APM: compass/motor interference calibration (PX4: airspeed calibration, deprecated), 2: airspeed calibration</param>
        <param index="7">1: ESC calibration, 3: barometer temperature calibration</param>
      </entry>
      <entry name="MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS" value="242">
        <description>Set sensor offsets. This command will be only accepted if in pre-flight mode.</description>
        <param index="1">Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow, 5: second magnetometer, 6: third magnetometer</param>
        <param index="2">X axis offset (or generic dimension 1), in the sensor's raw units</param>
        <param index="3">Y axis offset (or generic dimension 2), in the sensor's raw units</param>
        <param index="4">Z axis offset (or generic dimension 3), in the sensor's raw units</param>
        <param index="5">Generic dimension 4, in the sensor's raw units</param>
        <param index="6">Generic dimension 5, in the sensor's raw units</param>
        <param index="7">Generic dimension 6, in the sensor's raw units</param>
      </entry>
      <entry name="MAV_CMD_PREFLIGHT_UAVCAN" value="243">
        <description>Trigger UAVCAN config. This command will be only accepted if in pre-flight mode.</description>
        <param index="1">1: Trigger actuator ID assignment and direction mapping.</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Reserved</param>
        <param index="6">Reserved</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_PREFLIGHT_STORAGE" value="245">
        <description>Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.</description>
        <param index="1">Parameter storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM, 2: Reset to defaults</param>
        <param index="2">Mission storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM, 2: Reset to defaults</param>
        <param index="3">Onboard logging: 0: Ignore, 1: Start default rate logging, -1: Stop logging, &gt; 1: start logging with rate of param 3 in Hz (e.g. set to 1000 for 1000 Hz logging)</param>
        <param index="4">Reserved</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN" value="246">
        <description>Request the reboot or shutdown of system components.</description>
        <param index="1">0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot, 3: Reboot autopilot and keep it in the bootloader until upgraded.</param>
        <param index="2">0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer, 3: Reboot onboard computer and keep it in the bootloader until upgraded.</param>
        <param index="3">WIP: 0: Do nothing for camera, 1: Reboot onboard camera, 2: Shutdown onboard camera, 3: Reboot onboard camera and keep it in the bootloader until upgraded</param>
        <param index="4">WIP: 0: Do nothing for mount (e.g. gimbal), 1: Reboot mount, 2: Shutdown mount, 3: Reboot mount and keep it in the bootloader until upgraded</param>
        <param index="5">Reserved, send 0</param>
        <param index="6">Reserved, send 0</param>
        <param index="7">WIP: ID (e.g. camera ID -1 for all IDs)</param>
      </entry>
      <entry name="MAV_CMD_OVERRIDE_GOTO" value="252">
        <description>Hold / continue the current action</description>
        <param index="1">MAV_GOTO_DO_HOLD: hold MAV_GOTO_DO_CONTINUE: continue with next item in mission plan</param>
        <param index="2">MAV_GOTO_HOLD_AT_CURRENT_POSITION: Hold at current position MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position</param>
        <param index="3">MAV_FRAME coordinate frame of hold point</param>
        <param index="4">Desired yaw angle in degrees</param>
        <param index="5">Latitude / X position</param>
        <param index="6">Longitude / Y position</param>
        <param index="7">Altitude / Z position</param>
      </entry>
      <entry name="MAV_CMD_MISSION_START" value="300">
        <description>start running a mission</description>
        <param index="1">first_item: the first mission item to run</param>
        <param index="2">last_item:  the last mission item to run (after this item is run, the mission ends)</param>
      </entry>
      <entry name="MAV_CMD_COMPONENT_ARM_DISARM" value="400">
        <description>Arms / Disarms a component</description>
        <param index="1">1 to arm, 0 to disarm</param>
      </entry>
      <entry name="MAV_CMD_GET_HOME_POSITION" value="410">
        <description>Request the home position from the vehicle.</description>
        <param index="1">Reserved</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Reserved</param>
        <param index="6">Reserved</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_START_RX_PAIR" value="500">
        <description>Starts receiver pairing</description>
        <param index="1">0:Spektrum</param>
        <param index="2">0:Spektrum DSM2, 1:Spektrum DSMX</param>
      </entry>
      <entry name="MAV_CMD_GET_MESSAGE_INTERVAL" value="510">
        <description>Request the interval between messages for a particular MAVLink message ID</description>
        <param index="1">The MAVLink message ID</param>
      </entry>
      <entry name="MAV_CMD_SET_MESSAGE_INTERVAL" value="511">
        <description>Request the interval between messages for a particular MAVLink message ID. This interface replaces REQUEST_DATA_STREAM</description>
        <param index="1">The MAVLink message ID</param>
        <param index="2">The interval between two messages, in microseconds. Set to -1 to disable and 0 to request default rate.</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_PROTOCOL_VERSION" value="519">
        <description>Request MAVLink protocol version compatibility</description>
        <param index="1">1: Request supported protocol versions by all nodes on the network</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES" value="520">
        <description>Request autopilot capabilities</description>
        <param index="1">1: Request autopilot version</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_CAMERA_INFORMATION" value="521">
        <description>WIP: Request camera information (CAMERA_INFORMATION).</description>
        <param index="1">0: No action 1: Request camera capabilities</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_CAMERA_SETTINGS" value="522">
        <description>WIP: Request camera settings (CAMERA_SETTINGS).</description>
        <param index="1">0: No Action 1: Request camera settings</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_STORAGE_INFORMATION" value="525">
        <description>WIP: Request storage information (STORAGE_INFORMATION). Use the command's target_component to target a specific component's storage.</description>
        <param index="1">Storage ID (0 for all, 1 for first, 2 for second, etc.)</param>
        <param index="2">0: No Action 1: Request storage information</param>
        <param index="3">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_STORAGE_FORMAT" value="526">
        <description>WIP: Format a storage medium. Once format is complete, a STORAGE_INFORMATION message is sent. Use the command's target_component to target a specific component's storage.</description>
        <param index="1">Storage ID (1 for first, 2 for second, etc.)</param>
        <param index="2">0: No action 1: Format storage</param>
        <param index="3">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS" value="527">
        <description>WIP: Request camera capture status (CAMERA_CAPTURE_STATUS)</description>
        <param index="1">0: No Action 1: Request camera capture status</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_FLIGHT_INFORMATION" value="528">
        <description>WIP: Request flight information (FLIGHT_INFORMATION)</description>
        <param index="1">1: Request flight information</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_RESET_CAMERA_SETTINGS" value="529">
        <description>WIP: Reset all camera settings to Factory Default</description>
        <param index="1">0: No Action 1: Reset all settings</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_SET_CAMERA_MODE" value="530">
        <description>Set camera running mode. Use NAN for reserved values.</description>
        <param index="1">Reserved (Set to 0)</param>
        <param index="2">Camera mode (see CAMERA_MODE enum)</param>
        <param index="3">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_IMAGE_START_CAPTURE" value="2000">
        <description>Start image capture sequence. Sends CAMERA_IMAGE_CAPTURED after each capture. Use NAN for reserved values.</description>
        <param index="1">Reserved (Set to 0)</param>
        <param index="2">Duration between two consecutive pictures (in seconds)</param>
        <param index="3">Number of images to capture total - 0 for unlimited capture</param>
        <param index="4">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_IMAGE_STOP_CAPTURE" value="2001">
        <description>Stop image capture sequence Use NAN for reserved values.</description>
        <param index="1">Reserved (Set to 0)</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_CAMERA_IMAGE_CAPTURE" value="2002">
        <description>WIP: Re-request a CAMERA_IMAGE_CAPTURE packet. Use NAN for reserved values.</description>
        <param index="1">Sequence number for missing CAMERA_IMAGE_CAPTURE packet</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_DO_TRIGGER_CONTROL" value="2003">
        <description>Enable or disable on-board camera triggering system.</description>
        <param index="1">Trigger enable/disable (0 for disable, 1 for start), -1 to ignore</param>
        <param index="2">1 to reset the trigger sequence, -1 or 0 to ignore</param>
        <param index="3">1 to pause triggering, but without switching the camera off or retracting it. -1 to ignore</param>
      </entry>
      <entry name="MAV_CMD_VIDEO_START_CAPTURE" value="2500">
        <description>Starts video capture (recording). Use NAN for reserved values.</description>
        <param index="1">Reserved (Set to 0)</param>
        <param index="2">Frequency CAMERA_CAPTURE_STATUS messages should be sent while recording (0 for no messages, otherwise frequency in Hz)</param>
        <param index="3">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_VIDEO_STOP_CAPTURE" value="2501">
        <description>Stop the current video capture (recording). Use NAN for reserved values.</description>
        <param index="1">Reserved (Set to 0)</param>
        <param index="2">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_VIDEO_START_STREAMING" value="2502">
        <description>WIP: Start video streaming</description>
        <param index="1">Camera ID (0 for all cameras, 1 for first, 2 for second, etc.)</param>
        <param index="2">Reserved</param>
      </entry>
      <entry name="MAV_CMD_VIDEO_STOP_STREAMING" value="2503">
        <description>WIP: Stop the current video streaming</description>
        <param index="1">Camera ID (0 for all cameras, 1 for first, 2 for second, etc.)</param>
        <param index="2">Reserved</param>
      </entry>
      <entry name="MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION" value="2504">
        <description>WIP: Request video stream information (VIDEO_STREAM_INFORMATION)</description>
        <param index="1">Camera ID (0 for all cameras, 1 for first, 2 for second, etc.)</param>
        <param index="2">0: No Action 1: Request video stream information</param>
        <param index="3">Reserved (all remaining params)</param>
      </entry>
      <entry name="MAV_CMD_LOGGING_START" value="2510">
        <description>Request to start streaming logging data over MAVLink (see also LOGGING_DATA message)</description>
        <param index="1">Format: 0: ULog</param>
        <param index="2">Reserved (set to 0)</param>
        <param index="3">Reserved (set to 0)</param>
        <param index="4">Reserved (set to 0)</param>
        <param index="5">Reserved (set to 0)</param>
        <param index="6">Reserved (set to 0)</param>
        <param index="7">Reserved (set to 0)</param>
      </entry>
      <entry name="MAV_CMD_LOGGING_STOP" value="2511">
        <description>Request to stop streaming log data over MAVLink</description>
        <param index="1">Reserved (set to 0)</param>
        <param index="2">Reserved (set to 0)</param>
        <param index="3">Reserved (set to 0)</param>
        <param index="4">Reserved (set to 0)</param>
        <param index="5">Reserved (set to 0)</param>
        <param index="6">Reserved (set to 0)</param>
        <param index="7">Reserved (set to 0)</param>
      </entry>
      <entry name="MAV_CMD_AIRFRAME_CONFIGURATION" value="2520">
        <description />
        <param index="1">Landing gear ID (default: 0, -1 for all)</param>
        <param index="2">Landing gear position (Down: 0, Up: 1, NAN for no change)</param>
        <param index="3">Reserved, set to NAN</param>
        <param index="4">Reserved, set to NAN</param>
        <param index="5">Reserved, set to NAN</param>
        <param index="6">Reserved, set to NAN</param>
        <param index="7">Reserved, set to NAN</param>
      </entry>
      <entry name="MAV_CMD_PANORAMA_CREATE" value="2800">
        <description>Create a panorama at the current position</description>
        <param index="1">Viewing angle horizontal of the panorama (in degrees, +- 0.5 the total angle)</param>
        <param index="2">Viewing angle vertical of panorama (in degrees)</param>
        <param index="3">Speed of the horizontal rotation (in degrees per second)</param>
        <param index="4">Speed of the vertical rotation (in degrees per second)</param>
      </entry>
      <entry name="MAV_CMD_DO_VTOL_TRANSITION" value="3000">
        <description>Request VTOL transition</description>
        <param index="1">The target VTOL state, as defined by ENUM MAV_VTOL_STATE. Only MAV_VTOL_STATE_MC and MAV_VTOL_STATE_FW can be used.</param>
      </entry>
      <entry name="MAV_CMD_SET_GUIDED_SUBMODE_STANDARD" value="4000">
        <description>This command sets the submode to standard guided when vehicle is in guided mode. The vehicle holds position and altitude and the user can input the desired velocites along all three axes.
                  </description>
      </entry>
      <entry name="MAV_CMD_SET_GUIDED_SUBMODE_CIRCLE" value="4001">
        <description>This command sets submode circle when vehicle is in guided mode. Vehicle flies along a circle facing the center of the circle. The user can input the velocity along the circle and change the radius. If no input is given the vehicle will hold position.
                  </description>
        <param index="1">Radius of desired circle in CIRCLE_MODE</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Unscaled target latitude of center of circle in CIRCLE_MODE</param>
        <param index="6">Unscaled target longitude of center of circle in CIRCLE_MODE</param>
      </entry>
      <entry name="MAV_CMD_CONDITION_GATE" value="4501">
        <description>WIP: Delay mission state machine until gate has been reached.</description>
        <param index="1">Geometry: 0: orthogonal to path between previous and next waypoint.</param>
        <param index="2">Altitude: 0: ignore altitude</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_ARM_AUTHORIZATION_REQUEST" value="3001">
        <description>Request authorization to arm the vehicle to a external entity, the arm authorizer is resposible to request all data that is needs from the vehicle before authorize or deny the request. If approved the progress of command_ack message should be set with period of time that this authorization is valid in seconds or in case it was denied it should be set with one of the reasons in ARM_AUTH_DENIED_REASON.
        </description>
        <param index="1">Vehicle system id, this way ground station can request arm authorization on behalf of any vehicle</param>
      </entry>
      <entry name="MAV_CMD_NAV_FENCE_RETURN_POINT" value="5000">
        <description>Fence return point. There can only be one fence return point.
        </description>
        <param index="1">Reserved</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      <entry name="MAV_CMD_NAV_FENCE_POLYGON_VERTEX_INCLUSION" value="5001">
        <description>Fence vertex for an inclusion polygon (the polygon must not be self-intersecting). The vehicle must stay within this area. Minimum of 3 vertices required.
        </description>
        <param index="1">Polygon vertex count</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_NAV_FENCE_POLYGON_VERTEX_EXCLUSION" value="5002">
        <description>Fence vertex for an exclusion polygon (the polygon must not be self-intersecting). The vehicle must stay outside this area. Minimum of 3 vertices required.
        </description>
        <param index="1">Polygon vertex count</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_NAV_FENCE_CIRCLE_INCLUSION" value="5003">
        <description>Circular fence area. The vehicle must stay inside this area.
        </description>
        <param index="1">radius in meters</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_NAV_FENCE_CIRCLE_EXCLUSION" value="5004">
        <description>Circular fence area. The vehicle must stay outside this area.
        </description>
        <param index="1">radius in meters</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Reserved</param>
      </entry>
      <entry name="MAV_CMD_NAV_RALLY_POINT" value="5100">
        <description>Rally point. You can have multiple rally points defined.
        </description>
        <param index="1">Reserved</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Latitude</param>
        <param index="6">Longitude</param>
        <param index="7">Altitude</param>
      </entry>
      
      
      <entry name="MAV_CMD_UAVCAN_GET_NODE_INFO" value="5200">
        <description>Commands the vehicle to respond with a sequence of messages UAVCAN_NODE_INFO, one message per every UAVCAN node that is online. Note that some of the response messages can be lost, which the receiver can detect easily by checking whether every received UAVCAN_NODE_STATUS has a matching message UAVCAN_NODE_INFO received earlier; if not, this command should be sent again in order to request re-transmission of the node information messages.</description>
        <param index="1">Reserved (set to 0)</param>
        <param index="2">Reserved (set to 0)</param>
        <param index="3">Reserved (set to 0)</param>
        <param index="4">Reserved (set to 0)</param>
        <param index="5">Reserved (set to 0)</param>
        <param index="6">Reserved (set to 0)</param>
        <param index="7">Reserved (set to 0)</param>
      </entry>
      
      
      
      <entry name="MAV_CMD_PAYLOAD_PREPARE_DEPLOY" value="30001">
        <description>Deploy payload on a Lat / Lon / Alt position. This includes the navigation to reach the required release position and velocity.</description>
        <param index="1">Operation mode. 0: prepare single payload deploy (overwriting previous requests), but do not execute it. 1: execute payload deploy immediately (rejecting further deploy commands during execution, but allowing abort). 2: add payload deploy to existing deployment list.</param>
        <param index="2">Desired approach vector in degrees compass heading (0..360). A negative value indicates the system can define the approach vector at will.</param>
        <param index="3">Desired ground speed at release time. This can be overriden by the airframe in case it needs to meet minimum airspeed. A negative value indicates the system can define the ground speed at will.</param>
        <param index="4">Minimum altitude clearance to the release position in meters. A negative value indicates the system can define the clearance at will.</param>
        <param index="5">Latitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT</param>
        <param index="6">Longitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_PAYLOAD_CONTROL_DEPLOY" value="30002">
        <description>Control the payload deployment.</description>
        <param index="1">Operation mode. 0: Abort deployment, continue normal mission. 1: switch to payload deploment mode. 100: delete first payload deployment request. 101: delete all payload deployment requests.</param>
        <param index="2">Reserved</param>
        <param index="3">Reserved</param>
        <param index="4">Reserved</param>
        <param index="5">Reserved</param>
        <param index="6">Reserved</param>
        <param index="7">Reserved</param>
      </entry>
      
      
      <entry name="MAV_CMD_WAYPOINT_USER_1" value="31000">
        <description>User defined waypoint item. Ground Station will show the Vehicle as flying through this item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_WAYPOINT_USER_2" value="31001">
        <description>User defined waypoint item. Ground Station will show the Vehicle as flying through this item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_WAYPOINT_USER_3" value="31002">
        <description>User defined waypoint item. Ground Station will show the Vehicle as flying through this item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_WAYPOINT_USER_4" value="31003">
        <description>User defined waypoint item. Ground Station will show the Vehicle as flying through this item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_WAYPOINT_USER_5" value="31004">
        <description>User defined waypoint item. Ground Station will show the Vehicle as flying through this item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_SPATIAL_USER_1" value="31005">
        <description>User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_SPATIAL_USER_2" value="31006">
        <description>User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_SPATIAL_USER_3" value="31007">
        <description>User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_SPATIAL_USER_4" value="31008">
        <description>User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_SPATIAL_USER_5" value="31009">
        <description>User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">Latitude unscaled</param>
        <param index="6">Longitude unscaled</param>
        <param index="7">Altitude, in meters AMSL</param>
      </entry>
      <entry name="MAV_CMD_USER_1" value="31010">
        <description>User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">User defined</param>
        <param index="6">User defined</param>
        <param index="7">User defined</param>
      </entry>
      <entry name="MAV_CMD_USER_2" value="31011">
        <description>User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">User defined</param>
        <param index="6">User defined</param>
        <param index="7">User defined</param>
      </entry>
      <entry name="MAV_CMD_USER_3" value="31012">
        <description>User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">User defined</param>
        <param index="6">User defined</param>
        <param index="7">User defined</param>
      </entry>
      <entry name="MAV_CMD_USER_4" value="31013">
        <description>User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">User defined</param>
        <param index="6">User defined</param>
        <param index="7">User defined</param>
      </entry>
      <entry name="MAV_CMD_USER_5" value="31014">
        <description>User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.</description>
        <param index="1">User defined</param>
        <param index="2">User defined</param>
        <param index="3">User defined</param>
        <param index="4">User defined</param>
        <param index="5">User defined</param>
        <param index="6">User defined</param>
        <param index="7">User defined</param>
      </entry>
      
    </enum>
    <enum name="MAV_DATA_STREAM">
      <description>THIS INTERFACE IS DEPRECATED AS OF JULY 2015. Please use MESSAGE_INTERVAL instead. A data stream is not a fixed set of messages, but rather a
     recommendation to the autopilot software. Individual autopilots may or may not obey
     the recommended messages.</description>
      <entry name="MAV_DATA_STREAM_ALL" value="0">
        <description>Enable all data streams</description>
      </entry>
      <entry name="MAV_DATA_STREAM_RAW_SENSORS" value="1">
        <description>Enable IMU_RAW, GPS_RAW, GPS_STATUS packets.</description>
      </entry>
      <entry name="MAV_DATA_STREAM_EXTENDED_STATUS" value="2">
        <description>Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS</description>
      </entry>
      <entry name="MAV_DATA_STREAM_RC_CHANNELS" value="3">
        <description>Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW</description>
      </entry>
      <entry name="MAV_DATA_STREAM_RAW_CONTROLLER" value="4">
        <description>Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT.</description>
      </entry>
      <entry name="MAV_DATA_STREAM_POSITION" value="6">
        <description>Enable LOCAL_POSITION, GLOBAL_POSITION/GLOBAL_POSITION_INT messages.</description>
      </entry>
      <entry name="MAV_DATA_STREAM_EXTRA1" value="10">
        <description>Dependent on the autopilot</description>
      </entry>
      <entry name="MAV_DATA_STREAM_EXTRA2" value="11">
        <description>Dependent on the autopilot</description>
      </entry>
      <entry name="MAV_DATA_STREAM_EXTRA3" value="12">
        <description>Dependent on the autopilot</description>
      </entry>
    </enum>
    <enum name="MAV_ROI">
      <description> The ROI (region of interest) for the vehicle. This can be
                be used by the vehicle for camera/vehicle attitude alignment (see
                MAV_CMD_NAV_ROI).</description>
      <entry name="MAV_ROI_NONE" value="0">
        <description>No region of interest.</description>
      </entry>
      <entry name="MAV_ROI_WPNEXT" value="1">
        <description>Point toward next waypoint.</description>
      </entry>
      <entry name="MAV_ROI_WPINDEX" value="2">
        <description>Point toward given waypoint.</description>
      </entry>
      <entry name="MAV_ROI_LOCATION" value="3">
        <description>Point toward fixed location.</description>
      </entry>
      <entry name="MAV_ROI_TARGET" value="4">
        <description>Point toward of given id.</description>
      </entry>
    </enum>
    <enum name="MAV_CMD_ACK">
      <description>ACK / NACK / ERROR values as a result of MAV_CMDs and for mission item transmission.</description>
      <entry name="MAV_CMD_ACK_OK">
        <description>Command / mission item is ok.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_FAIL">
        <description>Generic error message if none of the other reasons fails or if no detailed error reporting is implemented.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_ACCESS_DENIED">
        <description>The system is refusing to accept this command from this source / communication partner.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_NOT_SUPPORTED">
        <description>Command or mission item is not supported, other commands would be accepted.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED">
        <description>The coordinate frame of this command / mission item is not supported.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE">
        <description>The coordinate frame of this command is ok, but he coordinate values exceed the safety limits of this system. This is a generic error, please use the more specific error messages below if possible.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE">
        <description>The X or latitude value is out of range.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE">
        <description>The Y or longitude value is out of range.</description>
      </entry>
      <entry name="MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE">
        <description>The Z or altitude value is out of range.</description>
      </entry>
    </enum>
    <enum name="MAV_PARAM_TYPE">
      <description>Specifies the datatype of a MAVLink parameter.</description>
      <entry name="MAV_PARAM_TYPE_UINT8" value="1">
        <description>8-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_INT8" value="2">
        <description>8-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_UINT16" value="3">
        <description>16-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_INT16" value="4">
        <description>16-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_UINT32" value="5">
        <description>32-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_INT32" value="6">
        <description>32-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_UINT64" value="7">
        <description>64-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_INT64" value="8">
        <description>64-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_REAL32" value="9">
        <description>32-bit floating-point</description>
      </entry>
      <entry name="MAV_PARAM_TYPE_REAL64" value="10">
        <description>64-bit floating-point</description>
      </entry>
    </enum>
    <enum name="MAV_PARAM_EXT_TYPE">
      <description>Specifies the datatype of a MAVLink extended parameter.</description>
      <entry name="MAV_PARAM_EXT_TYPE_UINT8" value="1">
        <description>8-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_INT8" value="2">
        <description>8-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_UINT16" value="3">
        <description>16-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_INT16" value="4">
        <description>16-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_UINT32" value="5">
        <description>32-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_INT32" value="6">
        <description>32-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_UINT64" value="7">
        <description>64-bit unsigned integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_INT64" value="8">
        <description>64-bit signed integer</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_REAL32" value="9">
        <description>32-bit floating-point</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_REAL64" value="10">
        <description>64-bit floating-point</description>
      </entry>
      <entry name="MAV_PARAM_EXT_TYPE_CUSTOM" value="11">
        <description>Custom Type</description>
      </entry>
    </enum>
    <enum name="MAV_RESULT">
      <description>result from a mavlink command</description>
      <entry name="MAV_RESULT_ACCEPTED" value="0">
        <description>Command ACCEPTED and EXECUTED</description>
      </entry>
      <entry name="MAV_RESULT_TEMPORARILY_REJECTED" value="1">
        <description>Command TEMPORARY REJECTED/DENIED</description>
      </entry>
      <entry name="MAV_RESULT_DENIED" value="2">
        <description>Command PERMANENTLY DENIED</description>
      </entry>
      <entry name="MAV_RESULT_UNSUPPORTED" value="3">
        <description>Command UNKNOWN/UNSUPPORTED</description>
      </entry>
      <entry name="MAV_RESULT_FAILED" value="4">
        <description>Command executed, but failed</description>
      </entry>
      <entry name="MAV_RESULT_IN_PROGRESS" value="5">
        <description>WIP: Command being executed</description>
      </entry>
    </enum>
    <enum name="MAV_MISSION_RESULT">
      <description>result in a mavlink mission ack</description>
      <entry name="MAV_MISSION_ACCEPTED" value="0">
        <description>mission accepted OK</description>
      </entry>
      <entry name="MAV_MISSION_ERROR" value="1">
        <description>generic error / not accepting mission commands at all right now</description>
      </entry>
      <entry name="MAV_MISSION_UNSUPPORTED_FRAME" value="2">
        <description>coordinate frame is not supported</description>
      </entry>
      <entry name="MAV_MISSION_UNSUPPORTED" value="3">
        <description>command is not supported</description>
      </entry>
      <entry name="MAV_MISSION_NO_SPACE" value="4">
        <description>mission item exceeds storage space</description>
      </entry>
      <entry name="MAV_MISSION_INVALID" value="5">
        <description>one of the parameters has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM1" value="6">
        <description>param1 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM2" value="7">
        <description>param2 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM3" value="8">
        <description>param3 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM4" value="9">
        <description>param4 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM5_X" value="10">
        <description>x/param5 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM6_Y" value="11">
        <description>y/param6 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_PARAM7" value="12">
        <description>param7 has an invalid value</description>
      </entry>
      <entry name="MAV_MISSION_INVALID_SEQUENCE" value="13">
        <description>received waypoint out of sequence</description>
      </entry>
      <entry name="MAV_MISSION_DENIED" value="14">
        <description>not accepting any mission commands from this communication partner</description>
      </entry>
    </enum>
    <enum name="MAV_SEVERITY">
      <description>Indicates the severity level, generally used for status messages to indicate their relative urgency. Based on RFC-5424 using expanded definitions at: http://www.kiwisyslog.com/kb/info:-syslog-message-levels/.</description>
      <entry name="MAV_SEVERITY_EMERGENCY" value="0">
        <description>System is unusable. This is a "panic" condition.</description>
      </entry>
      <entry name="MAV_SEVERITY_ALERT" value="1">
        <description>Action should be taken immediately. Indicates error in non-critical systems.</description>
      </entry>
      <entry name="MAV_SEVERITY_CRITICAL" value="2">
        <description>Action must be taken immediately. Indicates failure in a primary system.</description>
      </entry>
      <entry name="MAV_SEVERITY_ERROR" value="3">
        <description>Indicates an error in secondary/redundant systems.</description>
      </entry>
      <entry name="MAV_SEVERITY_WARNING" value="4">
        <description>Indicates about a possible future error if this is not resolved within a given timeframe. Example would be a low battery warning.</description>
      </entry>
      <entry name="MAV_SEVERITY_NOTICE" value="5">
        <description>An unusual event has occured, though not an error condition. This should be investigated for the root cause.</description>
      </entry>
      <entry name="MAV_SEVERITY_INFO" value="6">
        <description>Normal operational messages. Useful for logging. No action is required for these messages.</description>
      </entry>
      <entry name="MAV_SEVERITY_DEBUG" value="7">
        <description>Useful non-operational messages that can assist in debugging. These should not occur during normal operation.</description>
      </entry>
    </enum>
    <enum name="MAV_POWER_STATUS">
      <description>Power supply status flags (bitmask)</description>
      <entry name="MAV_POWER_STATUS_BRICK_VALID" value="1">
        <description>main brick power supply valid</description>
      </entry>
      <entry name="MAV_POWER_STATUS_SERVO_VALID" value="2">
        <description>main servo power supply valid for FMU</description>
      </entry>
      <entry name="MAV_POWER_STATUS_USB_CONNECTED" value="4">
        <description>USB power is connected</description>
      </entry>
      <entry name="MAV_POWER_STATUS_PERIPH_OVERCURRENT" value="8">
        <description>peripheral supply is in over-current state</description>
      </entry>
      <entry name="MAV_POWER_STATUS_PERIPH_HIPOWER_OVERCURRENT" value="16">
        <description>hi-power peripheral supply is in over-current state</description>
      </entry>
      <entry name="MAV_POWER_STATUS_CHANGED" value="32">
        <description>Power status has changed since boot</description>
      </entry>
    </enum>
    <enum name="SERIAL_CONTROL_DEV">
      <description>SERIAL_CONTROL device types</description>
      <entry name="SERIAL_CONTROL_DEV_TELEM1" value="0">
        <description>First telemetry port</description>
      </entry>
      <entry name="SERIAL_CONTROL_DEV_TELEM2" value="1">
        <description>Second telemetry port</description>
      </entry>
      <entry name="SERIAL_CONTROL_DEV_GPS1" value="2">
        <description>First GPS port</description>
      </entry>
      <entry name="SERIAL_CONTROL_DEV_GPS2" value="3">
        <description>Second GPS port</description>
      </entry>
      <entry name="SERIAL_CONTROL_DEV_SHELL" value="10">
        <description>system shell</description>
      </entry>
    </enum>
    <enum name="SERIAL_CONTROL_FLAG">
      <description>SERIAL_CONTROL flags (bitmask)</description>
      <entry name="SERIAL_CONTROL_FLAG_REPLY" value="1">
        <description>Set if this is a reply</description>
      </entry>
      <entry name="SERIAL_CONTROL_FLAG_RESPOND" value="2">
        <description>Set if the sender wants the receiver to send a response as another SERIAL_CONTROL message</description>
      </entry>
      <entry name="SERIAL_CONTROL_FLAG_EXCLUSIVE" value="4">
        <description>Set if access to the serial port should be removed from whatever driver is currently using it, giving exclusive access to the SERIAL_CONTROL protocol. The port can be handed back by sending a request without this flag set</description>
      </entry>
      <entry name="SERIAL_CONTROL_FLAG_BLOCKING" value="8">
        <description>Block on writes to the serial port</description>
      </entry>
      <entry name="SERIAL_CONTROL_FLAG_MULTI" value="16">
        <description>Send multiple replies until port is drained</description>
      </entry>
    </enum>
    <enum name="MAV_DISTANCE_SENSOR">
      <description>Enumeration of distance sensor types</description>
      <entry name="MAV_DISTANCE_SENSOR_LASER" value="0">
        <description>Laser rangefinder, e.g. LightWare SF02/F or PulsedLight units</description>
      </entry>
      <entry name="MAV_DISTANCE_SENSOR_ULTRASOUND" value="1">
        <description>Ultrasound rangefinder, e.g. MaxBotix units</description>
      </entry>
      <entry name="MAV_DISTANCE_SENSOR_INFRARED" value="2">
        <description>Infrared rangefinder, e.g. Sharp units</description>
      </entry>
      <entry name="MAV_DISTANCE_SENSOR_RADAR" value="3">
        <description>Radar type, e.g. uLanding units</description>
      </entry>
      <entry name="MAV_DISTANCE_SENSOR_UNKNOWN" value="4">
        <description>Broken or unknown type, e.g. analog units</description>
      </entry>
    </enum>
    <enum name="MAV_SENSOR_ORIENTATION">
      <description>Enumeration of sensor orientation, according to its rotations</description>
      <entry name="MAV_SENSOR_ROTATION_NONE" value="0">
        <description>Roll: 0, Pitch: 0, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_45" value="1">
        <description>Roll: 0, Pitch: 0, Yaw: 45</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_90" value="2">
        <description>Roll: 0, Pitch: 0, Yaw: 90</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_135" value="3">
        <description>Roll: 0, Pitch: 0, Yaw: 135</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_180" value="4">
        <description>Roll: 0, Pitch: 0, Yaw: 180</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_225" value="5">
        <description>Roll: 0, Pitch: 0, Yaw: 225</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_270" value="6">
        <description>Roll: 0, Pitch: 0, Yaw: 270</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_YAW_315" value="7">
        <description>Roll: 0, Pitch: 0, Yaw: 315</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180" value="8">
        <description>Roll: 180, Pitch: 0, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_YAW_45" value="9">
        <description>Roll: 180, Pitch: 0, Yaw: 45</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_YAW_90" value="10">
        <description>Roll: 180, Pitch: 0, Yaw: 90</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_YAW_135" value="11">
        <description>Roll: 180, Pitch: 0, Yaw: 135</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_PITCH_180" value="12">
        <description>Roll: 0, Pitch: 180, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_YAW_225" value="13">
        <description>Roll: 180, Pitch: 0, Yaw: 225</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_YAW_270" value="14">
        <description>Roll: 180, Pitch: 0, Yaw: 270</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_YAW_315" value="15">
        <description>Roll: 180, Pitch: 0, Yaw: 315</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90" value="16">
        <description>Roll: 90, Pitch: 0, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_YAW_45" value="17">
        <description>Roll: 90, Pitch: 0, Yaw: 45</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_YAW_90" value="18">
        <description>Roll: 90, Pitch: 0, Yaw: 90</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_YAW_135" value="19">
        <description>Roll: 90, Pitch: 0, Yaw: 135</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270" value="20">
        <description>Roll: 270, Pitch: 0, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270_YAW_45" value="21">
        <description>Roll: 270, Pitch: 0, Yaw: 45</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270_YAW_90" value="22">
        <description>Roll: 270, Pitch: 0, Yaw: 90</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270_YAW_135" value="23">
        <description>Roll: 270, Pitch: 0, Yaw: 135</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_PITCH_90" value="24">
        <description>Roll: 0, Pitch: 90, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_PITCH_270" value="25">
        <description>Roll: 0, Pitch: 270, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_PITCH_180_YAW_90" value="26">
        <description>Roll: 0, Pitch: 180, Yaw: 90</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_PITCH_180_YAW_270" value="27">
        <description>Roll: 0, Pitch: 180, Yaw: 270</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_90" value="28">
        <description>Roll: 90, Pitch: 90, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_PITCH_90" value="29">
        <description>Roll: 180, Pitch: 90, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270_PITCH_90" value="30">
        <description>Roll: 270, Pitch: 90, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_180" value="31">
        <description>Roll: 90, Pitch: 180, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270_PITCH_180" value="32">
        <description>Roll: 270, Pitch: 180, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_270" value="33">
        <description>Roll: 90, Pitch: 270, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_180_PITCH_270" value="34">
        <description>Roll: 180, Pitch: 270, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_270_PITCH_270" value="35">
        <description>Roll: 270, Pitch: 270, Yaw: 0</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_PITCH_180_YAW_90" value="36">
        <description>Roll: 90, Pitch: 180, Yaw: 90</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_90_YAW_270" value="37">
        <description>Roll: 90, Pitch: 0, Yaw: 270</description>
      </entry>
      <entry name="MAV_SENSOR_ROTATION_ROLL_315_PITCH_315_YAW_315" value="38">
        <description>Roll: 315, Pitch: 315, Yaw: 315</description>
      </entry>
    </enum>
    <enum name="MAV_PROTOCOL_CAPABILITY">
      <description>Bitmask of (optional) autopilot capabilities (64 bit). If a bit is set, the autopilot supports this capability.</description>
      <entry name="MAV_PROTOCOL_CAPABILITY_MISSION_FLOAT" value="1">
        <description>Autopilot supports MISSION float message type.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_PARAM_FLOAT" value="2">
        <description>Autopilot supports the new param float message type.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_MISSION_INT" value="4">
        <description>Autopilot supports MISSION_INT scaled integer message type.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_COMMAND_INT" value="8">
        <description>Autopilot supports COMMAND_INT scaled integer message type.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_PARAM_UNION" value="16">
        <description>Autopilot supports the new param union message type.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_FTP" value="32">
        <description>Autopilot supports the new FILE_TRANSFER_PROTOCOL message type.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_SET_ATTITUDE_TARGET" value="64">
        <description>Autopilot supports commanding attitude offboard.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_LOCAL_NED" value="128">
        <description>Autopilot supports commanding position and velocity targets in local NED frame.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_GLOBAL_INT" value="256">
        <description>Autopilot supports commanding position and velocity targets in global scaled integers.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_TERRAIN" value="512">
        <description>Autopilot supports terrain protocol / data handling.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_SET_ACTUATOR_TARGET" value="1024">
        <description>Autopilot supports direct actuator control.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_FLIGHT_TERMINATION" value="2048">
        <description>Autopilot supports the flight termination command.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_COMPASS_CALIBRATION" value="4096">
        <description>Autopilot supports onboard compass calibration.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_MAVLINK2" value="8192">
        <description>Autopilot supports mavlink version 2.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_MISSION_FENCE" value="16384">
        <description>Autopilot supports mission fence protocol.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_MISSION_RALLY" value="32768">
        <description>Autopilot supports mission rally point protocol.</description>
      </entry>
      <entry name="MAV_PROTOCOL_CAPABILITY_FLIGHT_INFORMATION" value="65536">
        <description>Autopilot supports the flight information protocol.</description>
      </entry>
    </enum>
    <enum name="MAV_MISSION_TYPE">
      <description>Type of mission items being requested/sent in mission protocol.</description>
      <entry name="MAV_MISSION_TYPE_MISSION" value="0">
        <description>Items are mission commands for main mission.</description>
      </entry>
      <entry name="MAV_MISSION_TYPE_FENCE" value="1">
        <description>Specifies GeoFence area(s). Items are MAV_CMD_FENCE_ GeoFence items.</description>
      </entry>
      <entry name="MAV_MISSION_TYPE_RALLY" value="2">
        <description>Specifies the rally points for the vehicle. Rally points are alternative RTL points. Items are MAV_CMD_RALLY_POINT rally point items.</description>
      </entry>
      <entry name="MAV_MISSION_TYPE_ALL" value="255">
        <description>Only used in MISSION_CLEAR_ALL to clear all mission types.</description>
      </entry>
    </enum>
    <enum name="MAV_ESTIMATOR_TYPE">
      <description>Enumeration of estimator types</description>
      <entry name="MAV_ESTIMATOR_TYPE_NAIVE" value="1">
        <description>This is a naive estimator without any real covariance feedback.</description>
      </entry>
      <entry name="MAV_ESTIMATOR_TYPE_VISION" value="2">
        <description>Computer vision based estimate. Might be up to scale.</description>
      </entry>
      <entry name="MAV_ESTIMATOR_TYPE_VIO" value="3">
        <description>Visual-inertial estimate.</description>
      </entry>
      <entry name="MAV_ESTIMATOR_TYPE_GPS" value="4">
        <description>Plain GPS estimate.</description>
      </entry>
      <entry name="MAV_ESTIMATOR_TYPE_GPS_INS" value="5">
        <description>Estimator integrating GPS and inertial sensing.</description>
      </entry>
    </enum>
    <enum name="MAV_BATTERY_TYPE">
      <description>Enumeration of battery types</description>
      <entry name="MAV_BATTERY_TYPE_UNKNOWN" value="0">
        <description>Not specified.</description>
      </entry>
      <entry name="MAV_BATTERY_TYPE_LIPO" value="1">
        <description>Lithium polymer battery</description>
      </entry>
      <entry name="MAV_BATTERY_TYPE_LIFE" value="2">
        <description>Lithium-iron-phosphate battery</description>
      </entry>
      <entry name="MAV_BATTERY_TYPE_LION" value="3">
        <description>Lithium-ION battery</description>
      </entry>
      <entry name="MAV_BATTERY_TYPE_NIMH" value="4">
        <description>Nickel metal hydride battery</description>
      </entry>
    </enum>
    <enum name="MAV_BATTERY_FUNCTION">
      <description>Enumeration of battery functions</description>
      <entry name="MAV_BATTERY_FUNCTION_UNKNOWN" value="0">
        <description>Battery function is unknown</description>
      </entry>
      <entry name="MAV_BATTERY_FUNCTION_ALL" value="1">
        <description>Battery supports all flight systems</description>
      </entry>
      <entry name="MAV_BATTERY_FUNCTION_PROPULSION" value="2">
        <description>Battery for the propulsion system</description>
      </entry>
      <entry name="MAV_BATTERY_FUNCTION_AVIONICS" value="3">
        <description>Avionics battery</description>
      </entry>
      <entry name="MAV_BATTERY_TYPE_PAYLOAD" value="4">
        <description>Payload battery</description>
      </entry>
    </enum>
    <enum name="MAV_VTOL_STATE">
      <description>Enumeration of VTOL states</description>
      <entry name="MAV_VTOL_STATE_UNDEFINED" value="0">
        <description>MAV is not configured as VTOL</description>
      </entry>
      <entry name="MAV_VTOL_STATE_TRANSITION_TO_FW" value="1">
        <description>VTOL is in transition from multicopter to fixed-wing</description>
      </entry>
      <entry name="MAV_VTOL_STATE_TRANSITION_TO_MC" value="2">
        <description>VTOL is in transition from fixed-wing to multicopter</description>
      </entry>
      <entry name="MAV_VTOL_STATE_MC" value="3">
        <description>VTOL is in multicopter state</description>
      </entry>
      <entry name="MAV_VTOL_STATE_FW" value="4">
        <description>VTOL is in fixed-wing state</description>
      </entry>
    </enum>
    <enum name="MAV_LANDED_STATE">
      <description>Enumeration of landed detector states</description>
      <entry name="MAV_LANDED_STATE_UNDEFINED" value="0">
        <description>MAV landed state is unknown</description>
      </entry>
      <entry name="MAV_LANDED_STATE_ON_GROUND" value="1">
        <description>MAV is landed (on ground)</description>
      </entry>
      <entry name="MAV_LANDED_STATE_IN_AIR" value="2">
        <description>MAV is in air</description>
      </entry>
      <entry name="MAV_LANDED_STATE_TAKEOFF" value="3">
        <description>MAV currently taking off</description>
      </entry>
      <entry name="MAV_LANDED_STATE_LANDING" value="4">
        <description>MAV currently landing</description>
      </entry>
    </enum>
    <enum name="ADSB_ALTITUDE_TYPE">
      <description>Enumeration of the ADSB altimeter types</description>
      <entry name="ADSB_ALTITUDE_TYPE_PRESSURE_QNH" value="0">
        <description>Altitude reported from a Baro source using QNH reference</description>
      </entry>
      <entry name="ADSB_ALTITUDE_TYPE_GEOMETRIC" value="1">
        <description>Altitude reported from a GNSS source</description>
      </entry>
    </enum>
    <enum name="ADSB_EMITTER_TYPE">
      <description>ADSB classification for the type of vehicle emitting the transponder signal</description>
      <entry name="ADSB_EMITTER_TYPE_NO_INFO" value="0" />
      <entry name="ADSB_EMITTER_TYPE_LIGHT" value="1" />
      <entry name="ADSB_EMITTER_TYPE_SMALL" value="2" />
      <entry name="ADSB_EMITTER_TYPE_LARGE" value="3" />
      <entry name="ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE" value="4" />
      <entry name="ADSB_EMITTER_TYPE_HEAVY" value="5" />
      <entry name="ADSB_EMITTER_TYPE_HIGHLY_MANUV" value="6" />
      <entry name="ADSB_EMITTER_TYPE_ROTOCRAFT" value="7" />
      <entry name="ADSB_EMITTER_TYPE_UNASSIGNED" value="8" />
      <entry name="ADSB_EMITTER_TYPE_GLIDER" value="9" />
      <entry name="ADSB_EMITTER_TYPE_LIGHTER_AIR" value="10" />
      <entry name="ADSB_EMITTER_TYPE_PARACHUTE" value="11" />
      <entry name="ADSB_EMITTER_TYPE_ULTRA_LIGHT" value="12" />
      <entry name="ADSB_EMITTER_TYPE_UNASSIGNED2" value="13" />
      <entry name="ADSB_EMITTER_TYPE_UAV" value="14" />
      <entry name="ADSB_EMITTER_TYPE_SPACE" value="15" />
      <entry name="ADSB_EMITTER_TYPE_UNASSGINED3" value="16" />
      <entry name="ADSB_EMITTER_TYPE_EMERGENCY_SURFACE" value="17" />
      <entry name="ADSB_EMITTER_TYPE_SERVICE_SURFACE" value="18" />
      <entry name="ADSB_EMITTER_TYPE_POINT_OBSTACLE" value="19" />
    </enum>
    <enum name="ADSB_FLAGS">
      <description>These flags indicate status such as data validity of each data source. Set = data valid</description>
      <entry name="ADSB_FLAGS_VALID_COORDS" value="1" />
      <entry name="ADSB_FLAGS_VALID_ALTITUDE" value="2" />
      <entry name="ADSB_FLAGS_VALID_HEADING" value="4" />
      <entry name="ADSB_FLAGS_VALID_VELOCITY" value="8" />
      <entry name="ADSB_FLAGS_VALID_CALLSIGN" value="16" />
      <entry name="ADSB_FLAGS_VALID_SQUAWK" value="32" />
      <entry name="ADSB_FLAGS_SIMULATED" value="64" />
    </enum>
    <enum name="MAV_DO_REPOSITION_FLAGS">
      <description>Bitmask of options for the MAV_CMD_DO_REPOSITION</description>
      <entry name="MAV_DO_REPOSITION_FLAGS_CHANGE_MODE" value="1">
        <description>The aircraft should immediately transition into guided. This should not be set for follow me applications</description>
      </entry>
    </enum>
    
    <enum name="ESTIMATOR_STATUS_FLAGS">
      <description>Flags in EKF_STATUS message</description>
      <entry name="ESTIMATOR_ATTITUDE" value="1">
        <description>True if the attitude estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_VELOCITY_HORIZ" value="2">
        <description>True if the horizontal velocity estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_VELOCITY_VERT" value="4">
        <description>True if the  vertical velocity estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_POS_HORIZ_REL" value="8">
        <description>True if the horizontal position (relative) estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_POS_HORIZ_ABS" value="16">
        <description>True if the horizontal position (absolute) estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_POS_VERT_ABS" value="32">
        <description>True if the vertical position (absolute) estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_POS_VERT_AGL" value="64">
        <description>True if the vertical position (above ground) estimate is good</description>
      </entry>
      <entry name="ESTIMATOR_CONST_POS_MODE" value="128">
        <description>True if the EKF is in a constant position mode and is not using external measurements (eg GPS or optical flow)</description>
      </entry>
      <entry name="ESTIMATOR_PRED_POS_HORIZ_REL" value="256">
        <description>True if the EKF has sufficient data to enter a mode that will provide a (relative) position estimate</description>
      </entry>
      <entry name="ESTIMATOR_PRED_POS_HORIZ_ABS" value="512">
        <description>True if the EKF has sufficient data to enter a mode that will provide a (absolute) position estimate</description>
      </entry>
      <entry name="ESTIMATOR_GPS_GLITCH" value="1024">
        <description>True if the EKF has detected a GPS glitch</description>
      </entry>
    </enum>
    
    <enum name="MOTOR_TEST_THROTTLE_TYPE">
      <entry name="MOTOR_TEST_THROTTLE_PERCENT" value="0">
        <description>throttle as a percentage from 0 ~ 100</description>
      </entry>
      <entry name="MOTOR_TEST_THROTTLE_PWM" value="1">
        <description>throttle as an absolute PWM value (normally in range of 1000~2000)</description>
      </entry>
      <entry name="MOTOR_TEST_THROTTLE_PILOT" value="2">
        <description>throttle pass-through from pilot's transmitter</description>
      </entry>
    </enum>
    
    <enum name="GPS_INPUT_IGNORE_FLAGS">
      <entry name="GPS_INPUT_IGNORE_FLAG_ALT" value="1">
        <description>ignore altitude field</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_HDOP" value="2">
        <description>ignore hdop field</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_VDOP" value="4">
        <description>ignore vdop field</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_VEL_HORIZ" value="8">
        <description>ignore horizontal velocity field (vn and ve)</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_VEL_VERT" value="16">
        <description>ignore vertical velocity field (vd)</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_SPEED_ACCURACY" value="32">
        <description>ignore speed accuracy field</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_HORIZONTAL_ACCURACY" value="64">
        <description>ignore horizontal accuracy field</description>
      </entry>
      <entry name="GPS_INPUT_IGNORE_FLAG_VERTICAL_ACCURACY" value="128">
        <description>ignore vertical accuracy field</description>
      </entry>
    </enum>
    <enum name="MAV_COLLISION_ACTION">
      <description>Possible actions an aircraft can take to avoid a collision.</description>
      <entry name="MAV_COLLISION_ACTION_NONE" value="0">
        <description>Ignore any potential collisions</description>
      </entry>
      <entry name="MAV_COLLISION_ACTION_REPORT" value="1">
        <description>Report potential collision</description>
      </entry>
      <entry name="MAV_COLLISION_ACTION_ASCEND_OR_DESCEND" value="2">
        <description>Ascend or Descend to avoid threat</description>
      </entry>
      <entry name="MAV_COLLISION_ACTION_MOVE_HORIZONTALLY" value="3">
        <description>Move horizontally to avoid threat</description>
      </entry>
      <entry name="MAV_COLLISION_ACTION_MOVE_PERPENDICULAR" value="4">
        <description>Aircraft to move perpendicular to the collision's velocity vector</description>
      </entry>
      <entry name="MAV_COLLISION_ACTION_RTL" value="5">
        <description>Aircraft to fly directly back to its launch point</description>
      </entry>
      <entry name="MAV_COLLISION_ACTION_HOVER" value="6">
        <description>Aircraft to stop in place</description>
      </entry>
    </enum>
    <enum name="MAV_COLLISION_THREAT_LEVEL">
      <description>Aircraft-rated danger from this threat.</description>
      <entry name="MAV_COLLISION_THREAT_LEVEL_NONE" value="0">
        <description>Not a threat</description>
      </entry>
      <entry name="MAV_COLLISION_THREAT_LEVEL_LOW" value="1">
        <description>Craft is mildly concerned about this threat</description>
      </entry>
      <entry name="MAV_COLLISION_THREAT_LEVEL_HIGH" value="2">
        <description>Craft is panicing, and may take actions to avoid threat</description>
      </entry>
    </enum>
    <enum name="MAV_COLLISION_SRC">
      <description>Source of information about this collision.</description>
      <entry name="MAV_COLLISION_SRC_ADSB" value="0">
        <description>ID field references ADSB_VEHICLE packets</description>
      </entry>
      <entry name="MAV_COLLISION_SRC_MAVLINK_GPS_GLOBAL_INT" value="1">
        <description>ID field references MAVLink SRC ID</description>
      </entry>
    </enum>
    <enum name="GPS_FIX_TYPE">
      <description>Type of GPS fix</description>
      <entry name="GPS_FIX_TYPE_NO_GPS" value="0">
        <description>No GPS connected</description>
      </entry>
      <entry name="GPS_FIX_TYPE_NO_FIX" value="1">
        <description>No position information, GPS is connected</description>
      </entry>
      <entry name="GPS_FIX_TYPE_2D_FIX" value="2">
        <description>2D position</description>
      </entry>
      <entry name="GPS_FIX_TYPE_3D_FIX" value="3">
        <description>3D position</description>
      </entry>
      <entry name="GPS_FIX_TYPE_DGPS" value="4">
        <description>DGPS/SBAS aided 3D position</description>
      </entry>
      <entry name="GPS_FIX_TYPE_RTK_FLOAT" value="5">
        <description>RTK float, 3D position</description>
      </entry>
      <entry name="GPS_FIX_TYPE_RTK_FIXED" value="6">
        <description>RTK Fixed, 3D position</description>
      </entry>
      <entry name="GPS_FIX_TYPE_STATIC" value="7">
        <description>Static fixed, typically used for base stations</description>
      </entry>
      <entry name="GPS_FIX_TYPE_PPP" value="8">
        <description>PPP, 3D position.</description>
      </entry>
    </enum>
    <enum name="LANDING_TARGET_TYPE">
      <description>Type of landing target</description>
      <entry name="LANDING_TARGET_TYPE_LIGHT_BEACON" value="0">
        <description>Landing target signaled by light beacon (ex: IR-LOCK)</description>
      </entry>
      <entry name="LANDING_TARGET_TYPE_RADIO_BEACON" value="1">
        <description>Landing target signaled by radio beacon (ex: ILS, NDB)</description>
      </entry>
      <entry name="LANDING_TARGET_TYPE_VISION_FIDUCIAL" value="2">
        <description>Landing target represented by a fiducial marker (ex: ARTag)</description>
      </entry>
      <entry name="LANDING_TARGET_TYPE_VISION_OTHER" value="3">
        <description>Landing target represented by a pre-defined visual shape/feature (ex: X-marker, H-marker, square)</description>
      </entry>
    </enum>
    <enum name="VTOL_TRANSITION_HEADING">
      <description>Direction of VTOL transition</description>
      <entry name="VTOL_TRANSITION_HEADING_VEHICLE_DEFAULT" value="0">
        <description>Respect the heading configuration of the vehicle.</description>
      </entry>
      <entry name="VTOL_TRANSITION_HEADING_NEXT_WAYPOINT" value="1">
        <description>Use the heading pointing towards the next waypoint.</description>
      </entry>
      <entry name="VTOL_TRANSITION_HEADING_TAKEOFF" value="2">
        <description>Use the heading on takeoff (while sitting on the ground).</description>
      </entry>
      <entry name="VTOL_TRANSITION_HEADING_SPECIFIED" value="3">
        <description>Use the specified heading in parameter 4.</description>
      </entry>
      <entry name="VTOL_TRANSITION_HEADING_ANY" value="4">
        <description>Use the current heading when reaching takeoff altitude (potentially facing the wind when weather-vaning is active).</description>
      </entry>
    </enum>
    <enum name="CAMERA_CAP_FLAGS">
      <description>Camera capability flags (Bitmap).</description>
      <entry name="CAMERA_CAP_FLAGS_CAPTURE_VIDEO" value="1">
        <description>Camera is able to record video.</description>
      </entry>
      <entry name="CAMERA_CAP_FLAGS_CAPTURE_IMAGE" value="2">
        <description>Camera is able to capture images.</description>
      </entry>
      <entry name="CAMERA_CAP_FLAGS_HAS_MODES" value="4">
        <description>Camera has separate Video and Image/Photo modes (MAV_CMD_SET_CAMERA_MODE)</description>
      </entry>
      <entry name="CAMERA_CAP_FLAGS_CAN_CAPTURE_IMAGE_IN_VIDEO_MODE" value="8">
        <description>Camera can capture images while in video mode</description>
      </entry>
      <entry name="CAMERA_CAP_FLAGS_CAN_CAPTURE_VIDEO_IN_IMAGE_MODE" value="16">
        <description>Camera can capture videos while in Photo/Image mode</description>
      </entry>
      <entry name="CAMERA_CAP_FLAGS_HAS_IMAGE_SURVEY_MODE" value="32">
        <description>Camera has image survey mode (MAV_CMD_SET_CAMERA_MODE)</description>
      </entry>
    </enum>
    <enum name="PARAM_ACK">
      <description>Result from a PARAM_EXT_SET message.</description>
      <entry name="PARAM_ACK_ACCEPTED" value="0">
        <description>Parameter value ACCEPTED and SET</description>
      </entry>
      <entry name="PARAM_ACK_VALUE_UNSUPPORTED" value="1">
        <description>Parameter value UNKNOWN/UNSUPPORTED</description>
      </entry>
      <entry name="PARAM_ACK_FAILED" value="2">
        <description>Parameter failed to set</description>
      </entry>
      <entry name="PARAM_ACK_IN_PROGRESS" value="3">
        <description>Parameter value received but not yet validated or set. A subsequent PARAM_EXT_ACK will follow once operation is completed with the actual result. These are for parameters that may take longer to set. Instead of waiting for an ACK and potentially timing out, you will immediately receive this response to let you know it was received.</description>
      </entry>
    </enum>
    <enum name="CAMERA_MODE">
      <description>Camera Modes.</description>
      <entry name="CAMERA_MODE_IMAGE" value="0">
        <description>Camera is in image/photo capture mode.</description>
      </entry>
      <entry name="CAMERA_MODE_VIDEO" value="1">
        <description>Camera is in video capture mode.</description>
      </entry>
      <entry name="CAMERA_MODE_IMAGE_SURVEY" value="2">
        <description>Camera is in image survey capture mode. It allows for camera controller to do specific settings for surveys.</description>
      </entry>
    </enum>
    <enum name="MAV_ARM_AUTH_DENIED_REASON">
      <entry name="MAV_ARM_AUTH_DENIED_REASON_GENERIC" value="0">
        <description>Not a specific reason</description>
      </entry>
      <entry name="MAV_ARM_AUTH_DENIED_REASON_NONE" value="1">
        <description>Authorizer will send the error as string to GCS</description>
      </entry>
      <entry name="MAV_ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT" value="2">
        <description>At least one waypoint have a invalid value</description>
      </entry>
      <entry name="MAV_ARM_AUTH_DENIED_REASON_TIMEOUT" value="3">
        <description>Timeout in the authorizer process(in case it depends on network)</description>
      </entry>
      <entry name="MAV_ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE" value="4">
        <description>Airspace of the mission in use by another vehicle, second result parameter can have the waypoint id that caused it to be denied.</description>
      </entry>
      <entry name="MAV_ARM_AUTH_DENIED_REASON_BAD_WEATHER" value="5">
        <description>Weather is not good to fly</description>
      </entry>
    </enum>
  </enums>
  <messages>
    <message id="0" name="HEARTBEAT">
      <description>The heartbeat message shows that a system is present and responding. The type of the MAV and Autopilot hardware allow the receiving system to treat further messages from this system appropriate (e.g. by laying out the user interface based on the autopilot).</description>
      <field enum="MAV_TYPE" name="type" type="uint8_t">Type of the MAV (quadrotor, helicopter, etc., up to 15 types, defined in MAV_TYPE ENUM)</field>
      <field enum="MAV_AUTOPILOT" name="autopilot" type="uint8_t">Autopilot type / class. defined in MAV_AUTOPILOT ENUM</field>
      <field display="bitmask" enum="MAV_MODE_FLAG" name="base_mode" type="uint8_t">System mode bitfield, see MAV_MODE_FLAG ENUM in mavlink/include/mavlink_types.h</field>
      <field name="custom_mode" type="uint32_t">A bitfield for use for autopilot-specific flags.</field>
      <field enum="MAV_STATE" name="system_status" type="uint8_t">System status flag, see MAV_STATE ENUM</field>
      <field name="mavlink_version" type="uint8_t_mavlink_version">MAVLink version, not writable by user, gets added by protocol because of magic data type: uint8_t_mavlink_version</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="1" name="SYS_STATUS">
      <description>The general system state. If the system is following the MAVLink standard, the system state is mainly defined by three orthogonal states/modes: The system mode, which is either LOCKED (motors shut down and locked), MANUAL (system under RC control), GUIDED (system with autonomous position control, position setpoint controlled manually) or AUTO (system guided by path/waypoint planner). The NAV_MODE defined the current flight state: LIFTOFF (often an open-loop maneuver), LANDING, WAYPOINTS or VECTOR. This represents the internal navigation state machine. The system status shows whether the system is currently active or not and if an emergency occured. During the CRITICAL and EMERGENCY states the MAV is still considered to be active, but should start emergency procedures autonomously. After a failure occured it should first move from active to critical to allow manual intervention and then move to emergency after a certain timeout.</description>
      <field display="bitmask" enum="MAV_SYS_STATUS_SENSOR" name="onboard_control_sensors_present" print_format="0x%04x" type="uint32_t">Bitmask showing which onboard controllers and sensors are present. Value of 0: not present. Value of 1: present. Indices defined by ENUM MAV_SYS_STATUS_SENSOR</field>
      <field display="bitmask" enum="MAV_SYS_STATUS_SENSOR" name="onboard_control_sensors_enabled" print_format="0x%04x" type="uint32_t">Bitmask showing which onboard controllers and sensors are enabled:  Value of 0: not enabled. Value of 1: enabled. Indices defined by ENUM MAV_SYS_STATUS_SENSOR</field>
      <field display="bitmask" enum="MAV_SYS_STATUS_SENSOR" name="onboard_control_sensors_health" print_format="0x%04x" type="uint32_t">Bitmask showing which onboard controllers and sensors are operational or have an error:  Value of 0: not enabled. Value of 1: enabled. Indices defined by ENUM MAV_SYS_STATUS_SENSOR</field>
      <field name="load" type="uint16_t" units="d%">Maximum usage in percent of the mainloop time, (0%: 0, 100%: 1000) should be always below 1000</field>
      <field name="voltage_battery" type="uint16_t" units="mV">Battery voltage, in millivolts (1 = 1 millivolt)</field>
      <field name="current_battery" type="int16_t" units="cA">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
      <field name="battery_remaining" type="int8_t" units="%">Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot estimate the remaining battery</field>
      <field name="drop_rate_comm" type="uint16_t" units="c%">Communication drops in percent, (0%: 0, 100%: 10'000), (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
      <field name="errors_comm" type="uint16_t">Communication errors (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
      <field name="errors_count1" type="uint16_t">Autopilot-specific errors</field>
      <field name="errors_count2" type="uint16_t">Autopilot-specific errors</field>
      <field name="errors_count3" type="uint16_t">Autopilot-specific errors</field>
      <field name="errors_count4" type="uint16_t">Autopilot-specific errors</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="2" name="SYSTEM_TIME">
      <description>The system time is the time of the master clock, typically the computer clock of the main onboard computer.</description>
      <field name="time_unix_usec" type="uint64_t" units="us">Timestamp of the master clock in microseconds since UNIX epoch.</field>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp of the component clock since boot time in milliseconds.</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    
    <message id="4" name="PING">
      <description>A ping message either requesting or responding to a ping. This allows to measure the system latencies, including serial port, radio modem and UDP connections.</description>
      <field name="time_usec" type="uint64_t" units="us">Unix timestamp in microseconds or since system boot if smaller than MAVLink epoch (1.1.2009)</field>
      <field name="seq" type="uint32_t">PING sequence</field>
      <field name="target_system" type="uint8_t">0: request ping from all receiving systems, if greater than 0: message is a ping response and number is the system id of the requesting system</field>
      <field name="target_component" type="uint8_t">0: request ping from all receiving components, if greater than 0: message is a ping response and number is the system id of the requesting system</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="5" name="CHANGE_OPERATOR_CONTROL">
      <description>Request to control this MAV</description>
      <field name="target_system" type="uint8_t">System the GCS requests control for</field>
      <field name="control_request" type="uint8_t">0: request control of this MAV, 1: Release control of this MAV</field>
      <field name="version" type="uint8_t" units="rad">0: key as plaintext, 1-255: future, different hashing/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.</field>
      <field name="passkey" type="char[25]">Password / Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="6" name="CHANGE_OPERATOR_CONTROL_ACK">
      <description>Accept / deny control of this MAV</description>
      <field name="gcs_system_id" type="uint8_t">ID of the GCS this message </field>
      <field name="control_request" type="uint8_t">0: request control of this MAV, 1: Release control of this MAV</field>
      <field name="ack" type="uint8_t">0: ACK, 1: NACK: Wrong passkey, 2: NACK: Unsupported passkey encryption method, 3: NACK: Already under control</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="7" name="AUTH_KEY">
      <description>Emit an encrypted signature / key identifying this system. PLEASE NOTE: This protocol has been kept simple, so transmitting the key requires an encrypted channel for true safety.</description>
      <field name="key" type="char[32]">key</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="11" name="SET_MODE">
      <description>THIS INTERFACE IS DEPRECATED. USE COMMAND_LONG with MAV_CMD_DO_SET_MODE INSTEAD. Set the system mode, as defined by enum MAV_MODE. There is no target component id as the mode is by definition for the overall aircraft, not only for one component.</description>
      <field name="target_system" type="uint8_t">The system setting the mode</field>
      <field enum="MAV_MODE" name="base_mode" type="uint8_t">The new base mode</field>
      <field name="custom_mode" type="uint32_t">The new autopilot-specific mode. This field can be ignored by an autopilot.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    
    <message id="20" name="PARAM_REQUEST_READ">
      <description>Request to read the onboard parameter with the param_id string id. Onboard parameters are stored as key[const char*] -&gt; value[float]. This allows to send a parameter to any other component (such as the GCS) without the need of previous knowledge of possible parameter names. Thus the same GCS can store different parameters for different autopilots. See also http://qgroundcontrol.org/parameter_interface for a full documentation of QGroundControl and IMU code.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="param_id" type="char[16]">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_index" type="int16_t">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored)</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="21" name="PARAM_REQUEST_LIST">
      <description>Request all parameters of this component. After this request, all parameters are emitted.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="22" name="PARAM_VALUE">
      <description>Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout.</description>
      <field name="param_id" type="char[16]">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_value" type="float">Onboard parameter value</field>
      <field enum="MAV_PARAM_TYPE" name="param_type" type="uint8_t">Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.</field>
      <field name="param_count" type="uint16_t">Total number of onboard parameters</field>
      <field name="param_index" type="uint16_t">Index of this onboard parameter</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="23" name="PARAM_SET">
      <description>Set a parameter value TEMPORARILY to RAM. It will be reset to default on system reboot. Send the ACTION MAV_ACTION_STORAGE_WRITE to PERMANENTLY write the RAM contents to EEPROM. IMPORTANT: The receiving component should acknowledge the new parameter value by sending a param_value message to all communication partners. This will also ensure that multiple GCS all have an up-to-date list of all parameters. If the sending GCS did not receive a PARAM_VALUE message within its timeout time, it should re-send the PARAM_SET message.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="param_id" type="char[16]">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_value" type="float">Onboard parameter value</field>
      <field enum="MAV_PARAM_TYPE" name="param_type" type="uint8_t">Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.</field>
    <field name="padding" type="uint8_t[9]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="24" name="GPS_RAW_INT">
      <description>The global position, as returned by the Global Positioning System (GPS). This is
                NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field enum="GPS_FIX_TYPE" name="fix_type" type="uint8_t">See the GPS_FIX_TYPE enum.</field>
      <field name="lat" type="int32_t" units="degE7">Latitude (WGS84, EGM96 ellipsoid), in degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (WGS84, EGM96 ellipsoid), in degrees * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude (AMSL, NOT WGS84), in meters * 1000 (positive for up). Note that virtually all GPS modules provide the AMSL altitude in addition to the WGS84 altitude.</field>
      <field name="eph" type="uint16_t">GPS HDOP horizontal dilution of position (unitless). If unknown, set to: UINT16_MAX</field>
      <field name="epv" type="uint16_t">GPS VDOP vertical dilution of position (unitless). If unknown, set to: UINT16_MAX</field>
      <field name="vel" type="uint16_t" units="cm/s">GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX</field>
      <field name="cog" type="uint16_t" units="cdeg">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
      <field name="satellites_visible" type="uint8_t">Number of satellites visible. If unknown, set to 255</field>
      <extensions />
      <field name="alt_ellipsoid" type="int32_t" units="mm">Altitude (above WGS84, EGM96 ellipsoid), in meters * 1000 (positive for up).</field>
      <field name="h_acc" type="uint32_t" units="mm">Position uncertainty in meters * 1000 (positive for up).</field>
      <field name="v_acc" type="uint32_t" units="mm">Altitude uncertainty in meters * 1000 (positive for up).</field>
      <field name="vel_acc" type="uint32_t" units="mm">Speed uncertainty in meters * 1000 (positive for up).</field>
      <field name="hdg_acc" type="uint32_t" units="mm">Heading / track uncertainty in degrees * 1e5.</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="25" name="GPS_STATUS">
      <description>The positioning status, as reported by GPS. This message is intended to display status information about each satellite visible to the receiver. See message GLOBAL_POSITION for the global position estimate. This message can contain information for up to 20 satellites.</description>
      <field name="satellites_visible" type="uint8_t">Number of satellites visible</field>
      <field name="satellite_prn" type="uint8_t[20]">Global satellite ID</field>
      <field name="satellite_used" type="uint8_t[20]">0: Satellite not used, 1: used for localization</field>
      <field name="satellite_elevation" type="uint8_t[20]">Elevation (0: right on top of receiver, 90: on the horizon) of satellite</field>
      <field name="satellite_azimuth" type="uint8_t[20]">Direction of satellite, 0: 0 deg, 255: 360 deg.</field>
      <field name="satellite_snr" type="uint8_t[20]">Signal to noise ratio of satellite</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="26" name="SCALED_IMU">
      <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="xacc" type="int16_t" units="mG">X acceleration (mg)</field>
      <field name="yacc" type="int16_t" units="mG">Y acceleration (mg)</field>
      <field name="zacc" type="int16_t" units="mG">Z acceleration (mg)</field>
      <field name="xgyro" type="int16_t" units="mrad/s">Angular speed around X axis (millirad /sec)</field>
      <field name="ygyro" type="int16_t" units="mrad/s">Angular speed around Y axis (millirad /sec)</field>
      <field name="zgyro" type="int16_t" units="mrad/s">Angular speed around Z axis (millirad /sec)</field>
      <field name="xmag" type="int16_t" units="mT">X Magnetic field (milli tesla)</field>
      <field name="ymag" type="int16_t" units="mT">Y Magnetic field (milli tesla)</field>
      <field name="zmag" type="int16_t" units="mT">Z Magnetic field (milli tesla)</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="27" name="RAW_IMU">
      <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should always contain the true raw values without any scaling to allow data capture and system debugging.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="xacc" type="int16_t">X acceleration (raw)</field>
      <field name="yacc" type="int16_t">Y acceleration (raw)</field>
      <field name="zacc" type="int16_t">Z acceleration (raw)</field>
      <field name="xgyro" type="int16_t">Angular speed around X axis (raw)</field>
      <field name="ygyro" type="int16_t">Angular speed around Y axis (raw)</field>
      <field name="zgyro" type="int16_t">Angular speed around Z axis (raw)</field>
      <field name="xmag" type="int16_t">X Magnetic field (raw)</field>
      <field name="ymag" type="int16_t">Y Magnetic field (raw)</field>
      <field name="zmag" type="int16_t">Z Magnetic field (raw)</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="28" name="RAW_PRESSURE">
      <description>The RAW pressure readings for the typical setup of one absolute pressure and one differential pressure sensor. The sensor values should be the raw, UNSCALED ADC values.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="press_abs" type="int16_t">Absolute pressure (raw)</field>
      <field name="press_diff1" type="int16_t">Differential pressure 1 (raw, 0 if nonexistant)</field>
      <field name="press_diff2" type="int16_t">Differential pressure 2 (raw, 0 if nonexistant)</field>
      <field name="temperature" type="int16_t">Raw Temperature measurement (raw)</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="29" name="SCALED_PRESSURE">
      <description>The pressure readings for the typical setup of one absolute and differential pressure sensor. The units are as specified in each field.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="press_abs" type="float" units="hPa">Absolute pressure (hectopascal)</field>
      <field name="press_diff" type="float" units="hPa">Differential pressure 1 (hectopascal)</field>
      <field name="temperature" type="int16_t" units="cdegC">Temperature measurement (0.01 degrees celsius)</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="30" name="ATTITUDE">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right).</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="roll" type="float" units="rad">Roll angle (rad, -pi..+pi)</field>
      <field name="pitch" type="float" units="rad">Pitch angle (rad, -pi..+pi)</field>
      <field name="yaw" type="float" units="rad">Yaw angle (rad, -pi..+pi)</field>
      <field name="rollspeed" type="float" units="rad/s">Roll angular speed (rad/s)</field>
      <field name="pitchspeed" type="float" units="rad/s">Pitch angular speed (rad/s)</field>
      <field name="yawspeed" type="float" units="rad/s">Yaw angular speed (rad/s)</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="31" name="ATTITUDE_QUATERNION">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="q1" type="float">Quaternion component 1, w (1 in null-rotation)</field>
      <field name="q2" type="float">Quaternion component 2, x (0 in null-rotation)</field>
      <field name="q3" type="float">Quaternion component 3, y (0 in null-rotation)</field>
      <field name="q4" type="float">Quaternion component 4, z (0 in null-rotation)</field>
      <field name="rollspeed" type="float" units="rad/s">Roll angular speed (rad/s)</field>
      <field name="pitchspeed" type="float" units="rad/s">Pitch angular speed (rad/s)</field>
      <field name="yawspeed" type="float" units="rad/s">Yaw angular speed (rad/s)</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="32" name="LOCAL_POSITION_NED">
      <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="x" type="float" units="m">X Position</field>
      <field name="y" type="float" units="m">Y Position</field>
      <field name="z" type="float" units="m">Z Position</field>
      <field name="vx" type="float" units="m/s">X Speed</field>
      <field name="vy" type="float" units="m/s">Y Speed</field>
      <field name="vz" type="float" units="m/s">Z Speed</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="33" name="GLOBAL_POSITION_INT">
      <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It
               is designed as scaled integer message since the resolution of float is not sufficient.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="lat" type="int32_t" units="degE7">Latitude, expressed as degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude, expressed as degrees * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude in meters, expressed as * 1000 (millimeters), AMSL (not WGS84 - note that virtually all GPS modules provide the AMSL as well)</field>
      <field name="relative_alt" type="int32_t" units="mm">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
      <field name="vx" type="int16_t" units="cm/s">Ground X Speed (Latitude, positive north), expressed as m/s * 100</field>
      <field name="vy" type="int16_t" units="cm/s">Ground Y Speed (Longitude, positive east), expressed as m/s * 100</field>
      <field name="vz" type="int16_t" units="cm/s">Ground Z Speed (Altitude, positive down), expressed as m/s * 100</field>
      <field name="hdg" type="uint16_t" units="cdeg">Vehicle heading (yaw angle) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="34" name="RC_CHANNELS_SCALED">
      <description>The scaled values of the RC channels received. (-100%) -10000, (0%) 0, (100%) 10000. Channels that are inactive should be set to UINT16_MAX.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="port" type="uint8_t">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.</field>
      <field name="chan1_scaled" type="int16_t">RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan2_scaled" type="int16_t">RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan3_scaled" type="int16_t">RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan4_scaled" type="int16_t">RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan5_scaled" type="int16_t">RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan6_scaled" type="int16_t">RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan7_scaled" type="int16_t">RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="chan8_scaled" type="int16_t">RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field name="rssi" type="uint8_t" units="%">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="35" name="RC_CHANNELS_RAW">
      <description>The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="port" type="uint8_t">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.</field>
      <field name="chan1_raw" type="uint16_t" units="us">RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan2_raw" type="uint16_t" units="us">RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan3_raw" type="uint16_t" units="us">RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan4_raw" type="uint16_t" units="us">RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan5_raw" type="uint16_t" units="us">RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan6_raw" type="uint16_t" units="us">RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan7_raw" type="uint16_t" units="us">RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan8_raw" type="uint16_t" units="us">RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="rssi" type="uint8_t" units="%">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="36" name="SERVO_OUTPUT_RAW">
      <description>The RAW values of the servo outputs (for RC input from the remote, use the RC_CHANNELS messages). The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%.</description>
      <field name="time_usec" type="uint32_t" units="us">Timestamp (microseconds since system boot)</field>
      <field name="port" type="uint8_t">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.</field>
      <field name="servo1_raw" type="uint16_t" units="us">Servo output 1 value, in microseconds</field>
      <field name="servo2_raw" type="uint16_t" units="us">Servo output 2 value, in microseconds</field>
      <field name="servo3_raw" type="uint16_t" units="us">Servo output 3 value, in microseconds</field>
      <field name="servo4_raw" type="uint16_t" units="us">Servo output 4 value, in microseconds</field>
      <field name="servo5_raw" type="uint16_t" units="us">Servo output 5 value, in microseconds</field>
      <field name="servo6_raw" type="uint16_t" units="us">Servo output 6 value, in microseconds</field>
      <field name="servo7_raw" type="uint16_t" units="us">Servo output 7 value, in microseconds</field>
      <field name="servo8_raw" type="uint16_t" units="us">Servo output 8 value, in microseconds</field>
      <extensions />
      <field name="servo9_raw" type="uint16_t" units="us">Servo output 9 value, in microseconds</field>
      <field name="servo10_raw" type="uint16_t" units="us">Servo output 10 value, in microseconds</field>
      <field name="servo11_raw" type="uint16_t" units="us">Servo output 11 value, in microseconds</field>
      <field name="servo12_raw" type="uint16_t" units="us">Servo output 12 value, in microseconds</field>
      <field name="servo13_raw" type="uint16_t" units="us">Servo output 13 value, in microseconds</field>
      <field name="servo14_raw" type="uint16_t" units="us">Servo output 14 value, in microseconds</field>
      <field name="servo15_raw" type="uint16_t" units="us">Servo output 15 value, in microseconds</field>
      <field name="servo16_raw" type="uint16_t" units="us">Servo output 16 value, in microseconds</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="37" name="MISSION_REQUEST_PARTIAL_LIST">
      <description>Request a partial list of mission items from the system/component. http://qgroundcontrol.org/mavlink/waypoint_protocol. If start and end index are the same, just send one waypoint.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="start_index" type="int16_t">Start index, 0 by default</field>
      <field name="end_index" type="int16_t">End index, -1 by default (-1: send list to end). Else a valid index of the list</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[9]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="38" name="MISSION_WRITE_PARTIAL_LIST">
      <description>This message is sent to the MAV to write a partial list. If start index == end index, only one item will be transmitted / updated. If the start index is NOT 0 and above the current list size, this request should be REJECTED!</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="start_index" type="int16_t">Start index, 0 by default and smaller / equal to the largest index of the current onboard list.</field>
      <field name="end_index" type="int16_t">End index, equal or greater than start index.</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[9]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="39" name="MISSION_ITEM">
      <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). See also http://qgroundcontrol.org/mavlink/waypoint_protocol.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="seq" type="uint16_t">Sequence</field>
      <field enum="MAV_FRAME" name="frame" type="uint8_t">The coordinate system of the waypoint. see MAV_FRAME in mavlink_types.h</field>
      <field enum="MAV_CMD" name="command" type="uint16_t">The scheduled action for the waypoint. see MAV_CMD in common.xml MAVLink specs</field>
      <field name="current" type="uint8_t">false:0, true:1</field>
      <field name="autocontinue" type="uint8_t">autocontinue to next wp</field>
      <field name="param1" type="float">PARAM1, see MAV_CMD enum</field>
      <field name="param2" type="float">PARAM2, see MAV_CMD enum</field>
      <field name="param3" type="float">PARAM3, see MAV_CMD enum</field>
      <field name="param4" type="float">PARAM4, see MAV_CMD enum</field>
      <field name="x" type="float">PARAM5 / local: x position, global: latitude</field>
      <field name="y" type="float">PARAM6 / y position: global: longitude</field>
      <field name="z" type="float">PARAM7 / z position: global: altitude (relative or absolute, depending on frame.</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="40" name="MISSION_REQUEST">
      <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM message. http://qgroundcontrol.org/mavlink/waypoint_protocol</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="seq" type="uint16_t">Sequence</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="41" name="MISSION_SET_CURRENT">
      <description>Set the mission item with sequence number seq as current item. This means that the MAV will continue to this mission item on the shortest path (not following the mission items in-between).</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="seq" type="uint16_t">Sequence</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="42" name="MISSION_CURRENT">
      <description>Message that announces the sequence number of the current active mission item. The MAV will fly towards this mission item.</description>
      <field name="seq" type="uint16_t">Sequence</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="43" name="MISSION_REQUEST_LIST">
      <description>Request the overall list of mission items from the system/component.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="44" name="MISSION_COUNT">
      <description>This message is emitted as response to MISSION_REQUEST_LIST by the MAV and to initiate a write transaction. The GCS can then request the individual mission item based on the knowledge of the total number of waypoints.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="count" type="uint16_t">Number of mission items in the sequence</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="45" name="MISSION_CLEAR_ALL">
      <description>Delete all mission items at once.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="46" name="MISSION_ITEM_REACHED">
      <description>A certain mission item has been reached. The system will either hold this position (or circle on the orbit) or (if the autocontinue on the WP was set) continue to the next waypoint.</description>
      <field name="seq" type="uint16_t">Sequence</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="47" name="MISSION_ACK">
      <description>Ack message during waypoint handling. The type field states if this message is a positive ack (type=0) or if an error happened (type=non-zero).</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field enum="MAV_MISSION_RESULT" name="type" type="uint8_t">See MAV_MISSION_RESULT enum</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="48" name="SET_GPS_GLOBAL_ORIGIN">
      <description>As local waypoints exist, the global waypoint reference allows to transform between the local coordinate frame and the global (GPS) coordinate frame. This can be necessary when e.g. in- and outdoor settings are connected and the MAV should move from in- to outdoor.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="latitude" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="longitude" type="int32_t" units="degE7">Longitude (WGS84, in degrees * 1E7</field>
      <field name="altitude" type="int32_t" units="mm">Altitude (AMSL), in meters * 1000 (positive for up)</field>
      <extensions />
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="49" name="GPS_GLOBAL_ORIGIN">
      <description>Once the MAV sets a new GPS-Local correspondence, this message announces the origin (0,0,0) position</description>
      <field name="latitude" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="longitude" type="int32_t" units="degE7">Longitude (WGS84), in degrees * 1E7</field>
      <field name="altitude" type="int32_t" units="mm">Altitude (AMSL), in meters * 1000 (positive for up)</field>
      <extensions />
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="50" name="PARAM_MAP_RC">
      <description>Bind a RC channel to a parameter. The parameter should change accoding to the RC channel value.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="param_id" type="char[16]">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_index" type="int16_t">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored), send -2 to disable any existing map for this rc_channel_index.</field>
      <field name="parameter_rc_channel_index" type="uint8_t">Index of parameter RC channel. Not equal to the RC channel id. Typically correpsonds to a potentiometer-knob on the RC.</field>
      <field name="param_value0" type="float">Initial parameter value</field>
      <field name="scale" type="float">Scale, maps the RC range [-1, 1] to a parameter value</field>
      <field name="param_value_min" type="float">Minimum param value. The protocol does not define if this overwrites an onboard minimum value. (Depends on implementation)</field>
      <field name="param_value_max" type="float">Maximum param value. The protocol does not define if this overwrites an onboard maximum value. (Depends on implementation)</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="51" name="MISSION_REQUEST_INT">
      <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM_INT message. http://qgroundcontrol.org/mavlink/waypoint_protocol</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="seq" type="uint16_t">Sequence</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="54" name="SAFETY_SET_ALLOWED_AREA">
      <description>Set a safety zone (volume), which is defined by two corners of a cube. This message can be used to tell the MAV which setpoints/waypoints to accept and which to reject. Safety areas are often enforced by national or competition regulations.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field enum="MAV_FRAME" name="frame" type="uint8_t">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
      <field name="p1x" type="float" units="m">x position 1 / Latitude 1</field>
      <field name="p1y" type="float" units="m">y position 1 / Longitude 1</field>
      <field name="p1z" type="float" units="m">z position 1 / Altitude 1</field>
      <field name="p2x" type="float" units="m">x position 2 / Latitude 2</field>
      <field name="p2y" type="float" units="m">y position 2 / Longitude 2</field>
      <field name="p2z" type="float" units="m">z position 2 / Altitude 2</field>
    <field name="padding" type="uint8_t[5]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="55" name="SAFETY_ALLOWED_AREA">
      <description>Read out the safety zone the MAV currently assumes.</description>
      <field enum="MAV_FRAME" name="frame" type="uint8_t">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
      <field name="p1x" type="float" units="m">x position 1 / Latitude 1</field>
      <field name="p1y" type="float" units="m">y position 1 / Longitude 1</field>
      <field name="p1z" type="float" units="m">z position 1 / Altitude 1</field>
      <field name="p2x" type="float" units="m">x position 2 / Latitude 2</field>
      <field name="p2y" type="float" units="m">y position 2 / Longitude 2</field>
      <field name="p2z" type="float" units="m">z position 2 / Altitude 2</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="61" name="ATTITUDE_QUATERNION_COV">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since system boot or since UNIX epoch)</field>
      <field name="q" type="float[4]">Quaternion components, w, x, y, z (1 0 0 0 is the null-rotation)</field>
      <field name="rollspeed" type="float" units="rad/s">Roll angular speed (rad/s)</field>
      <field name="pitchspeed" type="float" units="rad/s">Pitch angular speed (rad/s)</field>
      <field name="yawspeed" type="float" units="rad/s">Yaw angular speed (rad/s)</field>
      <field name="covariance" type="float[9]">Attitude covariance</field>
    <field name="padding" type="uint8_t[8]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="62" name="NAV_CONTROLLER_OUTPUT">
      <description>The state of the fixed wing navigation and position controller.</description>
      <field name="nav_roll" type="float" units="deg">Current desired roll in degrees</field>
      <field name="nav_pitch" type="float" units="deg">Current desired pitch in degrees</field>
      <field name="nav_bearing" type="int16_t" units="deg">Current desired heading in degrees</field>
      <field name="target_bearing" type="int16_t" units="deg">Bearing to current waypoint/target in degrees</field>
      <field name="wp_dist" type="uint16_t" units="m">Distance to active waypoint in meters</field>
      <field name="alt_error" type="float" units="m">Current altitude error in meters</field>
      <field name="aspd_error" type="float" units="m/s">Current airspeed error in meters/second</field>
      <field name="xtrack_error" type="float" units="m">Current crosstrack error on x-y plane in meters</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="63" name="GLOBAL_POSITION_INT_COV">
      <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It  is designed as scaled integer message since the resolution of float is not sufficient. NOTE: This message is intended for onboard networks / companion computers and higher-bandwidth links and optimized for accuracy and completeness. Please use the GLOBAL_POSITION_INT message for a minimal subset.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since system boot or since UNIX epoch)</field>
      <field enum="MAV_ESTIMATOR_TYPE" name="estimator_type" type="uint8_t">Class id of the estimator this estimate originated from.</field>
      <field name="lat" type="int32_t" units="degE7">Latitude, expressed as degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude, expressed as degrees * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude in meters, expressed as * 1000 (millimeters), above MSL</field>
      <field name="relative_alt" type="int32_t" units="mm">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
      <field name="vx" type="float" units="m/s">Ground X Speed (Latitude), expressed as m/s</field>
      <field name="vy" type="float" units="m/s">Ground Y Speed (Longitude), expressed as m/s</field>
      <field name="vz" type="float" units="m/s">Ground Z Speed (Altitude), expressed as m/s</field>
      <field name="covariance" type="float[36]">Covariance matrix (first six entries are the first ROW, next six entries are the second row, etc.)</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="64" name="LOCAL_POSITION_NED_COV">
      <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since system boot or since UNIX epoch)</field>
      <field enum="MAV_ESTIMATOR_TYPE" name="estimator_type" type="uint8_t">Class id of the estimator this estimate originated from.</field>
      <field name="x" type="float" units="m">X Position</field>
      <field name="y" type="float" units="m">Y Position</field>
      <field name="z" type="float" units="m">Z Position</field>
      <field name="vx" type="float" units="m/s">X Speed (m/s)</field>
      <field name="vy" type="float" units="m/s">Y Speed (m/s)</field>
      <field name="vz" type="float" units="m/s">Z Speed (m/s)</field>
      <field name="ax" type="float" units="m/s/s">X Acceleration (m/s^2)</field>
      <field name="ay" type="float" units="m/s/s">Y Acceleration (m/s^2)</field>
      <field name="az" type="float" units="m/s/s">Z Acceleration (m/s^2)</field>
      <field name="covariance" type="float[45]">Covariance matrix upper right triangular (first nine entries are the first ROW, next eight entries are the second row, etc.)</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="65" name="RC_CHANNELS">
      <description>The PPM values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="chancount" type="uint8_t">Total number of RC channels being received. This can be larger than 18, indicating that more channels are available but not given in this message. This value should be 0 when no RC channels are available.</field>
      <field name="chan1_raw" type="uint16_t" units="us">RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan2_raw" type="uint16_t" units="us">RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan3_raw" type="uint16_t" units="us">RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan4_raw" type="uint16_t" units="us">RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan5_raw" type="uint16_t" units="us">RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan6_raw" type="uint16_t" units="us">RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan7_raw" type="uint16_t" units="us">RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan8_raw" type="uint16_t" units="us">RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan9_raw" type="uint16_t" units="us">RC channel 9 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan10_raw" type="uint16_t" units="us">RC channel 10 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan11_raw" type="uint16_t" units="us">RC channel 11 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan12_raw" type="uint16_t" units="us">RC channel 12 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan13_raw" type="uint16_t" units="us">RC channel 13 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan14_raw" type="uint16_t" units="us">RC channel 14 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan15_raw" type="uint16_t" units="us">RC channel 15 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan16_raw" type="uint16_t" units="us">RC channel 16 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan17_raw" type="uint16_t" units="us">RC channel 17 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="chan18_raw" type="uint16_t" units="us">RC channel 18 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field name="rssi" type="uint8_t" units="%">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="66" name="REQUEST_DATA_STREAM">
      <description>THIS INTERFACE IS DEPRECATED. USE SET_MESSAGE_INTERVAL INSTEAD.</description>
      <field name="target_system" type="uint8_t">The target requested to send the message stream.</field>
      <field name="target_component" type="uint8_t">The target requested to send the message stream.</field>
      <field name="req_stream_id" type="uint8_t">The ID of the requested data stream</field>
      <field name="req_message_rate" type="uint16_t">The requested message rate</field>
      <field name="start_stop" type="uint8_t">1 to start sending, 0 to stop sending.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="67" name="DATA_STREAM">
      <description>THIS INTERFACE IS DEPRECATED. USE MESSAGE_INTERVAL INSTEAD.</description>
      <field name="stream_id" type="uint8_t">The ID of the requested data stream</field>
      <field name="message_rate" type="uint16_t">The message rate</field>
      <field name="on_off" type="uint8_t">1 stream is enabled, 0 stream is stopped.</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="69" name="MANUAL_CONTROL">
      <description>This message provides an API for manually controlling the vehicle using standard joystick axes nomenclature, along with a joystick-like input device. Unused axes can be disabled an buttons are also transmit as boolean values of their </description>
      <field name="target" type="uint8_t">The system to be controlled.</field>
      <field name="x" type="int16_t">X-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to forward(1000)-backward(-1000) movement on a joystick and the pitch of a vehicle.</field>
      <field name="y" type="int16_t">Y-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to left(-1000)-right(1000) movement on a joystick and the roll of a vehicle.</field>
      <field name="z" type="int16_t">Z-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a separate slider movement with maximum being 1000 and minimum being -1000 on a joystick and the thrust of a vehicle. Positive values are positive thrust, negative values are negative thrust.</field>
      <field name="r" type="int16_t">R-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a twisting of the joystick, with counter-clockwise being 1000 and clockwise being -1000, and the yaw of a vehicle.</field>
      <field name="buttons" type="uint16_t">A bitfield corresponding to the joystick buttons' current state, 1 for pressed, 0 for released. The lowest bit corresponds to Button 1.</field>
    <field name="padding" type="uint8_t[5]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="70" name="RC_CHANNELS_OVERRIDE">
      <description>The RAW values of the RC channels sent to the MAV to override info received from the RC radio. A value of UINT16_MAX means no change to that channel. A value of 0 means control of that channel should be released back to the RC radio. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="chan1_raw" type="uint16_t" units="us">RC channel 1 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan2_raw" type="uint16_t" units="us">RC channel 2 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan3_raw" type="uint16_t" units="us">RC channel 3 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan4_raw" type="uint16_t" units="us">RC channel 4 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan5_raw" type="uint16_t" units="us">RC channel 5 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan6_raw" type="uint16_t" units="us">RC channel 6 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan7_raw" type="uint16_t" units="us">RC channel 7 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field name="chan8_raw" type="uint16_t" units="us">RC channel 8 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="73" name="MISSION_ITEM_INT">
      <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). See alsohttp://qgroundcontrol.org/mavlink/waypoint_protocol.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="seq" type="uint16_t">Waypoint ID (sequence number). Starts at zero. Increases monotonically for each waypoint, no gaps in the sequence (0,1,2,3,4).</field>
      <field enum="MAV_FRAME" name="frame" type="uint8_t">The coordinate system of the waypoint. see MAV_FRAME in mavlink_types.h</field>
      <field enum="MAV_CMD" name="command" type="uint16_t">The scheduled action for the waypoint. see MAV_CMD in common.xml MAVLink specs</field>
      <field name="current" type="uint8_t">false:0, true:1</field>
      <field name="autocontinue" type="uint8_t">autocontinue to next wp</field>
      <field name="param1" type="float">PARAM1, see MAV_CMD enum</field>
      <field name="param2" type="float">PARAM2, see MAV_CMD enum</field>
      <field name="param3" type="float">PARAM3, see MAV_CMD enum</field>
      <field name="param4" type="float">PARAM4, see MAV_CMD enum</field>
      <field name="x" type="int32_t">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
      <field name="y" type="int32_t">PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7</field>
      <field name="z" type="float">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
      <extensions />
      <field enum="MAV_MISSION_TYPE" name="mission_type" type="uint8_t">Mission type, see MAV_MISSION_TYPE</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="74" name="VFR_HUD">
      <description>Metrics typically displayed on a HUD for fixed wing aircraft</description>
      <field name="airspeed" type="float" units="m/s">Current airspeed in m/s</field>
      <field name="groundspeed" type="float" units="m/s">Current ground speed in m/s</field>
      <field name="heading" type="int16_t" units="deg">Current heading in degrees, in compass units (0..360, 0=north)</field>
      <field name="throttle" type="uint16_t" units="%">Current throttle setting in integer percent, 0 to 100</field>
      <field name="alt" type="float" units="m">Current altitude (MSL), in meters</field>
      <field name="climb" type="float" units="m/s">Current climb rate in meters/second</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="75" name="COMMAND_INT">
      <description>Message encoding a command with parameters as scaled integers. Scaling depends on the actual command value.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field enum="MAV_FRAME" name="frame" type="uint8_t">The coordinate system of the COMMAND. see MAV_FRAME in mavlink_types.h</field>
      <field enum="MAV_CMD" name="command" type="uint16_t">The scheduled action for the mission item. see MAV_CMD in common.xml MAVLink specs</field>
      <field name="current" type="uint8_t">false:0, true:1</field>
      <field name="autocontinue" type="uint8_t">autocontinue to next wp</field>
      <field name="param1" type="float">PARAM1, see MAV_CMD enum</field>
      <field name="param2" type="float">PARAM2, see MAV_CMD enum</field>
      <field name="param3" type="float">PARAM3, see MAV_CMD enum</field>
      <field name="param4" type="float">PARAM4, see MAV_CMD enum</field>
      <field name="x" type="int32_t">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
      <field name="y" type="int32_t">PARAM6 / local: y position in meters * 1e4, global: longitude in degrees * 10^7</field>
      <field name="z" type="float">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="76" name="COMMAND_LONG">
      <description>Send a command with up to seven parameters to the MAV</description>
      <field name="target_system" type="uint8_t">System which should execute the command</field>
      <field name="target_component" type="uint8_t">Component which should execute the command, 0 for all components</field>
      <field enum="MAV_CMD" name="command" type="uint16_t">Command ID, as defined by MAV_CMD enum.</field>
      <field name="confirmation" type="uint8_t">0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)</field>
      <field name="param1" type="float">Parameter 1, as defined by MAV_CMD enum.</field>
      <field name="param2" type="float">Parameter 2, as defined by MAV_CMD enum.</field>
      <field name="param3" type="float">Parameter 3, as defined by MAV_CMD enum.</field>
      <field name="param4" type="float">Parameter 4, as defined by MAV_CMD enum.</field>
      <field name="param5" type="float">Parameter 5, as defined by MAV_CMD enum.</field>
      <field name="param6" type="float">Parameter 6, as defined by MAV_CMD enum.</field>
      <field name="param7" type="float">Parameter 7, as defined by MAV_CMD enum.</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="77" name="COMMAND_ACK">
      <description>Report status of a command. Includes feedback whether the command was executed.</description>
      <field enum="MAV_CMD" name="command" type="uint16_t">Command ID, as defined by MAV_CMD enum.</field>
      <field enum="MAV_RESULT" name="result" type="uint8_t">See MAV_RESULT enum</field>
      <extensions />
      <field name="progress" type="uint8_t">WIP: Also used as result_param1, it can be set with a enum containing the errors reasons of why the command was denied or the progress percentage or 255 if unknown the progress when result is MAV_RESULT_IN_PROGRESS.</field>
      <field name="result_param2" type="int32_t">WIP: Additional parameter of the result, example: which parameter of MAV_CMD_NAV_WAYPOINT caused it to be denied.</field>
      <field name="target_system" type="uint8_t">WIP: System which requested the command to be executed</field>
      <field name="target_component" type="uint8_t">WIP: Component which requested the command to be executed</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="81" name="MANUAL_SETPOINT">
      <description>Setpoint in roll, pitch, yaw and thrust from the operator</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot</field>
      <field name="roll" type="float" units="rad/s">Desired roll rate in radians per second</field>
      <field name="pitch" type="float" units="rad/s">Desired pitch rate in radians per second</field>
      <field name="yaw" type="float" units="rad/s">Desired yaw rate in radians per second</field>
      <field name="thrust" type="float">Collective thrust, normalized to 0 .. 1</field>
      <field name="mode_switch" type="uint8_t">Flight mode switch position, 0.. 255</field>
      <field name="manual_override_switch" type="uint8_t">Override mode switch position, 0.. 255</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="82" name="SET_ATTITUDE_TARGET">
      <description>Sets a desired vehicle attitude. Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot</field>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="type_mask" type="uint8_t">Mappings: If any of these bits are set, the corresponding input should be ignored: bit 1: body roll rate, bit 2: body pitch rate, bit 3: body yaw rate. bit 4-bit 6: reserved, bit 7: throttle, bit 8: attitude</field>
      <field name="q" type="float[4]">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field name="body_roll_rate" type="float" units="rad/s">Body roll rate in radians per second</field>
      <field name="body_pitch_rate" type="float" units="rad/s">Body roll rate in radians per second</field>
      <field name="body_yaw_rate" type="float" units="rad/s">Body roll rate in radians per second</field>
      <field name="thrust" type="float">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
    <field name="padding" type="uint8_t[9]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="83" name="ATTITUDE_TARGET">
      <description>Reports the current commanded attitude of the vehicle as specified by the autopilot. This should match the commands sent in a SET_ATTITUDE_TARGET message if the vehicle is being controlled this way.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot</field>
      <field name="type_mask" type="uint8_t">Mappings: If any of these bits are set, the corresponding input should be ignored: bit 1: body roll rate, bit 2: body pitch rate, bit 3: body yaw rate. bit 4-bit 7: reserved, bit 8: attitude</field>
      <field name="q" type="float[4]">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field name="body_roll_rate" type="float" units="rad/s">Body roll rate in radians per second</field>
      <field name="body_pitch_rate" type="float" units="rad/s">Body pitch rate in radians per second</field>
      <field name="body_yaw_rate" type="float" units="rad/s">Body yaw rate in radians per second</field>
      <field name="thrust" type="float">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="84" name="SET_POSITION_TARGET_LOCAL_NED">
      <description>Sets a desired vehicle position in a local north-east-down coordinate frame. Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot</field>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field enum="MAV_FRAME" name="coordinate_frame" type="uint8_t">Valid options are: MAV_FRAME_LOCAL_NED = 1, MAV_FRAME_LOCAL_OFFSET_NED = 7, MAV_FRAME_BODY_NED = 8, MAV_FRAME_BODY_OFFSET_NED = 9</field>
      <field name="type_mask" type="uint16_t">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field name="x" type="float" units="m">X Position in NED frame in meters</field>
      <field name="y" type="float" units="m">Y Position in NED frame in meters</field>
      <field name="z" type="float" units="m">Z Position in NED frame in meters (note, altitude is negative in NED)</field>
      <field name="vx" type="float" units="m/s">X velocity in NED frame in meter / s</field>
      <field name="vy" type="float" units="m/s">Y velocity in NED frame in meter / s</field>
      <field name="vz" type="float" units="m/s">Z velocity in NED frame in meter / s</field>
      <field name="afx" type="float" units="m/s/s">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afy" type="float" units="m/s/s">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afz" type="float" units="m/s/s">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="yaw" type="float" units="rad">yaw setpoint in rad</field>
      <field name="yaw_rate" type="float" units="rad/s">yaw rate setpoint in rad/s</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="85" name="POSITION_TARGET_LOCAL_NED">
      <description>Reports the current commanded vehicle position, velocity, and acceleration as specified by the autopilot. This should match the commands sent in SET_POSITION_TARGET_LOCAL_NED if the vehicle is being controlled this way.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot</field>
      <field enum="MAV_FRAME" name="coordinate_frame" type="uint8_t">Valid options are: MAV_FRAME_LOCAL_NED = 1, MAV_FRAME_LOCAL_OFFSET_NED = 7, MAV_FRAME_BODY_NED = 8, MAV_FRAME_BODY_OFFSET_NED = 9</field>
      <field name="type_mask" type="uint16_t">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field name="x" type="float" units="m">X Position in NED frame in meters</field>
      <field name="y" type="float" units="m">Y Position in NED frame in meters</field>
      <field name="z" type="float" units="m">Z Position in NED frame in meters (note, altitude is negative in NED)</field>
      <field name="vx" type="float" units="m/s">X velocity in NED frame in meter / s</field>
      <field name="vy" type="float" units="m/s">Y velocity in NED frame in meter / s</field>
      <field name="vz" type="float" units="m/s">Z velocity in NED frame in meter / s</field>
      <field name="afx" type="float" units="m/s/s">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afy" type="float" units="m/s/s">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afz" type="float" units="m/s/s">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="yaw" type="float" units="rad">yaw setpoint in rad</field>
      <field name="yaw_rate" type="float" units="rad/s">yaw rate setpoint in rad/s</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="86" name="SET_POSITION_TARGET_GLOBAL_INT">
      <description>Sets a desired vehicle position, velocity, and/or acceleration in a global coordinate system (WGS84). Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot. The rationale for the timestamp in the setpoint is to allow the system to compensate for the transport delay of the setpoint. This allows the system to compensate processing latency.</field>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field enum="MAV_FRAME" name="coordinate_frame" type="uint8_t">Valid options are: MAV_FRAME_GLOBAL_INT = 5, MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 11</field>
      <field name="type_mask" type="uint16_t">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field name="lat_int" type="int32_t" units="degE7">X Position in WGS84 frame in 1e7 * meters</field>
      <field name="lon_int" type="int32_t" units="degE7">Y Position in WGS84 frame in 1e7 * meters</field>
      <field name="alt" type="float" units="m">Altitude in meters in AMSL altitude, not WGS84 if absolute or relative, above terrain if GLOBAL_TERRAIN_ALT_INT</field>
      <field name="vx" type="float" units="m/s">X velocity in NED frame in meter / s</field>
      <field name="vy" type="float" units="m/s">Y velocity in NED frame in meter / s</field>
      <field name="vz" type="float" units="m/s">Z velocity in NED frame in meter / s</field>
      <field name="afx" type="float" units="m/s/s">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afy" type="float" units="m/s/s">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afz" type="float" units="m/s/s">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="yaw" type="float" units="rad">yaw setpoint in rad</field>
      <field name="yaw_rate" type="float" units="rad/s">yaw rate setpoint in rad/s</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="87" name="POSITION_TARGET_GLOBAL_INT">
      <description>Reports the current commanded vehicle position, velocity, and acceleration as specified by the autopilot. This should match the commands sent in SET_POSITION_TARGET_GLOBAL_INT if the vehicle is being controlled this way.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp in milliseconds since system boot. The rationale for the timestamp in the setpoint is to allow the system to compensate for the transport delay of the setpoint. This allows the system to compensate processing latency.</field>
      <field enum="MAV_FRAME" name="coordinate_frame" type="uint8_t">Valid options are: MAV_FRAME_GLOBAL_INT = 5, MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 11</field>
      <field name="type_mask" type="uint16_t">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field name="lat_int" type="int32_t" units="degE7">X Position in WGS84 frame in 1e7 * meters</field>
      <field name="lon_int" type="int32_t" units="degE7">Y Position in WGS84 frame in 1e7 * meters</field>
      <field name="alt" type="float" units="m">Altitude in meters in AMSL altitude, not WGS84 if absolute or relative, above terrain if GLOBAL_TERRAIN_ALT_INT</field>
      <field name="vx" type="float" units="m/s">X velocity in NED frame in meter / s</field>
      <field name="vy" type="float" units="m/s">Y velocity in NED frame in meter / s</field>
      <field name="vz" type="float" units="m/s">Z velocity in NED frame in meter / s</field>
      <field name="afx" type="float" units="m/s/s">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afy" type="float" units="m/s/s">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="afz" type="float" units="m/s/s">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field name="yaw" type="float" units="rad">yaw setpoint in rad</field>
      <field name="yaw_rate" type="float" units="rad/s">yaw rate setpoint in rad/s</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="89" name="LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET">
      <description>The offset in X, Y, Z and yaw between the LOCAL_POSITION_NED messages of MAV X and the global coordinate frame in NED coordinates. Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="x" type="float" units="m">X Position</field>
      <field name="y" type="float" units="m">Y Position</field>
      <field name="z" type="float" units="m">Z Position</field>
      <field name="roll" type="float" units="rad">Roll</field>
      <field name="pitch" type="float" units="rad">Pitch</field>
      <field name="yaw" type="float" units="rad">Yaw</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="90" name="HIL_STATE">
      <description>DEPRECATED PACKET! Suffers from missing airspeed fields and singularities due to Euler angles. Please use HIL_STATE_QUATERNION instead. Sent from simulation to autopilot. This packet is useful for high throughput applications such as hardware in the loop simulations.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="roll" type="float" units="rad">Roll angle (rad)</field>
      <field name="pitch" type="float" units="rad">Pitch angle (rad)</field>
      <field name="yaw" type="float" units="rad">Yaw angle (rad)</field>
      <field name="rollspeed" type="float" units="rad/s">Body frame roll / phi angular speed (rad/s)</field>
      <field name="pitchspeed" type="float" units="rad/s">Body frame pitch / theta angular speed (rad/s)</field>
      <field name="yawspeed" type="float" units="rad/s">Body frame yaw / psi angular speed (rad/s)</field>
      <field name="lat" type="int32_t">Latitude, expressed as * 1E7</field>
      <field name="lon" type="int32_t">Longitude, expressed as * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude in meters, expressed as * 1000 (millimeters)</field>
      <field name="vx" type="int16_t" units="cm/s">Ground X Speed (Latitude), expressed as m/s * 100</field>
      <field name="vy" type="int16_t" units="cm/s">Ground Y Speed (Longitude), expressed as m/s * 100</field>
      <field name="vz" type="int16_t" units="cm/s">Ground Z Speed (Altitude), expressed as m/s * 100</field>
      <field name="xacc" type="int16_t" units="mG">X acceleration (mg)</field>
      <field name="yacc" type="int16_t" units="mG">Y acceleration (mg)</field>
      <field name="zacc" type="int16_t" units="mG">Z acceleration (mg)</field>
    <field name="padding" type="uint8_t[8]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="91" name="HIL_CONTROLS">
      <description>Sent from autopilot to simulation. Hardware in the loop control outputs</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="roll_ailerons" type="float">Control output -1 .. 1</field>
      <field name="pitch_elevator" type="float">Control output -1 .. 1</field>
      <field name="yaw_rudder" type="float">Control output -1 .. 1</field>
      <field name="throttle" type="float">Throttle 0 .. 1</field>
      <field name="aux1" type="float">Aux 1, -1 .. 1</field>
      <field name="aux2" type="float">Aux 2, -1 .. 1</field>
      <field name="aux3" type="float">Aux 3, -1 .. 1</field>
      <field name="aux4" type="float">Aux 4, -1 .. 1</field>
      <field enum="MAV_MODE" name="mode" type="uint8_t">System mode (MAV_MODE)</field>
      <field name="nav_mode" type="uint8_t">Navigation mode (MAV_NAV_MODE)</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="92" name="HIL_RC_INPUTS_RAW">
      <description>Sent from simulation to autopilot. The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="chan1_raw" type="uint16_t" units="us">RC channel 1 value, in microseconds</field>
      <field name="chan2_raw" type="uint16_t" units="us">RC channel 2 value, in microseconds</field>
      <field name="chan3_raw" type="uint16_t" units="us">RC channel 3 value, in microseconds</field>
      <field name="chan4_raw" type="uint16_t" units="us">RC channel 4 value, in microseconds</field>
      <field name="chan5_raw" type="uint16_t" units="us">RC channel 5 value, in microseconds</field>
      <field name="chan6_raw" type="uint16_t" units="us">RC channel 6 value, in microseconds</field>
      <field name="chan7_raw" type="uint16_t" units="us">RC channel 7 value, in microseconds</field>
      <field name="chan8_raw" type="uint16_t" units="us">RC channel 8 value, in microseconds</field>
      <field name="chan9_raw" type="uint16_t" units="us">RC channel 9 value, in microseconds</field>
      <field name="chan10_raw" type="uint16_t" units="us">RC channel 10 value, in microseconds</field>
      <field name="chan11_raw" type="uint16_t" units="us">RC channel 11 value, in microseconds</field>
      <field name="chan12_raw" type="uint16_t" units="us">RC channel 12 value, in microseconds</field>
      <field name="rssi" type="uint8_t">Receive signal strength indicator, 0: 0%, 255: 100%</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="93" name="HIL_ACTUATOR_CONTROLS">
      <description>Sent from autopilot to simulation. Hardware in the loop control outputs (replacement for HIL_CONTROLS)</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="controls" type="float[16]">Control outputs -1 .. 1. Channel assignment depends on the simulated hardware.</field>
      <field enum="MAV_MODE" name="mode" type="uint8_t">System mode (MAV_MODE), includes arming state.</field>
      <field name="flags" type="uint64_t">Flags as bitfield, reserved for future use.</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="100" name="OPTICAL_FLOW">
      <description>Optical flow from a flow sensor (e.g. optical mouse sensor)</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (UNIX)</field>
      <field name="sensor_id" type="uint8_t">Sensor ID</field>
      <field name="flow_x" type="int16_t" units="dpixels">Flow in pixels * 10 in x-sensor direction (dezi-pixels)</field>
      <field name="flow_y" type="int16_t" units="dpixels">Flow in pixels * 10 in y-sensor direction (dezi-pixels)</field>
      <field name="flow_comp_m_x" type="float" units="m">Flow in meters in x-sensor direction, angular-speed compensated</field>
      <field name="flow_comp_m_y" type="float" units="m">Flow in meters in y-sensor direction, angular-speed compensated</field>
      <field name="quality" type="uint8_t">Optical flow quality / confidence. 0: bad, 255: maximum quality</field>
      <field name="ground_distance" type="float" units="m">Ground distance in meters. Positive value: distance known. Negative value: Unknown distance</field>
      <extensions />
      <field name="flow_rate_x" type="float" units="rad/s">Flow rate in radians/second about X axis</field>
      <field name="flow_rate_y" type="float" units="rad/s">Flow rate in radians/second about Y axis</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="101" name="GLOBAL_VISION_POSITION_ESTIMATE">
      <field name="usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="x" type="float" units="m">Global X position</field>
      <field name="y" type="float" units="m">Global Y position</field>
      <field name="z" type="float" units="m">Global Z position</field>
      <field name="roll" type="float" units="rad">Roll angle in rad</field>
      <field name="pitch" type="float" units="rad">Pitch angle in rad</field>
      <field name="yaw" type="float" units="rad">Yaw angle in rad</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="102" name="VISION_POSITION_ESTIMATE">
      <field name="usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="x" type="float" units="m">Global X position</field>
      <field name="y" type="float" units="m">Global Y position</field>
      <field name="z" type="float" units="m">Global Z position</field>
      <field name="roll" type="float" units="rad">Roll angle in rad</field>
      <field name="pitch" type="float" units="rad">Pitch angle in rad</field>
      <field name="yaw" type="float" units="rad">Yaw angle in rad</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="103" name="VISION_SPEED_ESTIMATE">
      <field name="usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="x" type="float" units="m/s">Global X speed</field>
      <field name="y" type="float" units="m/s">Global Y speed</field>
      <field name="z" type="float" units="m/s">Global Z speed</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="104" name="VICON_POSITION_ESTIMATE">
      <field name="usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="x" type="float" units="m">Global X position</field>
      <field name="y" type="float" units="m">Global Y position</field>
      <field name="z" type="float" units="m">Global Z position</field>
      <field name="roll" type="float" units="rad">Roll angle in rad</field>
      <field name="pitch" type="float" units="rad">Pitch angle in rad</field>
      <field name="yaw" type="float" units="rad">Yaw angle in rad</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="105" name="HIGHRES_IMU">
      <description>The IMU readings in SI units in NED body frame</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="xacc" type="float" units="m/s/s">X acceleration (m/s^2)</field>
      <field name="yacc" type="float" units="m/s/s">Y acceleration (m/s^2)</field>
      <field name="zacc" type="float" units="m/s/s">Z acceleration (m/s^2)</field>
      <field name="xgyro" type="float" units="rad/s">Angular speed around X axis (rad / sec)</field>
      <field name="ygyro" type="float" units="rad/s">Angular speed around Y axis (rad / sec)</field>
      <field name="zgyro" type="float" units="rad/s">Angular speed around Z axis (rad / sec)</field>
      <field name="xmag" type="float" units="gauss">X Magnetic field (Gauss)</field>
      <field name="ymag" type="float" units="gauss">Y Magnetic field (Gauss)</field>
      <field name="zmag" type="float" units="gauss">Z Magnetic field (Gauss)</field>
      <field name="abs_pressure" type="float" units="mbar">Absolute pressure in millibar</field>
      <field name="diff_pressure" type="float" units="mbar">Differential pressure in millibar</field>
      <field name="pressure_alt" type="float">Altitude calculated from pressure</field>
      <field name="temperature" type="float" units="degC">Temperature in degrees celsius</field>
      <field name="fields_updated" type="uint16_t">Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="106" name="OPTICAL_FLOW_RAD">
      <description>Optical flow from an angular rate flow sensor (e.g. PX4FLOW or mouse sensor)</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="sensor_id" type="uint8_t">Sensor ID</field>
      <field name="integration_time_us" type="uint32_t" units="us">Integration time in microseconds. Divide integrated_x and integrated_y by the integration time to obtain average flow. The integration time also indicates the.</field>
      <field name="integrated_x" type="float" units="rad">Flow in radians around X axis (Sensor RH rotation about the X axis induces a positive flow. Sensor linear motion along the positive Y axis induces a negative flow.)</field>
      <field name="integrated_y" type="float" units="rad">Flow in radians around Y axis (Sensor RH rotation about the Y axis induces a positive flow. Sensor linear motion along the positive X axis induces a positive flow.)</field>
      <field name="integrated_xgyro" type="float" units="rad">RH rotation around X axis (rad)</field>
      <field name="integrated_ygyro" type="float" units="rad">RH rotation around Y axis (rad)</field>
      <field name="integrated_zgyro" type="float" units="rad">RH rotation around Z axis (rad)</field>
      <field name="temperature" type="int16_t" units="cdegC">Temperature * 100 in centi-degrees Celsius</field>
      <field name="quality" type="uint8_t">Optical flow quality / confidence. 0: no valid flow, 255: maximum quality</field>
      <field name="time_delta_distance_us" type="uint32_t" units="us">Time in microseconds since the distance was sampled.</field>
      <field name="distance" type="float" units="m">Distance to the center of the flow field in meters. Positive value (including zero): distance known. Negative value: Unknown distance.</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="107" name="HIL_SENSOR">
      <description>The IMU readings in SI units in NED body frame</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="xacc" type="float" units="m/s/s">X acceleration (m/s^2)</field>
      <field name="yacc" type="float" units="m/s/s">Y acceleration (m/s^2)</field>
      <field name="zacc" type="float" units="m/s/s">Z acceleration (m/s^2)</field>
      <field name="xgyro" type="float" units="rad/s">Angular speed around X axis in body frame (rad / sec)</field>
      <field name="ygyro" type="float" units="rad/s">Angular speed around Y axis in body frame (rad / sec)</field>
      <field name="zgyro" type="float" units="rad/s">Angular speed around Z axis in body frame (rad / sec)</field>
      <field name="xmag" type="float" units="gauss">X Magnetic field (Gauss)</field>
      <field name="ymag" type="float" units="gauss">Y Magnetic field (Gauss)</field>
      <field name="zmag" type="float" units="gauss">Z Magnetic field (Gauss)</field>
      <field name="abs_pressure" type="float" units="mbar">Absolute pressure in millibar</field>
      <field name="diff_pressure" type="float" units="mbar">Differential pressure (airspeed) in millibar</field>
      <field name="pressure_alt" type="float">Altitude calculated from pressure</field>
      <field name="temperature" type="float" units="degC">Temperature in degrees celsius</field>
      <field name="fields_updated" type="uint32_t">Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature, bit 31: full reset of attitude/position/velocities/etc was performed in sim.</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="108" name="SIM_STATE">
      <description>Status of simulation environment, if used</description>
      <field name="q1" type="float">True attitude quaternion component 1, w (1 in null-rotation)</field>
      <field name="q2" type="float">True attitude quaternion component 2, x (0 in null-rotation)</field>
      <field name="q3" type="float">True attitude quaternion component 3, y (0 in null-rotation)</field>
      <field name="q4" type="float">True attitude quaternion component 4, z (0 in null-rotation)</field>
      <field name="roll" type="float">Attitude roll expressed as Euler angles, not recommended except for human-readable outputs</field>
      <field name="pitch" type="float">Attitude pitch expressed as Euler angles, not recommended except for human-readable outputs</field>
      <field name="yaw" type="float">Attitude yaw expressed as Euler angles, not recommended except for human-readable outputs</field>
      <field name="xacc" type="float" units="m/s/s">X acceleration m/s/s</field>
      <field name="yacc" type="float" units="m/s/s">Y acceleration m/s/s</field>
      <field name="zacc" type="float" units="m/s/s">Z acceleration m/s/s</field>
      <field name="xgyro" type="float" units="rad/s">Angular speed around X axis rad/s</field>
      <field name="ygyro" type="float" units="rad/s">Angular speed around Y axis rad/s</field>
      <field name="zgyro" type="float" units="rad/s">Angular speed around Z axis rad/s</field>
      <field name="lat" type="float" units="deg">Latitude in degrees</field>
      <field name="lon" type="float" units="deg">Longitude in degrees</field>
      <field name="alt" type="float" units="m">Altitude in meters</field>
      <field name="std_dev_horz" type="float">Horizontal position standard deviation</field>
      <field name="std_dev_vert" type="float">Vertical position standard deviation</field>
      <field name="vn" type="float" units="m/s">True velocity in m/s in NORTH direction in earth-fixed NED frame</field>
      <field name="ve" type="float" units="m/s">True velocity in m/s in EAST direction in earth-fixed NED frame</field>
      <field name="vd" type="float" units="m/s">True velocity in m/s in DOWN direction in earth-fixed NED frame</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="109" name="RADIO_STATUS">
      <description>Status generated by radio and injected into MAVLink stream.</description>
      <field name="rssi" type="uint8_t">Local signal strength</field>
      <field name="remrssi" type="uint8_t">Remote signal strength</field>
      <field name="txbuf" type="uint8_t" units="%">Remaining free buffer space in percent.</field>
      <field name="noise" type="uint8_t">Background noise level</field>
      <field name="remnoise" type="uint8_t">Remote background noise level</field>
      <field name="rxerrors" type="uint16_t">Receive errors</field>
      <field name="fixed" type="uint16_t">Count of error corrected packets</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="110" name="FILE_TRANSFER_PROTOCOL">
      <description>File transfer message</description>
      <field name="target_network" type="uint8_t">Network ID (0 for broadcast)</field>
      <field name="target_system" type="uint8_t">System ID (0 for broadcast)</field>
      <field name="target_component" type="uint8_t">Component ID (0 for broadcast)</field>
      <field name="payload" type="uint8_t[251]">Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="111" name="TIMESYNC">
      <description>Time synchronization message.</description>
      <field name="tc1" type="int64_t">Time sync timestamp 1</field>
      <field name="ts1" type="int64_t">Time sync timestamp 2</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="112" name="CAMERA_TRIGGER">
      <description>Camera-IMU triggering and synchronisation message.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp for the image frame in microseconds</field>
      <field name="seq" type="uint32_t">Image frame sequence</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="113" name="HIL_GPS">
      <description>The global position, as returned by the Global Positioning System (GPS). This is
                 NOT the global position estimate of the sytem, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="fix_type" type="uint8_t">0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.</field>
      <field name="lat" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (WGS84), in degrees * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude (AMSL, not WGS84), in meters * 1000 (positive for up)</field>
      <field name="eph" type="uint16_t">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: 65535</field>
      <field name="epv" type="uint16_t">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: 65535</field>
      <field name="vel" type="uint16_t" units="cm/s">GPS ground speed in cm/s. If unknown, set to: 65535</field>
      <field name="vn" type="int16_t" units="cm/s">GPS velocity in cm/s in NORTH direction in earth-fixed NED frame</field>
      <field name="ve" type="int16_t" units="cm/s">GPS velocity in cm/s in EAST direction in earth-fixed NED frame</field>
      <field name="vd" type="int16_t" units="cm/s">GPS velocity in cm/s in DOWN direction in earth-fixed NED frame</field>
      <field name="cog" type="uint16_t" units="cdeg">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: 65535</field>
      <field name="satellites_visible" type="uint8_t">Number of satellites visible. If unknown, set to 255</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="114" name="HIL_OPTICAL_FLOW">
      <description>Simulated optical flow from a flow sensor (e.g. PX4FLOW or optical mouse sensor)</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field name="sensor_id" type="uint8_t">Sensor ID</field>
      <field name="integration_time_us" type="uint32_t" units="us">Integration time in microseconds. Divide integrated_x and integrated_y by the integration time to obtain average flow. The integration time also indicates the.</field>
      <field name="integrated_x" type="float" units="rad">Flow in radians around X axis (Sensor RH rotation about the X axis induces a positive flow. Sensor linear motion along the positive Y axis induces a negative flow.)</field>
      <field name="integrated_y" type="float" units="rad">Flow in radians around Y axis (Sensor RH rotation about the Y axis induces a positive flow. Sensor linear motion along the positive X axis induces a positive flow.)</field>
      <field name="integrated_xgyro" type="float" units="rad">RH rotation around X axis (rad)</field>
      <field name="integrated_ygyro" type="float" units="rad">RH rotation around Y axis (rad)</field>
      <field name="integrated_zgyro" type="float" units="rad">RH rotation around Z axis (rad)</field>
      <field name="temperature" type="int16_t" units="cdegC">Temperature * 100 in centi-degrees Celsius</field>
      <field name="quality" type="uint8_t">Optical flow quality / confidence. 0: no valid flow, 255: maximum quality</field>
      <field name="time_delta_distance_us" type="uint32_t" units="us">Time in microseconds since the distance was sampled.</field>
      <field name="distance" type="float" units="m">Distance to the center of the flow field in meters. Positive value (including zero): distance known. Negative value: Unknown distance.</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="115" name="HIL_STATE_QUATERNION">
      <description>Sent from simulation to autopilot, avoids in contrast to HIL_STATE singularities. This packet is useful for high throughput applications such as hardware in the loop simulations.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="attitude_quaternion" type="float[4]">Vehicle attitude expressed as normalized quaternion in w, x, y, z order (with 1 0 0 0 being the null-rotation)</field>
      <field name="rollspeed" type="float" units="rad/s">Body frame roll / phi angular speed (rad/s)</field>
      <field name="pitchspeed" type="float" units="rad/s">Body frame pitch / theta angular speed (rad/s)</field>
      <field name="yawspeed" type="float" units="rad/s">Body frame yaw / psi angular speed (rad/s)</field>
      <field name="lat" type="int32_t">Latitude, expressed as * 1E7</field>
      <field name="lon" type="int32_t">Longitude, expressed as * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude in meters, expressed as * 1000 (millimeters)</field>
      <field name="vx" type="int16_t" units="cm/s">Ground X Speed (Latitude), expressed as cm/s</field>
      <field name="vy" type="int16_t" units="cm/s">Ground Y Speed (Longitude), expressed as cm/s</field>
      <field name="vz" type="int16_t" units="cm/s">Ground Z Speed (Altitude), expressed as cm/s</field>
      <field name="ind_airspeed" type="uint16_t" units="cm/s">Indicated airspeed, expressed as cm/s</field>
      <field name="true_airspeed" type="uint16_t" units="cm/s">True airspeed, expressed as cm/s</field>
      <field name="xacc" type="int16_t" units="mG">X acceleration (mg)</field>
      <field name="yacc" type="int16_t" units="mG">Y acceleration (mg)</field>
      <field name="zacc" type="int16_t" units="mG">Z acceleration (mg)</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="116" name="SCALED_IMU2">
      <description>The RAW IMU readings for secondary 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="xacc" type="int16_t" units="mG">X acceleration (mg)</field>
      <field name="yacc" type="int16_t" units="mG">Y acceleration (mg)</field>
      <field name="zacc" type="int16_t" units="mG">Z acceleration (mg)</field>
      <field name="xgyro" type="int16_t" units="mrad/s">Angular speed around X axis (millirad /sec)</field>
      <field name="ygyro" type="int16_t" units="mrad/s">Angular speed around Y axis (millirad /sec)</field>
      <field name="zgyro" type="int16_t" units="mrad/s">Angular speed around Z axis (millirad /sec)</field>
      <field name="xmag" type="int16_t" units="mT">X Magnetic field (milli tesla)</field>
      <field name="ymag" type="int16_t" units="mT">Y Magnetic field (milli tesla)</field>
      <field name="zmag" type="int16_t" units="mT">Z Magnetic field (milli tesla)</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="117" name="LOG_REQUEST_LIST">
      <description>Request a list of available logs. On some systems calling this may stop on-board logging until LOG_REQUEST_END is called.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="start" type="uint16_t">First log id (0 for first available)</field>
      <field name="end" type="uint16_t">Last log id (0xffff for last available)</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="118" name="LOG_ENTRY">
      <description>Reply to LOG_REQUEST_LIST</description>
      <field name="id" type="uint16_t">Log id</field>
      <field name="num_logs" type="uint16_t">Total number of logs</field>
      <field name="last_log_num" type="uint16_t">High log number</field>
      <field name="time_utc" type="uint32_t" units="s">UTC timestamp of log in seconds since 1970, or 0 if not available</field>
      <field name="size" type="uint32_t" units="bytes">Size of the log (may be approximate) in bytes</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="119" name="LOG_REQUEST_DATA">
      <description>Request a chunk of a log</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="id" type="uint16_t">Log id (from LOG_ENTRY reply)</field>
      <field name="ofs" type="uint32_t">Offset into the log</field>
      <field name="count" type="uint32_t" units="bytes">Number of bytes</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="120" name="LOG_DATA">
      <description>Reply to LOG_REQUEST_DATA</description>
      <field name="id" type="uint16_t">Log id (from LOG_ENTRY reply)</field>
      <field name="ofs" type="uint32_t">Offset into the log</field>
      <field name="count" type="uint8_t" units="bytes">Number of bytes (zero for end of log)</field>
      <field name="data" type="uint8_t[90]">log data</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="121" name="LOG_ERASE">
      <description>Erase all logs</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="122" name="LOG_REQUEST_END">
      <description>Stop log transfer and resume normal logging</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="123" name="GPS_INJECT_DATA">
      <description>data for injecting into the onboard GPS (used for DGPS)</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="len" type="uint8_t" units="bytes">data length</field>
      <field name="data" type="uint8_t[110]">raw data (110 is enough for 12 satellites of RTCMv2)</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="124" name="GPS2_RAW">
      <description>Second GPS data. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field enum="GPS_FIX_TYPE" name="fix_type" type="uint8_t">See the GPS_FIX_TYPE enum.</field>
      <field name="lat" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (WGS84), in degrees * 1E7</field>
      <field name="alt" type="int32_t" units="mm">Altitude (AMSL, not WGS84), in meters * 1000 (positive for up)</field>
      <field name="eph" type="uint16_t" units="cm">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
      <field name="epv" type="uint16_t" units="cm">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
      <field name="vel" type="uint16_t" units="cm/s">GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX</field>
      <field name="cog" type="uint16_t" units="cdeg">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
      <field name="satellites_visible" type="uint8_t">Number of satellites visible. If unknown, set to 255</field>
      <field name="dgps_numch" type="uint8_t">Number of DGPS satellites</field>
      <field name="dgps_age" type="uint32_t">Age of DGPS info</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="125" name="POWER_STATUS">
      <description>Power supply status</description>
      <field name="Vcc" type="uint16_t" units="mV">5V rail voltage in millivolts</field>
      <field name="Vservo" type="uint16_t" units="mV">servo rail voltage in millivolts</field>
      <field display="bitmask" enum="MAV_POWER_STATUS" name="flags" type="uint16_t">power supply status flags (see MAV_POWER_STATUS enum)</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="126" name="SERIAL_CONTROL">
      <description>Control a serial port. This can be used for raw access to an onboard serial peripheral such as a GPS or telemetry radio. It is designed to make it possible to update the devices firmware via MAVLink messages or change the devices settings. A message with zero bytes can be used to change just the baudrate.</description>
      <field enum="SERIAL_CONTROL_DEV" name="device" type="uint8_t">See SERIAL_CONTROL_DEV enum</field>
      <field display="bitmask" enum="SERIAL_CONTROL_FLAG" name="flags" type="uint8_t">See SERIAL_CONTROL_FLAG enum</field>
      <field name="timeout" type="uint16_t" units="ms">Timeout for reply data in milliseconds</field>
      <field name="baudrate" type="uint32_t">Baudrate of transfer. Zero means no change.</field>
      <field name="count" type="uint8_t" units="bytes">how many bytes in this transfer</field>
      <field name="data" type="uint8_t[70]">serial data</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="127" name="GPS_RTK">
      <description>RTK GPS data. Gives information on the relative baseline calculation the GPS is reporting</description>
      <field name="time_last_baseline_ms" type="uint32_t" units="ms">Time since boot of last baseline message received in ms.</field>
      <field name="rtk_receiver_id" type="uint8_t">Identification of connected RTK receiver.</field>
      <field name="wn" type="uint16_t">GPS Week Number of last baseline</field>
      <field name="tow" type="uint32_t" units="ms">GPS Time of Week of last baseline</field>
      <field name="rtk_health" type="uint8_t">GPS-specific health report for RTK data.</field>
      <field name="rtk_rate" type="uint8_t" units="Hz">Rate of baseline messages being received by GPS, in HZ</field>
      <field name="nsats" type="uint8_t">Current number of sats used for RTK calculation.</field>
      <field name="baseline_coords_type" type="uint8_t">Coordinate system of baseline. 0 == ECEF, 1 == NED</field>
      <field name="baseline_a_mm" type="int32_t" units="mm">Current baseline in ECEF x or NED north component in mm.</field>
      <field name="baseline_b_mm" type="int32_t" units="mm">Current baseline in ECEF y or NED east component in mm.</field>
      <field name="baseline_c_mm" type="int32_t" units="mm">Current baseline in ECEF z or NED down component in mm.</field>
      <field name="accuracy" type="uint32_t">Current estimate of baseline accuracy.</field>
      <field name="iar_num_hypotheses" type="int32_t">Current number of integer ambiguity hypotheses.</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="128" name="GPS2_RTK">
      <description>RTK GPS data. Gives information on the relative baseline calculation the GPS is reporting</description>
      <field name="time_last_baseline_ms" type="uint32_t" units="ms">Time since boot of last baseline message received in ms.</field>
      <field name="rtk_receiver_id" type="uint8_t">Identification of connected RTK receiver.</field>
      <field name="wn" type="uint16_t">GPS Week Number of last baseline</field>
      <field name="tow" type="uint32_t" units="ms">GPS Time of Week of last baseline</field>
      <field name="rtk_health" type="uint8_t">GPS-specific health report for RTK data.</field>
      <field name="rtk_rate" type="uint8_t" units="Hz">Rate of baseline messages being received by GPS, in HZ</field>
      <field name="nsats" type="uint8_t">Current number of sats used for RTK calculation.</field>
      <field name="baseline_coords_type" type="uint8_t">Coordinate system of baseline. 0 == ECEF, 1 == NED</field>
      <field name="baseline_a_mm" type="int32_t" units="mm">Current baseline in ECEF x or NED north component in mm.</field>
      <field name="baseline_b_mm" type="int32_t" units="mm">Current baseline in ECEF y or NED east component in mm.</field>
      <field name="baseline_c_mm" type="int32_t" units="mm">Current baseline in ECEF z or NED down component in mm.</field>
      <field name="accuracy" type="uint32_t">Current estimate of baseline accuracy.</field>
      <field name="iar_num_hypotheses" type="int32_t">Current number of integer ambiguity hypotheses.</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="129" name="SCALED_IMU3">
      <description>The RAW IMU readings for 3rd 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="xacc" type="int16_t" units="mG">X acceleration (mg)</field>
      <field name="yacc" type="int16_t" units="mG">Y acceleration (mg)</field>
      <field name="zacc" type="int16_t" units="mG">Z acceleration (mg)</field>
      <field name="xgyro" type="int16_t" units="mrad/s">Angular speed around X axis (millirad /sec)</field>
      <field name="ygyro" type="int16_t" units="mrad/s">Angular speed around Y axis (millirad /sec)</field>
      <field name="zgyro" type="int16_t" units="mrad/s">Angular speed around Z axis (millirad /sec)</field>
      <field name="xmag" type="int16_t" units="mT">X Magnetic field (milli tesla)</field>
      <field name="ymag" type="int16_t" units="mT">Y Magnetic field (milli tesla)</field>
      <field name="zmag" type="int16_t" units="mT">Z Magnetic field (milli tesla)</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="130" name="DATA_TRANSMISSION_HANDSHAKE">
      <field name="type" type="uint8_t">type of requested/acknowledged data (as defined in ENUM DATA_TYPES in mavlink/include/mavlink_types.h)</field>
      <field name="size" type="uint32_t" units="bytes">total data size in bytes (set on ACK only)</field>
      <field name="width" type="uint16_t">Width of a matrix or image</field>
      <field name="height" type="uint16_t">Height of a matrix or image</field>
      <field name="packets" type="uint16_t">number of packets beeing sent (set on ACK only)</field>
      <field name="payload" type="uint8_t" units="bytes">payload size per packet (normally 253 byte, see DATA field size in message ENCAPSULATED_DATA) (set on ACK only)</field>
      <field name="jpg_quality" type="uint8_t">JPEG quality out of [1,100]</field>
    <field name="padding" type="uint8_t[3]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="131" name="ENCAPSULATED_DATA">
      <field name="seqnr" type="uint16_t">sequence number (starting with 0 on every transmission)</field>
      <field name="data" type="uint8_t[253]">image data bytes</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="132" name="DISTANCE_SENSOR">
      <field name="time_boot_ms" type="uint32_t" units="ms">Time since system boot</field>
      <field name="min_distance" type="uint16_t" units="cm">Minimum distance the sensor can measure in centimeters</field>
      <field name="max_distance" type="uint16_t" units="cm">Maximum distance the sensor can measure in centimeters</field>
      <field name="current_distance" type="uint16_t">Current distance reading</field>
      <field enum="MAV_DISTANCE_SENSOR" name="type" type="uint8_t">Type from MAV_DISTANCE_SENSOR enum.</field>
      <field name="id" type="uint8_t">Onboard ID of the sensor</field>
      <field enum="MAV_SENSOR_ORIENTATION" name="orientation" type="uint8_t">Direction the sensor faces from MAV_SENSOR_ORIENTATION enum. downward-facing: ROTATION_PITCH_270, upward-facing: ROTATION_PITCH_90, backward-facing: ROTATION_PITCH_180, forward-facing: ROTATION_NONE, left-facing: ROTATION_YAW_90, right-facing: ROTATION_YAW_270</field>
      <field name="covariance" type="uint8_t" units="cm">Measurement covariance in centimeters, 0 for unknown / invalid readings</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="133" name="TERRAIN_REQUEST">
      <description>Request for terrain data and terrain status</description>
      <field name="lat" type="int32_t" units="degE7">Latitude of SW corner of first grid (degrees *10^7)</field>
      <field name="lon" type="int32_t" units="degE7">Longitude of SW corner of first grid (in degrees *10^7)</field>
      <field name="grid_spacing" type="uint16_t" units="m">Grid spacing in meters</field>
      <field name="mask" print_format="0x%07x" type="uint64_t">Bitmask of requested 4x4 grids (row major 8x7 array of grids, 56 bits)</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="134" name="TERRAIN_DATA">
      <description>Terrain data sent from GCS. The lat/lon and grid_spacing must be the same as a lat/lon from a TERRAIN_REQUEST</description>
      <field name="lat" type="int32_t" units="degE7">Latitude of SW corner of first grid (degrees *10^7)</field>
      <field name="lon" type="int32_t" units="degE7">Longitude of SW corner of first grid (in degrees *10^7)</field>
      <field name="grid_spacing" type="uint16_t" units="m">Grid spacing in meters</field>
      <field name="gridbit" type="uint8_t">bit within the terrain request mask</field>
      <field name="data" type="int16_t[16]" units="m">Terrain data in meters AMSL</field>
    <field name="padding" type="uint8_t[5]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="135" name="TERRAIN_CHECK">
      <description>Request that the vehicle report terrain height at the given location. Used by GCS to check if vehicle has all terrain data needed for a mission.</description>
      <field name="lat" type="int32_t" units="degE7">Latitude (degrees *10^7)</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (degrees *10^7)</field>
    <field name="padding" type="uint8_t[8]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="136" name="TERRAIN_REPORT">
      <description>Response from a TERRAIN_CHECK request</description>
      <field name="lat" type="int32_t" units="degE7">Latitude (degrees *10^7)</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (degrees *10^7)</field>
      <field name="spacing" type="uint16_t">grid spacing (zero if terrain at this location unavailable)</field>
      <field name="terrain_height" type="float" units="m">Terrain height in meters AMSL</field>
      <field name="current_height" type="float" units="m">Current vehicle height above lat/lon terrain height (meters)</field>
      <field name="pending" type="uint16_t">Number of 4x4 terrain blocks waiting to be received or read from disk</field>
      <field name="loaded" type="uint16_t">Number of 4x4 terrain blocks in memory</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="137" name="SCALED_PRESSURE2">
      <description>Barometer readings for 2nd barometer</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="press_abs" type="float" units="hPa">Absolute pressure (hectopascal)</field>
      <field name="press_diff" type="float" units="hPa">Differential pressure 1 (hectopascal)</field>
      <field name="temperature" type="int16_t" units="cdegC">Temperature measurement (0.01 degrees celsius)</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="138" name="ATT_POS_MOCAP">
      <description>Motion capture attitude and position</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="q" type="float[4]">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field name="x" type="float" units="m">X position in meters (NED)</field>
      <field name="y" type="float" units="m">Y position in meters (NED)</field>
      <field name="z" type="float" units="m">Z position in meters (NED)</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="139" name="SET_ACTUATOR_CONTROL_TARGET">
      <description>Set the vehicle attitude and body angular rates.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="group_mlx" type="uint8_t">Actuator group. The "_mlx" indicates this is a multi-instance message and a MAVLink parser should use this field to difference between instances.</field>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="controls" type="float[8]">Actuator controls. Normed to -1..+1 where 0 is neutral position. Throttle for single rotation direction motors is 0..1, negative range for reverse direction. Standard mapping for attitude controls (group 0): (index 0-7): roll, pitch, yaw, throttle, flaps, spoilers, airbrakes, landing gear. Load a pass-through mixer to repurpose them as generic outputs.</field>
    <field name="padding" type="uint8_t[5]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="140" name="ACTUATOR_CONTROL_TARGET">
      <description>Set the vehicle attitude and body angular rates.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="group_mlx" type="uint8_t">Actuator group. The "_mlx" indicates this is a multi-instance message and a MAVLink parser should use this field to difference between instances.</field>
      <field name="controls" type="float[8]">Actuator controls. Normed to -1..+1 where 0 is neutral position. Throttle for single rotation direction motors is 0..1, negative range for reverse direction. Standard mapping for attitude controls (group 0): (index 0-7): roll, pitch, yaw, throttle, flaps, spoilers, airbrakes, landing gear. Load a pass-through mixer to repurpose them as generic outputs.</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="141" name="ALTITUDE">
      <description>The current system altitude.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="altitude_monotonic" type="float" units="m">This altitude measure is initialized on system boot and monotonic (it is never reset, but represents the local altitude change). The only guarantee on this field is that it will never be reset and is consistent within a flight. The recommended value for this field is the uncorrected barometric altitude at boot time. This altitude will also drift and vary between flights.</field>
      <field name="altitude_amsl" type="float" units="m">This altitude measure is strictly above mean sea level and might be non-monotonic (it might reset on events like GPS lock or when a new QNH value is set). It should be the altitude to which global altitude waypoints are compared to. Note that it is *not* the GPS altitude, however, most GPS modules already output AMSL by default and not the WGS84 altitude.</field>
      <field name="altitude_local" type="float" units="m">This is the local altitude in the local coordinate frame. It is not the altitude above home, but in reference to the coordinate origin (0, 0, 0). It is up-positive.</field>
      <field name="altitude_relative" type="float" units="m">This is the altitude above the home position. It resets on each change of the current home position.</field>
      <field name="altitude_terrain" type="float" units="m">This is the altitude above terrain. It might be fed by a terrain database or an altimeter. Values smaller than -1000 should be interpreted as unknown.</field>
      <field name="bottom_clearance" type="float" units="m">This is not the altitude, but the clear space below the system according to the fused clearance estimate. It generally should max out at the maximum range of e.g. the laser altimeter. It is generally a moving target. A negative value indicates no measurement available.</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="142" name="RESOURCE_REQUEST">
      <description>The autopilot is requesting a resource (file, binary, other type of data)</description>
      <field name="request_id" type="uint8_t">Request ID. This ID should be re-used when sending back URI contents</field>
      <field name="uri_type" type="uint8_t">The type of requested URI. 0 = a file via URL. 1 = a UAVCAN binary</field>
      <field name="uri" type="uint8_t[120]">The requested unique resource identifier (URI). It is not necessarily a straight domain name (depends on the URI type enum)</field>
      <field name="transfer_type" type="uint8_t">The way the autopilot wants to receive the URI. 0 = MAVLink FTP. 1 = binary stream.</field>
      <field name="storage" type="uint8_t[120]">The storage path the autopilot wants the URI to be stored in. Will only be valid if the transfer_type has a storage associated (e.g. MAVLink FTP).</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="143" name="SCALED_PRESSURE3">
      <description>Barometer readings for 3rd barometer</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="press_abs" type="float" units="hPa">Absolute pressure (hectopascal)</field>
      <field name="press_diff" type="float" units="hPa">Differential pressure 1 (hectopascal)</field>
      <field name="temperature" type="int16_t" units="cdegC">Temperature measurement (0.01 degrees celsius)</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="144" name="FOLLOW_TARGET">
      <description>current motion information from a designated system</description>
      <field name="timestamp" type="uint64_t" units="ms">Timestamp in milliseconds since system boot</field>
      <field name="est_capabilities" type="uint8_t">bit positions for tracker reporting capabilities (POS = 0, VEL = 1, ACCEL = 2, ATT + RATES = 3)</field>
      <field name="lat" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (WGS84), in degrees * 1E7</field>
      <field name="alt" type="float" units="m">AMSL, in meters</field>
      <field name="vel" type="float[3]" units="m/s">target velocity (0,0,0) for unknown</field>
      <field name="acc" type="float[3]" units="m/s/s">linear target acceleration (0,0,0) for unknown</field>
      <field name="attitude_q" type="float[4]">(1 0 0 0 for unknown)</field>
      <field name="rates" type="float[3]">(0 0 0 for unknown)</field>
      <field name="position_cov" type="float[3]">eph epv</field>
      <field name="custom_state" type="uint64_t">button states or switches of a tracker device</field>
    <field name="padding" type="uint8_t[3]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="146" name="CONTROL_SYSTEM_STATE">
      <description>The smoothed, monotonic system state used to feed the control loops of the system.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="x_acc" type="float" units="m/s/s">X acceleration in body frame</field>
      <field name="y_acc" type="float" units="m/s/s">Y acceleration in body frame</field>
      <field name="z_acc" type="float" units="m/s/s">Z acceleration in body frame</field>
      <field name="x_vel" type="float" units="m/s">X velocity in body frame</field>
      <field name="y_vel" type="float" units="m/s">Y velocity in body frame</field>
      <field name="z_vel" type="float" units="m/s">Z velocity in body frame</field>
      <field name="x_pos" type="float" units="m">X position in local frame</field>
      <field name="y_pos" type="float" units="m">Y position in local frame</field>
      <field name="z_pos" type="float" units="m">Z position in local frame</field>
      <field name="airspeed" type="float" units="m/s">Airspeed, set to -1 if unknown</field>
      <field name="vel_variance" type="float[3]">Variance of body velocity estimate</field>
      <field name="pos_variance" type="float[3]">Variance in local position</field>
      <field name="q" type="float[4]">The attitude, represented as Quaternion</field>
      <field name="roll_rate" type="float" units="rad/s">Angular rate in roll axis</field>
      <field name="pitch_rate" type="float" units="rad/s">Angular rate in pitch axis</field>
      <field name="yaw_rate" type="float" units="rad/s">Angular rate in yaw axis</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="147" name="BATTERY_STATUS">
      <description>Battery information</description>
      <field name="id" type="uint8_t">Battery ID</field>
      <field enum="MAV_BATTERY_FUNCTION" name="battery_function" type="uint8_t">Function of the battery</field>
      <field enum="MAV_BATTERY_TYPE" name="type" type="uint8_t">Type (chemistry) of the battery</field>
      <field name="temperature" type="int16_t" units="cdegC">Temperature of the battery in centi-degrees celsius. INT16_MAX for unknown temperature.</field>
      <field name="voltages" type="uint16_t[10]" units="mV">Battery voltage of cells, in millivolts (1 = 1 millivolt). Cells above the valid cell count for this battery should have the UINT16_MAX value.</field>
      <field name="current_battery" type="int16_t" units="cA">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
      <field name="current_consumed" type="int32_t" units="mAh">Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide mAh consumption estimate</field>
      <field name="energy_consumed" type="int32_t" units="hJ">Consumed energy, in HectoJoules (intergrated U*I*dt)  (1 = 100 Joule), -1: autopilot does not provide energy consumption estimate</field>
      <field name="battery_remaining" type="int8_t" units="%">Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the remaining battery</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="148" name="AUTOPILOT_VERSION">
      <description>Version and capability of autopilot software</description>
      <field display="bitmask" enum="MAV_PROTOCOL_CAPABILITY" name="capabilities" type="uint64_t">bitmask of capabilities (see MAV_PROTOCOL_CAPABILITY enum)</field>
      <field name="flight_sw_version" type="uint32_t">Firmware version number</field>
      <field name="middleware_sw_version" type="uint32_t">Middleware version number</field>
      <field name="os_sw_version" type="uint32_t">Operating system version number</field>
      <field name="board_version" type="uint32_t">HW / board version (last 8 bytes should be silicon ID, if any)</field>
      <field name="flight_custom_version" type="uint8_t[8]">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
      <field name="middleware_custom_version" type="uint8_t[8]">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
      <field name="os_custom_version" type="uint8_t[8]">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
      <field name="vendor_id" type="uint16_t">ID of the board vendor</field>
      <field name="product_id" type="uint16_t">ID of the product</field>
      <field name="uid" type="uint64_t">UID if provided by hardware (see uid2)</field>
      <extensions />
      <field name="uid2" type="uint8_t[18]">UID if provided by hardware (supersedes the uid field. If this is non-zero, use this field, otherwise use uid)</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="149" name="LANDING_TARGET">
      <description>The location of a landing area captured from a downward facing camera</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="target_num" type="uint8_t">The ID of the target if multiple targets are present</field>
      <field enum="MAV_FRAME" name="frame" type="uint8_t">MAV_FRAME enum specifying the whether the following feilds are earth-frame, body-frame, etc.</field>
      <field name="angle_x" type="float" units="rad">X-axis angular offset (in radians) of the target from the center of the image</field>
      <field name="angle_y" type="float" units="rad">Y-axis angular offset (in radians) of the target from the center of the image</field>
      <field name="distance" type="float" units="m">Distance to the target from the vehicle in meters</field>
      <field name="size_x" type="float" units="rad">Size in radians of target along x-axis</field>
      <field name="size_y" type="float" units="rad">Size in radians of target along y-axis</field>
      <extensions />
      <field name="x" type="float" units="m">X Position of the landing target on MAV_FRAME</field>
      <field name="y" type="float" units="m">Y Position of the landing target on MAV_FRAME</field>
      <field name="z" type="float" units="m">Z Position of the landing target on MAV_FRAME</field>
      <field name="q" type="float[4]">Quaternion of landing target orientation (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field enum="LANDING_TARGET_TYPE" name="type" type="uint8_t">LANDING_TARGET_TYPE enum specifying the type of landing target</field>
      <field name="position_valid" type="uint8_t">Boolean indicating known position (1) or default unkown position (0), for validation of positioning of the landing target</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    
    <message id="230" name="ESTIMATOR_STATUS">
      <description>Estimator status message including flags, innovation test ratios and estimated accuracies. The flags message is an integer bitmask containing information on which EKF outputs are valid. See the ESTIMATOR_STATUS_FLAGS enum definition for further information. The innovaton test ratios show the magnitude of the sensor innovation divided by the innovation check threshold. Under normal operation the innovaton test ratios should be below 0.5 with occasional values up to 1.0. Values greater than 1.0 should be rare under normal operation and indicate that a measurement has been rejected by the filter. The user should be notified if an innovation test ratio greater than 1.0 is recorded. Notifications for values in the range between 0.5 and 1.0 should be optional and controllable by the user.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field display="bitmask" enum="ESTIMATOR_STATUS_FLAGS" name="flags" type="uint16_t">Integer bitmask indicating which EKF outputs are valid. See definition for ESTIMATOR_STATUS_FLAGS.</field>
      <field name="vel_ratio" type="float">Velocity innovation test ratio</field>
      <field name="pos_horiz_ratio" type="float">Horizontal position innovation test ratio</field>
      <field name="pos_vert_ratio" type="float">Vertical position innovation test ratio</field>
      <field name="mag_ratio" type="float">Magnetometer innovation test ratio</field>
      <field name="hagl_ratio" type="float">Height above terrain innovation test ratio</field>
      <field name="tas_ratio" type="float" units="Hz">True airspeed innovation test ratio</field>
      <field name="pos_horiz_accuracy" type="float" units="m">Horizontal position 1-STD accuracy relative to the EKF local origin (m)</field>
      <field name="pos_vert_accuracy" type="float" units="m">Vertical position 1-STD accuracy relative to the EKF local origin (m)</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="231" name="WIND_COV">
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="wind_x" type="float" units="m/s">Wind in X (NED) direction in m/s</field>
      <field name="wind_y" type="float" units="m/s">Wind in Y (NED) direction in m/s</field>
      <field name="wind_z" type="float" units="m/s">Wind in Z (NED) direction in m/s</field>
      <field name="var_horiz" type="float" units="m/s">Variability of the wind in XY. RMS of a 1 Hz lowpassed wind estimate.</field>
      <field name="var_vert" type="float" units="m/s">Variability of the wind in Z. RMS of a 1 Hz lowpassed wind estimate.</field>
      <field name="wind_alt" type="float" units="m">AMSL altitude (m) this measurement was taken at</field>
      <field name="horiz_accuracy" type="float" units="m">Horizontal speed 1-STD accuracy</field>
      <field name="vert_accuracy" type="float" units="m">Vertical speed 1-STD accuracy</field>
    <field name="padding" type="uint8_t[8]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="232" name="GPS_INPUT">
      <description>GPS sensor input message.  This is a raw sensor value sent by the GPS. This is NOT the global position estimate of the sytem.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="gps_id" type="uint8_t">ID of the GPS for multiple GPS inputs</field>
      <field display="bitmask" enum="GPS_INPUT_IGNORE_FLAGS" name="ignore_flags" type="uint16_t">Flags indicating which fields to ignore (see GPS_INPUT_IGNORE_FLAGS enum).  All other fields must be provided.</field>
      <field name="time_week_ms" type="uint32_t" units="ms">GPS time (milliseconds from start of GPS week)</field>
      <field name="time_week" type="uint16_t">GPS week number</field>
      <field name="fix_type" type="uint8_t">0-1: no fix, 2: 2D fix, 3: 3D fix. 4: 3D with DGPS. 5: 3D with RTK</field>
      <field name="lat" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude (WGS84), in degrees * 1E7</field>
      <field name="alt" type="float" units="m">Altitude (AMSL, not WGS84), in m (positive for up)</field>
      <field name="hdop" type="float" units="m">GPS HDOP horizontal dilution of position in m</field>
      <field name="vdop" type="float" units="m">GPS VDOP vertical dilution of position in m</field>
      <field name="vn" type="float" units="m/s">GPS velocity in m/s in NORTH direction in earth-fixed NED frame</field>
      <field name="ve" type="float" units="m/s">GPS velocity in m/s in EAST direction in earth-fixed NED frame</field>
      <field name="vd" type="float" units="m/s">GPS velocity in m/s in DOWN direction in earth-fixed NED frame</field>
      <field name="speed_accuracy" type="float" units="m/s">GPS speed accuracy in m/s</field>
      <field name="horiz_accuracy" type="float" units="m">GPS horizontal accuracy in m</field>
      <field name="vert_accuracy" type="float" units="m">GPS vertical accuracy in m</field>
      <field name="satellites_visible" type="uint8_t">Number of satellites visible.</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="233" name="GPS_RTCM_DATA">
      <description>RTCM message for injecting into the onboard GPS (used for DGPS)</description>
      <field name="flags" type="uint8_t">LSB: 1 means message is fragmented, next 2 bits are the fragment ID, the remaining 5 bits are used for the sequence ID. Messages are only to be flushed to the GPS when the entire message has been reconstructed on the autopilot. The fragment ID specifies which order the fragments should be assembled into a buffer, while the sequence ID is used to detect a mismatch between different buffers. The buffer is considered fully reconstructed when either all 4 fragments are present, or all the fragments before the first fragment with a non full payload is received. This management is used to ensure that normal GPS operation doesn't corrupt RTCM data, and to recover from a unreliable transport delivery order.</field>
      <field name="len" type="uint8_t" units="bytes">data length</field>
      <field name="data" type="uint8_t[180]">RTCM message (may be fragmented)</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="234" name="HIGH_LATENCY">
      <description>Message appropriate for high latency connections like Iridium</description>
      <field display="bitmask" enum="MAV_MODE_FLAG" name="base_mode" type="uint8_t">System mode bitfield, see MAV_MODE_FLAG ENUM in mavlink/include/mavlink_types.h</field>
      <field name="custom_mode" type="uint32_t">A bitfield for use for autopilot-specific flags.</field>
      <field enum="MAV_LANDED_STATE" name="landed_state" type="uint8_t">The landed state. Is set to MAV_LANDED_STATE_UNDEFINED if landed state is unknown.</field>
      <field name="roll" type="int16_t" units="cdeg">roll (centidegrees)</field>
      <field name="pitch" type="int16_t" units="cdeg">pitch (centidegrees)</field>
      <field name="heading" type="uint16_t" units="cdeg">heading (centidegrees)</field>
      <field name="throttle" type="int8_t" units="%">throttle (percentage)</field>
      <field name="heading_sp" type="int16_t" units="cdeg">heading setpoint (centidegrees)</field>
      <field name="latitude" type="int32_t" units="degE7">Latitude, expressed as degrees * 1E7</field>
      <field name="longitude" type="int32_t" units="degE7">Longitude, expressed as degrees * 1E7</field>
      <field name="altitude_amsl" type="int16_t" units="m">Altitude above mean sea level (meters)</field>
      <field name="altitude_sp" type="int16_t" units="m">Altitude setpoint relative to the home position (meters)</field>
      <field name="airspeed" type="uint8_t" units="m/s">airspeed (m/s)</field>
      <field name="airspeed_sp" type="uint8_t" units="m/s">airspeed setpoint (m/s)</field>
      <field name="groundspeed" type="uint8_t" units="m/s">groundspeed (m/s)</field>
      <field name="climb_rate" type="int8_t" units="m/s">climb rate (m/s)</field>
      <field name="gps_nsat" type="uint8_t">Number of satellites visible. If unknown, set to 255</field>
      <field enum="GPS_FIX_TYPE" name="gps_fix_type" type="uint8_t">See the GPS_FIX_TYPE enum.</field>
      <field name="battery_remaining" type="uint8_t" units="%">Remaining battery (percentage)</field>
      <field name="temperature" type="int8_t" units="degC">Autopilot temperature (degrees C)</field>
      <field name="temperature_air" type="int8_t" units="degC">Air temperature (degrees C) from airspeed sensor</field>
      <field name="failsafe" type="uint8_t">failsafe (each bit represents a failsafe where 0=ok, 1=failsafe active (bit0:RC, bit1:batt, bit2:GPS, bit3:GCS, bit4:fence)</field>
      <field name="wp_num" type="uint8_t">current waypoint number</field>
      <field name="wp_distance" type="uint16_t" units="m">distance to target (meters)</field>
    <field name="padding" type="uint8_t[8]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="241" name="VIBRATION">
      <description>Vibration levels and accelerometer clipping</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (micros since boot or Unix epoch)</field>
      <field name="vibration_x" type="float">Vibration levels on X-axis</field>
      <field name="vibration_y" type="float">Vibration levels on Y-axis</field>
      <field name="vibration_z" type="float">Vibration levels on Z-axis</field>
      <field name="clipping_0" type="uint32_t">first accelerometer clipping count</field>
      <field name="clipping_1" type="uint32_t">second accelerometer clipping count</field>
      <field name="clipping_2" type="uint32_t">third accelerometer clipping count</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="242" name="HOME_POSITION">
      <description>This message can be requested by sending the MAV_CMD_GET_HOME_POSITION command. The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The position the system will return to and land on. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>
      <field name="latitude" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="longitude" type="int32_t" units="degE7">Longitude (WGS84, in degrees * 1E7</field>
      <field name="altitude" type="int32_t" units="mm">Altitude (AMSL), in meters * 1000 (positive for up)</field>
      <field name="x" type="float" units="m">Local X position of this position in the local coordinate frame</field>
      <field name="y" type="float" units="m">Local Y position of this position in the local coordinate frame</field>
      <field name="z" type="float" units="m">Local Z position of this position in the local coordinate frame</field>
      <field name="q" type="float[4]">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>
      <field name="approach_x" type="float" units="m">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field name="approach_y" type="float" units="m">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field name="approach_z" type="float" units="m">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <extensions />
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="243" name="SET_HOME_POSITION">
      <description>The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>
      <field name="target_system" type="uint8_t">System ID.</field>
      <field name="latitude" type="int32_t" units="degE7">Latitude (WGS84), in degrees * 1E7</field>
      <field name="longitude" type="int32_t" units="degE7">Longitude (WGS84, in degrees * 1E7</field>
      <field name="altitude" type="int32_t" units="mm">Altitude (AMSL), in meters * 1000 (positive for up)</field>
      <field name="x" type="float" units="m">Local X position of this position in the local coordinate frame</field>
      <field name="y" type="float" units="m">Local Y position of this position in the local coordinate frame</field>
      <field name="z" type="float" units="m">Local Z position of this position in the local coordinate frame</field>
      <field name="q" type="float[4]">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>
      <field name="approach_x" type="float" units="m">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field name="approach_y" type="float" units="m">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field name="approach_z" type="float" units="m">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <extensions />
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
    <field name="padding" type="uint8_t[3]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="244" name="MESSAGE_INTERVAL">
      <description>This interface replaces DATA_STREAM</description>
      <field name="message_id" type="uint16_t">The ID of the requested MAVLink message. v1.0 is limited to 254 messages.</field>
      <field name="interval_us" type="int32_t" units="us">The interval between two messages, in microseconds. A value of -1 indicates this stream is disabled, 0 indicates it is not available, &gt; 0 indicates the interval at which it is sent.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="245" name="EXTENDED_SYS_STATE">
      <description>Provides state for additional features</description>
      <field enum="MAV_VTOL_STATE" name="vtol_state" type="uint8_t">The VTOL state if applicable. Is set to MAV_VTOL_STATE_UNDEFINED if UAV is not in VTOL configuration.</field>
      <field enum="MAV_LANDED_STATE" name="landed_state" type="uint8_t">The landed state. Is set to MAV_LANDED_STATE_UNDEFINED if landed state is unknown.</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="246" name="ADSB_VEHICLE">
      <description>The location and information of an ADSB vehicle</description>
      <field name="ICAO_address" type="uint32_t">ICAO address</field>
      <field name="lat" type="int32_t" units="degE7">Latitude, expressed as degrees * 1E7</field>
      <field name="lon" type="int32_t" units="degE7">Longitude, expressed as degrees * 1E7</field>
      <field enum="ADSB_ALTITUDE_TYPE" name="altitude_type" type="uint8_t">Type from ADSB_ALTITUDE_TYPE enum</field>
      <field name="altitude" type="int32_t" units="mm">Altitude(ASL) in millimeters</field>
      <field name="heading" type="uint16_t" units="cdeg">Course over ground in centidegrees</field>
      <field name="hor_velocity" type="uint16_t" units="cm/s">The horizontal velocity in centimeters/second</field>
      <field name="ver_velocity" type="int16_t" units="cm/s">The vertical velocity in centimeters/second, positive is up</field>
      <field name="callsign" type="char[9]">The callsign, 8+null</field>
      <field enum="ADSB_EMITTER_TYPE" name="emitter_type" type="uint8_t">Type from ADSB_EMITTER_TYPE enum</field>
      <field name="tslc" type="uint8_t" units="s">Time since last communication in seconds</field>
      <field display="bitmask" enum="ADSB_FLAGS" name="flags" type="uint16_t">Flags to indicate various statuses including valid data fields</field>
      <field name="squawk" type="uint16_t">Squawk code</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="247" name="COLLISION">
      <description>Information about a potential collision</description>
      <field enum="MAV_COLLISION_SRC" name="src" type="uint8_t">Collision data source</field>
      <field name="id" type="uint32_t">Unique identifier, domain based on src field</field>
      <field enum="MAV_COLLISION_ACTION" name="action" type="uint8_t">Action that is being taken to avoid this collision</field>
      <field enum="MAV_COLLISION_THREAT_LEVEL" name="threat_level" type="uint8_t">How concerned the aircraft is about this collision</field>
      <field name="time_to_minimum_delta" type="float" units="s">Estimated time until collision occurs (seconds)</field>
      <field name="altitude_minimum_delta" type="float" units="m">Closest vertical distance in meters between vehicle and object</field>
      <field name="horizontal_minimum_delta" type="float" units="m">Closest horizontal distance in meteres between vehicle and object</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="248" name="V2_EXTENSION">
      <description>Message implementing parts of the V2 payload specs in V1 frames for transitional support.</description>
      <field name="target_network" type="uint8_t">Network ID (0 for broadcast)</field>
      <field name="target_system" type="uint8_t">System ID (0 for broadcast)</field>
      <field name="target_component" type="uint8_t">Component ID (0 for broadcast)</field>
      <field name="message_type" type="uint16_t">A code that identifies the software component that understands this message (analogous to usb device classes or mime type strings).  If this code is less than 32768, it is considered a 'registered' protocol extension and the corresponding entry should be added to https://github.com/mavlink/mavlink/extension-message-ids.xml.  Software creators can register blocks of message IDs as needed (useful for GCS specific metadata, etc...). Message_types greater than 32767 are considered local experiments and should not be checked in to any widely distributed codebase.</field>
      <field name="payload" type="uint8_t[249]">Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="249" name="MEMORY_VECT">
      <description>Send raw controller memory. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
      <field name="address" type="uint16_t">Starting address of the debug variables</field>
      <field name="ver" type="uint8_t">Version code of the type variable. 0=unknown, type ignored and assumed int16_t. 1=as below</field>
      <field name="type" type="uint8_t">Type code of the memory variables. for ver = 1: 0=16 x int16_t, 1=16 x uint16_t, 2=16 x Q15, 3=16 x 1Q14</field>
      <field name="value" type="int8_t[32]">Memory contents at specified address</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="250" name="DEBUG_VECT">
      <field name="name" type="char[10]">Name</field>
      <field name="time_usec" type="uint64_t" units="us">Timestamp</field>
      <field name="x" type="float">x</field>
      <field name="y" type="float">y</field>
      <field name="z" type="float">z</field>
    <field name="padding" type="uint8_t[2]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="251" name="NAMED_VALUE_FLOAT">
      <description>Send a key-value pair as float. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="name" type="char[10]">Name of the debug variable</field>
      <field name="value" type="float">Floating point value</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="252" name="NAMED_VALUE_INT">
      <description>Send a key-value pair as integer. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="name" type="char[10]">Name of the debug variable</field>
      <field name="value" type="int32_t">Signed integer value</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="253" name="STATUSTEXT">
      <description>Status text message. These messages are printed in yellow in the COMM console of QGroundControl. WARNING: They consume quite some bandwidth, so use only for important status and error messages. If implemented wisely, these messages are buffered on the MCU and sent only at a limited rate (e.g. 10 Hz).</description>
      <field enum="MAV_SEVERITY" name="severity" type="uint8_t">Severity of status. Relies on the definitions within RFC-5424. See enum MAV_SEVERITY.</field>
      <field name="text" type="char[50]">Status text message, without null termination character</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="254" name="DEBUG">
      <description>Send a debug value. The index is used to discriminate between values. These values show up in the plot of QGroundControl as DEBUG N.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="ind" type="uint8_t">index of debug variable</field>
      <field name="value" type="float">DEBUG value</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    
    <message id="256" name="SETUP_SIGNING">
      <description>Setup a MAVLink2 signing key. If called with secret_key of all zero and zero initial_timestamp will disable signing</description>
      <field name="target_system" type="uint8_t">system id of the target</field>
      <field name="target_component" type="uint8_t">component ID of the target</field>
      <field name="secret_key" type="uint8_t[32]">signing key</field>
      <field name="initial_timestamp" type="uint64_t">initial timestamp</field>
    <field name="padding" type="uint8_t[6]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="257" name="BUTTON_CHANGE">
      <description>Report button state change</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="last_change_ms" type="uint32_t" units="ms">Time of last change of button state</field>
      <field name="state" type="uint8_t">Bitmap state of buttons</field>
    <field name="padding" type="uint8_t[7]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="258" name="PLAY_TUNE">
      <description>Control vehicle tone generation (buzzer)</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="tune" type="char[30]">tune in board specific format</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="259" name="CAMERA_INFORMATION">
      <description>WIP: Information about a camera</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="vendor_name" type="uint8_t[32]">Name of the camera vendor</field>
      <field name="model_name" type="uint8_t[32]">Name of the camera model</field>
      <field name="firmware_version" type="uint32_t">Version of the camera firmware (v &lt;&lt; 24 &amp; 0xff = Dev, v &lt;&lt; 16 &amp; 0xff = Patch, v &lt;&lt; 8 &amp; 0xff = Minor, v &amp; 0xff = Major)</field>
      <field name="focal_length" type="float" units="mm">Focal length in mm</field>
      <field name="sensor_size_h" type="float" units="mm">Image sensor size horizontal in mm</field>
      <field name="sensor_size_v" type="float" units="mm">Image sensor size vertical in mm</field>
      <field name="resolution_h" type="uint16_t" units="pix">Image resolution in pixels horizontal</field>
      <field name="resolution_v" type="uint16_t" units="pix">Image resolution in pixels vertical</field>
      <field name="lens_id" type="uint8_t">Reserved for a lens ID</field>
      <field enum="CAMERA_CAP_FLAGS" name="flags" type="uint32_t">CAMERA_CAP_FLAGS enum flags (bitmap) describing camera capabilities.</field>
      <field name="cam_definition_version" type="uint16_t">Camera definition version (iteration)</field>
      <field name="cam_definition_uri" type="char[140]">Camera definition URI (if any, otherwise only basic functions will be available).</field>
    <field name="padding" type="uint8_t[5]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="260" name="CAMERA_SETTINGS">
      <description>WIP: Settings of a camera, can be requested using MAV_CMD_REQUEST_CAMERA_SETTINGS.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field enum="CAMERA_MODE" name="mode_id" type="uint8_t">Camera mode (CAMERA_MODE)</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="261" name="STORAGE_INFORMATION">
      <description>WIP: Information about a storage medium.</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="storage_id" type="uint8_t">Storage ID (1 for first, 2 for second, etc.)</field>
      <field name="storage_count" type="uint8_t">Number of storage devices</field>
      <field name="status" type="uint8_t">Status of storage (0 not available, 1 unformatted, 2 formatted)</field>
      <field name="total_capacity" type="float" units="Mibytes">Total capacity in MiB</field>
      <field name="used_capacity" type="float" units="Mibytes">Used capacity in MiB</field>
      <field name="available_capacity" type="float" units="Mibytes">Available capacity in MiB</field>
      <field name="read_speed" type="float" units="Mibytes/s">Read speed in MiB/s</field>
      <field name="write_speed" type="float" units="Mibytes/s">Write speed in MiB/s</field>
    <field name="padding" type="uint8_t[5]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="262" name="CAMERA_CAPTURE_STATUS">
      <description>WIP: Information about the status of a capture</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="image_status" type="uint8_t">Current status of image capturing (0: idle, 1: capture in progress, 2: interval set but idle, 3: interval set and capture in progress)</field>
      <field name="video_status" type="uint8_t">Current status of video capturing (0: idle, 1: capture in progress)</field>
      <field name="image_interval" type="float" units="s">Image capture interval in seconds</field>
      <field name="recording_time_ms" type="uint32_t" units="ms">Time in milliseconds since recording started</field>
      <field name="available_capacity" type="float" units="Mibytes">Available storage capacity in MiB</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="263" name="CAMERA_IMAGE_CAPTURED">
      <description>Information about a captured image</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="time_utc" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch) in UTC. 0 for unknown.</field>
      <field name="camera_id" type="uint8_t">Camera ID (1 for first, 2 for second, etc.)</field>
      <field name="lat" type="int32_t" units="degE7">Latitude, expressed as degrees * 1E7 where image was taken</field>
      <field name="lon" type="int32_t" units="degE7">Longitude, expressed as degrees * 1E7 where capture was taken</field>
      <field name="alt" type="int32_t" units="m">Altitude in meters, expressed as * 1E3 (AMSL, not WGS84) where image was taken</field>
      <field name="relative_alt" type="int32_t" units="m">Altitude above ground in meters, expressed as * 1E3 where image was taken</field>
      <field name="q" type="float[4]">Quaternion of camera orientation (w, x, y, z order, zero-rotation is 0, 0, 0, 0)</field>
      <field name="image_index" type="int32_t">Zero based index of this image (image count since armed -1)</field>
      <field name="capture_result" type="int8_t">Boolean indicating success (1) or failure (0) while capturing this image.</field>
      <field name="file_url" type="char[205]">URL of image taken. Either local storage or http://foo.jpg if camera provides an HTTP interface.</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="264" name="FLIGHT_INFORMATION">
      <description>WIP: Information about flight since last arming</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="arming_time_utc" type="uint64_t" units="us">Timestamp at arming (microseconds since UNIX epoch) in UTC, 0 for unknown</field>
      <field name="takeoff_time_utc" type="uint64_t" units="us">Timestamp at takeoff (microseconds since UNIX epoch) in UTC, 0 for unknown</field>
      <field name="flight_uuid" type="uint64_t">Universally unique identifier (UUID) of flight, should correspond to name of logfiles</field>
    <field name="padding" type="uint8_t[4]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="265" name="MOUNT_ORIENTATION">
      <description>WIP: Orientation of a mount</description>
      <field name="time_boot_ms" type="uint32_t" units="ms">Timestamp (milliseconds since system boot)</field>
      <field name="roll" type="float" units="deg">Roll in degrees</field>
      <field name="pitch" type="float" units="deg">Pitch in degrees</field>
      <field name="yaw" type="float" units="deg">Yaw in degrees</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="266" name="LOGGING_DATA">
      <description>A message containing logged data (see also MAV_CMD_LOGGING_START)</description>
      <field name="target_system" type="uint8_t">system ID of the target</field>
      <field name="target_component" type="uint8_t">component ID of the target</field>
      <field name="sequence" type="uint16_t">sequence number (can wrap)</field>
      <field name="length" type="uint8_t" units="bytes">data length</field>
      <field name="first_message_offset" type="uint8_t" units="bytes">offset into data where first message starts. This can be used for recovery, when a previous message got lost (set to 255 if no start exists).</field>
      <field name="data" type="uint8_t[249]">logged data</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="267" name="LOGGING_DATA_ACKED">
      <description>A message containing logged data which requires a LOGGING_ACK to be sent back</description>
      <field name="target_system" type="uint8_t">system ID of the target</field>
      <field name="target_component" type="uint8_t">component ID of the target</field>
      <field name="sequence" type="uint16_t">sequence number (can wrap)</field>
      <field name="length" type="uint8_t" units="bytes">data length</field>
      <field name="first_message_offset" type="uint8_t" units="bytes">offset into data where first message starts. This can be used for recovery, when a previous message got lost (set to 255 if no start exists).</field>
      <field name="data" type="uint8_t[249]">logged data</field>
    <field name="padding" type="uint8_t[1]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="268" name="LOGGING_ACK">
      <description>An ack for a LOGGING_DATA_ACKED message</description>
      <field name="target_system" type="uint8_t">system ID of the target</field>
      <field name="target_component" type="uint8_t">component ID of the target</field>
      <field name="sequence" type="uint16_t">sequence number (must match the one in LOGGING_DATA_ACKED)</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="269" name="VIDEO_STREAM_INFORMATION">
      <description>WIP: Information about video stream</description>
      <field name="camera_id" type="uint8_t">Camera ID (1 for first, 2 for second, etc.)</field>
      <field name="status" type="uint8_t">Current status of video streaming (0: not running, 1: in progress)</field>
      <field name="framerate" type="float" units="Hz">Frames per second</field>
      <field name="resolution_h" type="uint16_t" units="pix">Resolution horizontal in pixels</field>
      <field name="resolution_v" type="uint16_t" units="pix">Resolution vertical in pixels</field>
      <field name="bitrate" type="uint32_t" units="b/s">Bit rate in bits per second</field>
      <field name="rotation" type="uint16_t" units="deg">Video image rotation clockwise</field>
      <field name="uri" type="char[230]">Video stream URI</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="270" name="SET_VIDEO_STREAM_SETTINGS">
      <description>WIP: Message that sets video stream settings</description>
      <field name="target_system" type="uint8_t">system ID of the target</field>
      <field name="target_component" type="uint8_t">component ID of the target</field>
      <field name="camera_id" type="uint8_t">Camera ID (1 for first, 2 for second, etc.)</field>
      <field name="framerate" type="float" units="Hz">Frames per second (set to -1 for highest framerate possible)</field>
      <field name="resolution_h" type="uint16_t" units="pix">Resolution horizontal in pixels (set to -1 for highest resolution possible)</field>
      <field name="resolution_v" type="uint16_t" units="pix">Resolution vertical in pixels (set to -1 for highest resolution possible)</field>
      <field name="bitrate" type="uint32_t" units="b/s">Bit rate in bits per second (set to -1 for auto)</field>
      <field name="rotation" type="uint16_t" units="deg">Video image rotation clockwise (0-359 degrees)</field>
      <field name="uri" type="char[230]">Video stream URI</field>
    <field name="padding" type="uint8_t[9]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="299" name="WIFI_CONFIG_AP">
      <description>Configure AP SSID and Password.</description>
      <field name="ssid" type="char[32]">Name of Wi-Fi network (SSID). Leave it blank to leave it unchanged.</field>
      <field name="password" type="char[64]">Password. Leave it blank for an open AP.</field>
    <field name="padding" type="uint8_t[16]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="300" name="PROTOCOL_VERSION">
      <description>WIP: Version and capability of protocol version. This message is the response to REQUEST_PROTOCOL_VERSION and is used as part of the handshaking to establish which MAVLink version should be used on the network. Every node should respond to REQUEST_PROTOCOL_VERSION to enable the handshaking. Library implementers should consider adding this into the default decoding state machine to allow the protocol core to respond directly.</description>
      <field name="version" type="uint16_t">Currently active MAVLink version number * 100: v1.0 is 100, v2.0 is 200, etc.</field>
      <field name="min_version" type="uint16_t">Minimum MAVLink version supported</field>
      <field name="max_version" type="uint16_t">Maximum MAVLink version supported (set to the same value as version by default)</field>
      <field name="spec_version_hash" type="uint8_t[8]">The first 8 bytes (not characters printed in hex!) of the git hash.</field>
      <field name="library_version_hash" type="uint8_t[8]">The first 8 bytes (not characters printed in hex!) of the git hash.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    
    <message id="310" name="UAVCAN_NODE_STATUS">
      <description>General status information of an UAVCAN node. Please refer to the definition of the UAVCAN message "uavcan.protocol.NodeStatus" for the background information. The UAVCAN specification is available at http://uavcan.org.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="uptime_sec" type="uint32_t" units="s">The number of seconds since the start-up of the node.</field>
      <field enum="UAVCAN_NODE_HEALTH" name="health" type="uint8_t">Generalized node health status.</field>
      <field enum="UAVCAN_NODE_MODE" name="mode" type="uint8_t">Generalized operating mode.</field>
      <field name="sub_mode" type="uint8_t">Not used currently.</field>
      <field name="vendor_specific_status_code" type="uint16_t">Vendor-specific status information.</field>
    <field name="padding" type="uint8_t[15]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="311" name="UAVCAN_NODE_INFO">
      <description>General information describing a particular UAVCAN node. Please refer to the definition of the UAVCAN service "uavcan.protocol.GetNodeInfo" for the background information. This message should be emitted by the system whenever a new node appears online, or an existing node reboots. Additionally, it can be emitted upon request from the other end of the MAVLink channel (see MAV_CMD_UAVCAN_GET_NODE_INFO). It is also not prohibited to emit this message unconditionally at a low frequency. The UAVCAN specification is available at http://uavcan.org.</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="uptime_sec" type="uint32_t" units="s">The number of seconds since the start-up of the node.</field>
      <field name="name" type="char[80]">Node name string. For example, "sapog.px4.io".</field>
      <field name="hw_version_major" type="uint8_t">Hardware major version number.</field>
      <field name="hw_version_minor" type="uint8_t">Hardware minor version number.</field>
      <field name="hw_unique_id" type="uint8_t[16]">Hardware unique 128-bit ID.</field>
      <field name="sw_version_major" type="uint8_t">Software major version number.</field>
      <field name="sw_version_minor" type="uint8_t">Software minor version number.</field>
      <field name="sw_vcs_commit" type="uint32_t">Version control system (VCS) revision identifier (e.g. git short commit hash). Zero if unknown.</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="320" name="PARAM_EXT_REQUEST_READ">
      <description>Request to read the value of a parameter with the either the param_id string id or param_index.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="param_id" type="char[16]">Parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_index" type="int16_t">Parameter index. Set to -1 to use the Parameter ID field as identifier (else param_id will be ignored)</field>
    <field name="padding" type="uint8_t[12]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="321" name="PARAM_EXT_REQUEST_LIST">
      <description>Request all parameters of this component. After this request, all parameters are emitted.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="322" name="PARAM_EXT_VALUE">
      <description>Emit the value of a parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows them to re-request missing parameters after a loss or timeout.</description>
      <field name="param_id" type="char[16]">Parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_value" type="char[128]">Parameter value</field>
      <field enum="MAV_PARAM_EXT_TYPE" name="param_type" type="uint8_t">Parameter type: see the MAV_PARAM_EXT_TYPE enum for supported data types.</field>
      <field name="param_count" type="uint16_t">Total number of parameters</field>
      <field name="param_index" type="uint16_t">Index of this parameter</field>
    <field name="padding" type="uint8_t[11]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="323" name="PARAM_EXT_SET">
      <description>Set a parameter value. In order to deal with message loss (and retransmission of PARAM_EXT_SET), when setting a parameter value and the new value is the same as the current value, you will immediately get a PARAM_ACK_ACCEPTED response. If the current state is PARAM_ACK_IN_PROGRESS, you will accordingly receive a PARAM_ACK_IN_PROGRESS in response.</description>
      <field name="target_system" type="uint8_t">System ID</field>
      <field name="target_component" type="uint8_t">Component ID</field>
      <field name="param_id" type="char[16]">Parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_value" type="char[128]">Parameter value</field>
      <field enum="MAV_PARAM_EXT_TYPE" name="param_type" type="uint8_t">Parameter type: see the MAV_PARAM_EXT_TYPE enum for supported data types.</field>
    <field name="padding" type="uint8_t[13]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="324" name="PARAM_EXT_ACK">
      <description>Response from a PARAM_EXT_SET message.</description>
      <field name="param_id" type="char[16]">Parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field name="param_value" type="char[128]">Parameter value (new value if PARAM_ACK_ACCEPTED, current value otherwise)</field>
      <field enum="MAV_PARAM_EXT_TYPE" name="param_type" type="uint8_t">Parameter type: see the MAV_PARAM_EXT_TYPE enum for supported data types.</field>
      <field enum="PARAM_ACK" name="param_result" type="uint8_t">Result code: see the PARAM_ACK enum for possible codes.</field>
    <field name="padding" type="uint8_t[14]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
    <message id="330" name="OBSTACLE_DISTANCE">
      <description>Obstacle distances in front of the sensor, starting from the left in increment degrees to the right</description>
      <field name="time_usec" type="uint64_t" units="us">Timestamp (microseconds since system boot or since UNIX epoch)</field>
      <field enum="MAV_DISTANCE_SENSOR" name="estimator_type" type="uint8_t">Class id of the distance sensor type.</field>
      <field name="distances" type="uint8_t[12]">Distance of obstacles in front of the sensor starting on the left side. A value of 0 means no obstacle. In a array element, each unit corresponds to 1m.</field>
      <field name="increment" type="uint8_t" units="deg">Angular width in degrees of each array element.</field>
    <field name="padding" type="uint8_t[10]">Padding for encryption</field><field name="tag" type="uint8_t[16]">128 bit message signature</field></message>
  </messages>
</mavlink>